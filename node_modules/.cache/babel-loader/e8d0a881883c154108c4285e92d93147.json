{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-c2f1a09c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_date_picker, {\n    modelValue: $data.selectedDate,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedDate = $event),\n    type: \"date\",\n    placeholder: \"选择日期\",\n    onChange: $options.fetchReservations\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\", \"onChange\"])]);\n}","map":{"version":3,"mappings":";;;;;AACOA,OAAK,EAAC;;;;;uBAAXC,oBAIM,KAJN,cAIM,CAHJC,aAAmHC,yBAAnH,EAAmH;gBAA1FC,kBAA0F;+DAA1FA,qBAAYC,OAA8E;AAA5EC,QAAI,EAAC,MAAuE;AAAhEC,eAAW,EAAC,MAAoD;AAA5CC,YAAM,EAAEC;AAAoC,GAAnH;;AAAA,+BAGI,CAJN","names":["class","_createElementBlock","_createVNode","_component_el_date_picker","$data","$event","type","placeholder","onChange","$options"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\User\\reserve.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <el-date-picker v-model=\"selectedDate\" type=\"date\" placeholder=\"选择日期\" @change=\"fetchReservations\"></el-date-picker>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedDate: '',\r\n      reservations: [],\r\n      doctorId: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.doctorId = this.$route.params.doctorId;\r\n  },\r\n  methods: {\r\n    async fetchReservations() {\r\n      try {\r\n        const formattedDate = this.formatDate(this.selectedDate);\r\n        const response = await axios.get(`http://localhost:8081/reserve/all?doctorId=${this.doctorId}&reserveTime=${formattedDate}`);\r\n        this.reservations = response.data.data;\r\n      } catch (error) {\r\n        console.error('Error fetching reservations:', error);\r\n      }\r\n    },formatDate(date) {\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, '0');\r\n      const day = String(date.getDate()).padStart(2, '0');\r\n      return `${year}-${month}-${day}`;\r\n    },\r\n    async reserveTime() {\r\n      try {\r\n      } catch (error) {\r\n        console.error('Error reserving time:', error);\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  margin: 20px auto;\r\n  max-width: 800px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}