{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"layout\"\n};\nconst _hoisted_2 = {\n  \"slot-scope\": \"scope\"\n};\nconst _hoisted_3 = {\n  class: \"tab_header\"\n};\nconst _hoisted_4 = {\n  style: {\n    \"font-weight\": \"600\"\n  }\n};\nconst _hoisted_5 = {\n  class: \"operate\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_table, {\n    data: $data.res\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"name\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"template\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString(_ctx.scope.row.name), 1\n      /* TEXT */\n      ), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", {\n        onClick: _cache[0] || (_cache[0] = $event => $options.handleEdit(_ctx.scope.$index, _ctx.scope.row))\n      }, \"修改\"), _createElementVNode(\"span\", {\n        onClick: _cache[1] || (_cache[1] = $event => $options.handleDelete(_ctx.scope.$index, _ctx.scope.row))\n      }, \"删除\")])]), _createCommentVNode(\" 这里要实现 多个表格共用一个表头，故需做判断，当表格要渲染的数据为default这个数组的时候，才显示表头的label值 \"), _createCommentVNode(\" 注意：当label无值的时候，还是会占用空间，故当前表格在页面上会出现一个代表表头的空行，需要手动更改（重写）Element表格的 thead样式 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.scope.row.ext, item => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: item.id\n        }, [_createVNode(_component_el_table, {\n          data: item,\n          border: \"\",\n          class: _normalizeClass(item !== _ctx.scope.row.ext.default ? 'tab-thead-style' : ''),\n          style: {\n            \"box-sizing\": \"border-box\",\n            \"border-top\": \"none\"\n          },\n          \"span-method\": $options.objectSpanMethod\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            label: item === _ctx.scope.row.ext.default ? '运送到' : '',\n            prop: \"area\"\n          }, null, 8\n          /* PROPS */\n          , [\"label\"]), _createVNode(_component_el_table_column, {\n            label: item === _ctx.scope.row.ext.default ? '首重' : '',\n            prop: \"weight\"\n          }, null, 8\n          /* PROPS */\n          , [\"label\"]), _createVNode(_component_el_table_column, {\n            label: item === _ctx.scope.row.ext.default ? '运费' : '',\n            prop: \"first_price\"\n          }, null, 8\n          /* PROPS */\n          , [\"label\"]), _createVNode(_component_el_table_column, {\n            label: item === _ctx.scope.row.ext.default ? '续重' : '',\n            prop: \"weight_incre\"\n          }, null, 8\n          /* PROPS */\n          , [\"label\"]), _createVNode(_component_el_table_column, {\n            label: item === _ctx.scope.row.ext.default ? '最终运费' : '',\n            prop: \"extend_price\"\n          }, null, 8\n          /* PROPS */\n          , [\"label\"])]),\n          _: 2\n          /* DYNAMIC */\n\n        }, 1032\n        /* PROPS, DYNAMIC_SLOTS */\n        , [\"data\", \"class\", \"span-method\"])]);\n      }), 128\n      /* KEYED_FRAGMENT */\n      ))])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\"])]);\n}","map":{"version":3,"mappings":"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","names":["class","style","_createElementBlock","_createVNode","_component_el_table","data","$data","_component_el_table_column","prop","_createElementVNode","_toDisplayString","_ctx","row","name","onClick","$options","$index","_createCommentVNode","_Fragment","_renderList","ext","item","key","id","border","default","label"],"sourceRoot":"","sources":["D:\\小学期vscode\\demo01\\src\\views\\Department\\demo.vue"],"sourcesContent":["<template>\r\n    <div class=\"layout\">\r\n      <el-table :data=\"res\" >\r\n        <el-table-column prop=\"name\">\r\n          <template slot-scope=\"scope\">\r\n            <div class=\"tab_header\">\r\n              <span style=\"font-weight:600;\">{{scope.row.name}}</span>\r\n              <div class=\"operate\">\r\n                <span @click=\"handleEdit(scope.$index, scope.row)\">修改</span>\r\n                <span @click=\"handleDelete(scope.$index, scope.row)\">删除</span>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 这里要实现 多个表格共用一个表头，故需做判断，当表格要渲染的数据为default这个数组的时候，才显示表头的label值 -->\r\n            <!-- 注意：当label无值的时候，还是会占用空间，故当前表格在页面上会出现一个代表表头的空行，需要手动更改（重写）Element表格的 thead样式 -->\r\n\r\n            <div v-for=\"item in (scope.row.ext)\" :key=\"item.id\">\r\n              <el-table :data=\"item\" border :class=\"item!==scope.row.ext.default?'tab-thead-style':''\"  style=\"box-sizing: border-box;border-top:none;\" :span-method=\"objectSpanMethod\">\r\n                <el-table-column :label=\"item===scope.row.ext.default?'运送到':''\" prop=\"area\"></el-table-column>\r\n                <el-table-column :label=\"item===scope.row.ext.default?'首重':''\" prop=\"weight\"></el-table-column>\r\n                <el-table-column :label=\"item===scope.row.ext.default?'运费':''\"   prop=\"first_price\"></el-table-column>\r\n                <el-table-column :label=\"item===scope.row.ext.default?'续重':''\"  prop=\"weight_incre\"></el-table-column>\r\n                <el-table-column :label=\"item===scope.row.ext.default?'最终运费':''\"  prop=\"extend_price\"></el-table-column>\r\n              </el-table>\r\n            </div>\r\n\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      // res 参考的是后端返回的数据格式，\r\n      res: [\r\n        {\r\n          id: 1,\r\n          dealer_id: 0,\r\n          name: '成都运费模板',\r\n          type: 1,\r\n          ext: {\r\n            default: [{ area: '默认', type: 1, region: '1', weight: '首重d', weight_incre: '续重d', first_price: '运费d', extend_price: '最终运费d' }],\r\n            free: [{ area: 'free', type: 1, region: '1', weight: '首重f', weight_incre: '续重f', first_price: '运费f', extend_price: '最终运费f' }, { area: 'free', type: 1, region: '1', weight: '首重f', weight_incre: '续重f', first_price: '运费f', extend_price: '最终运费f' }],\r\n            pay: [{ area: 'pay', type: 1, region: '1', weight: '首重p', weight_incre: '续重p', first_price: '运费p', extend_price: '最终运费p' }, { area: 'pay', type: 1, region: '1', weight: '首重p', weight_incre: '续重p', first_price: '运费p', extend_price: '最终运费p' }, { area: 'pay', type: 1, region: '1', weight: '首重p', weight_incre: '续重p', first_price: '运费p', extend_price: '最终运费p' }]\r\n          }\r\n        },\r\n        {\r\n          id: 2,\r\n          dealer_id: 0,\r\n          name: '重庆运费模板',\r\n          type: 2,\r\n          ext: {\r\n            default: [{ area: '默认1', type: 1, region: '1', weight: '首重d', weight_incre: '续重d', first_price: '运费d', extend_price: '最终运费d' }],\r\n            free: [{ area: 'free1', type: 1, region: '1', weight: '首重f', weight_incre: '续重f', first_price: '运费f', extend_price: '最终运费f' }, { area: 'free', type: 1, region: '1', weight: '首重f', weight_incre: '续重f', first_price: '运费f', extend_price: '最终运费f' }],\r\n            pay: [{ area: 'pay1', type: 1, region: '1', weight: '首重p', weight_incre: '续重p', first_price: '运费p', extend_price: '最终运费p' }, { area: 'pay', type: 1, region: '1', weight: '首重p', weight_incre: '续重p', first_price: '运费p', extend_price: '最终运费p' }, { area: 'pay', type: 1, region: '1', weight: '首重p', weight_incre: '续重p', first_price: '运费p', extend_price: '最终运费p' }, { area: 'pay1', type: 1, region: '1', weight: '首重p', weight_incre: '续重p', first_price: '运费p', extend_price: '最终运费p' }, { area: 'pay', type: 1, region: '1', weight: '首重p', weight_incre: '续重p', first_price: '运费p', extend_price: '最终运费p' }, { area: 'pay', type: 1, region: '1', weight: '首重p', weight_incre: '续重p', first_price: '运费p', extend_price: '最终运费p' }]\r\n          }\r\n        }\r\n\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    handleEdit (index, row) {\r\n      console.log(index, row)\r\n    },\r\n    handleDelete (index, row) {\r\n      console.log(index, row)\r\n    },\r\n    objectSpanMethod ({ row, column, rowIndex, columnIndex }) {\r\n      if (columnIndex === 0) {\r\n        if (rowIndex === 0) {\r\n          let maxLen\r\n          this.res.forEach(val => {\r\n            const arr = [val.ext.default.length, val.ext.free.length, val.ext.pay.length]\r\n            arr.sort((a, b) => a - b)// arr数组  按数字大小从小到大排序\r\n            maxLen = arr.pop()// 取出排序后的数组arr中的最后一个元素\r\n          })\r\n          return {\r\n            // 这个rowspan应该据 ext的default,pay,free的长度不同来定，取最大长度\r\n            rowspan: maxLen,\r\n            colspan: 1\r\n          }\r\n        } else {\r\n          return {\r\n            rowspan: 0,\r\n            colspan: 0\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.layout{\r\n\r\n  .tab_header{\r\n   color:#333;\r\n   padding:0 5px 0 5px;\r\n   height:45px;\r\n   line-height:45px;\r\n   border:1px solid #eee;display:flex;\r\n   justify-content: space-between;\r\n   background:rgb(233, 225, 225);\r\n  }\r\n  .operate{\r\n    span{\r\n      font-size: 14px;\r\n      margin-right: 20px;\r\n      margin-right:20px;\r\n      color:#409EFF;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  /* 处理多个表格共用一个表头时，表头处出现多余空行的问题 （label置空后还是占据空间问题） */\r\n  .tab-thead-style{\r\n      thead{\r\n          display: none;\r\n      }\r\n  }\r\n\r\n}\r\n</style>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}