{"ast":null,"code":"import axios from \"axios\";\nimport Header from \"../userLayout/Header/header.vue\";\nexport default {\n  components: {\n    Header\n  },\n\n  data() {\n    return {\n      form: {},\n      username: sessionStorage.getItem(\"username\"),\n      userId: sessionStorage.getItem(\"userId\"),\n      isLoading: false,\n      medicineList: [],\n      medicineTypes: [],\n      selectedType: \"\",\n      searchTerm: \"\"\n    };\n  },\n\n  mounted() {\n    this.getMedicineList();\n    this.fetchMedicineTypes();\n    console.log(this.username);\n    console.log(tuserId);\n  },\n\n  computed: {\n    filteredMedicineList() {\n      if (this.searchTerm === \"\") {\n        return this.medicineList.filter(item => item.typeName === this.selectedType || this.selectedType === \"\");\n      } else {\n        const reg = new RegExp(this.searchTerm, \"i\");\n        return this.medicineList.filter(item => item.medicineName.search(reg) !== -1 && (item.typeName === this.selectedType || this.selectedType === \"\"));\n      }\n    }\n\n  },\n  methods: {\n    async fetchMedicineTypes() {\n      try {\n        const res = await axios.get(\"http://localhost:8080/allMedicineType\");\n        this.medicineTypes.push(...res.data.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async getMedicineList() {\n      try {\n        const response = await axios.get(\"http://localhost:8080/allMedicine\");\n        this.medicineList = response.data.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    equipmentSearch() {\n      // 根据用户输入的搜索内容进行筛选过滤\n      this.filteredMedicineList;\n    },\n\n    detail(item) {\n      this.$router.push({\n        path: '/detail',\n        query: {\n          medicineId: item.medicineId\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA0CA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AAEA,eAAe;AACXC,YAAU,EAAE;AACRD;AADQ,GADD;;AAIXE,MAAI,GAAG;AACH,WAAO;AACHC,UAAI,EAAE,EADH;AAEHC,cAAQ,EAAEC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAFP;AAGHC,YAAM,EAAEF,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAHL;AAIHE,eAAS,EAAE,KAJR;AAKHC,kBAAY,EAAE,EALX;AAMHC,mBAAa,EAAE,EANZ;AAOHC,kBAAY,EAAE,EAPX;AAQHC,gBAAU,EAAE;AART,KAAP;AAUH,GAfU;;AAiBXC,SAAO,GAAG;AACN,SAAKC,eAAL;AACA,SAAKC,kBAAL;AACAC,WAAO,CAACC,GAAR,CAAY,KAAKb,QAAjB;AACIY,WAAO,CAACC,GAAR,CAAYC,OAAZ;AACP,GAtBU;;AAwBXC,UAAQ,EAAE;AACNC,wBAAoB,GAAG;AACnB,UAAI,KAAKR,UAAL,KAAoB,EAAxB,EAA4B;AACxB,eAAO,KAAKH,YAAL,CAAkBY,MAAlB,CAAyBC,IAAG,IAAKA,IAAI,CAACC,QAAL,KAAkB,KAAKZ,YAAvB,IAAuC,KAAKA,YAAL,KAAsB,EAA9F,CAAP;AACJ,OAFA,MAEO;AACH,cAAMa,GAAE,GAAI,IAAIC,MAAJ,CAAW,KAAKb,UAAhB,EAA4B,GAA5B,CAAZ;AACA,eAAO,KAAKH,YAAL,CAAkBY,MAAlB,CACFC,IAAD,IAAWA,IAAI,CAACI,YAAL,CAAkBC,MAAlB,CAAyBH,GAAzB,MAAkC,CAAC,CAApC,KAA2CF,IAAI,CAACC,QAAL,KAAkB,KAAKZ,YAAvB,IAAuC,KAAKA,YAAL,KAAsB,EAAxG,CADP,CAAP;AAGJ;AACH;;AAVK,GAxBC;AAsCXiB,SAAO,EAAE;AACL,UAAMb,kBAAN,GAA2B;AACvB,UAAI;AACA,cAAMc,GAAE,GAAI,MAAM9B,KAAK,CAAC+B,GAAN,CAAU,uCAAV,CAAlB;AACA,aAAKpB,aAAL,CAAmBqB,IAAnB,CAAwB,GAAGF,GAAG,CAAC3B,IAAJ,CAASA,IAApC;AACJ,OAHA,CAGE,OAAO8B,KAAP,EAAc;AACZhB,eAAO,CAACC,GAAR,CAAYe,KAAZ;AACJ;AACH,KARI;;AASL,UAAMlB,eAAN,GAAwB;AACpB,UAAI;AACA,cAAMmB,QAAO,GAAI,MAAMlC,KAAK,CAAC+B,GAAN,CAAU,mCAAV,CAAvB;AACA,aAAKrB,YAAL,GAAoBwB,QAAQ,CAAC/B,IAAT,CAAcA,IAAlC;AACJ,OAHA,CAGE,OAAO8B,KAAP,EAAc;AACZhB,eAAO,CAACgB,KAAR,CAAcA,KAAd;AACJ;AACH,KAhBI;;AAiBLE,mBAAe,GAAG;AACd;AACA,WAAKd,oBAAL;AACH,KApBI;;AAqBLe,UAAM,CAACb,IAAD,EAAO;AACf,WAAKc,OAAL,CAAaL,IAAb,CAAkB;AAChBM,YAAI,EAAE,SADU;AAEhBC,aAAK,EAAE;AACLC,oBAAU,EAAEjB,IAAI,CAACiB;AADZ;AAFS,OAAlB;AAMD;;AA5BQ;AAtCE,CAAf","names":["axios","Header","components","data","form","username","sessionStorage","getItem","userId","isLoading","medicineList","medicineTypes","selectedType","searchTerm","mounted","getMedicineList","fetchMedicineTypes","console","log","tuserId","computed","filteredMedicineList","filter","item","typeName","reg","RegExp","medicineName","search","methods","res","get","push","error","response","equipmentSearch","detail","$router","path","query","medicineId"],"sourceRoot":"","sources":["D:\\Dev\\Front\\finalProject\\src\\views\\User\\medicine.vue"],"sourcesContent":["<template>\r\n    <div class=\"header\">\r\n        <Header></Header>\r\n    </div>\r\n    <div class=\"body\">\r\n        <div class=\"container\">\r\n            <div class=\"select\">\r\n                <el-select v-model=\"selectedType\" placeholder=\"请选择药品类型\">\r\n                    <el-option v-for=\"type in medicineTypes\" :key=\"type.id\" :label=\"type.typeName\" :value=\"type.typeName\"\r\n                        @click=\"selectedType = type.typeName\"></el-option>\r\n                </el-select>\r\n            </div>\r\n\r\n            <div class=\"header-search\">\r\n                <input type=\"text\" v-model=\"searchTerm\" class=\"search-input\" placeholder=\"请输入搜索内容\" />\r\n                <button class=\"search-btn\" @click=\"equipmentSearch\">搜索</button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"equipment-list\">\r\n            <div class=\"equipment-item\" v-for=\"(item, index) in filteredMedicineList\" :key=\"index\">\r\n                <div class=\"img-wrapper\">\r\n                    <img :src=\"item.picture\" alt=\"\" style=\"width: 200px; height: auto;\" />\r\n                </div>\r\n                <div class=\"info-wrapper\">\r\n                    <div class=\"title\">{{ item.medicineName }}</div>\r\n                    <div class=\"price\">单价: ￥{{ item.price }}</div>\r\n                    <div class=\"feature\">\r\n                        <h2>功能:</h2> {{ item.feature }}\r\n                    </div>\r\n                    <div class=\"material\">\r\n                        <h2>类型：</h2>{{ item.typeName }}\r\n                    </div>\r\n                    <button class=\"buy-button\" @click=\"detail(item)\">查看详情</button>\r\n                    <button class=\"collect-button\" @click=\"insertCollect(item)\">加入购物车</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n    \r\n<script>\r\nimport axios from \"axios\";\r\nimport Header from \"../userLayout/Header/header.vue\";\r\n\r\nexport default {\r\n    components: {\r\n        Header,\r\n    },\r\n    data() {\r\n        return {\r\n            form: {},\r\n            username: sessionStorage.getItem(\"username\"),\r\n            userId: sessionStorage.getItem(\"userId\"),\r\n            isLoading: false,\r\n            medicineList: [],\r\n            medicineTypes: [],\r\n            selectedType: \"\",\r\n            searchTerm: \"\",\r\n        };\r\n    },\r\n\r\n    mounted() {\r\n        this.getMedicineList();\r\n        this.fetchMedicineTypes();\r\n        console.log(this.username)\r\n            console.log(tuserId)\r\n    },\r\n\r\n    computed: {\r\n        filteredMedicineList() {\r\n            if (this.searchTerm === \"\") {\r\n                return this.medicineList.filter(item => item.typeName === this.selectedType || this.selectedType === \"\");\r\n            } else {\r\n                const reg = new RegExp(this.searchTerm, \"i\");\r\n                return this.medicineList.filter(\r\n                    (item) => (item.medicineName.search(reg) !== -1) && (item.typeName === this.selectedType || this.selectedType === \"\")\r\n                );\r\n            }\r\n        },\r\n        \r\n    },\r\n\r\n    methods: {\r\n        async fetchMedicineTypes() {\r\n            try {\r\n                const res = await axios.get(\"http://localhost:8080/allMedicineType\");\r\n                this.medicineTypes.push(...res.data.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        },\r\n        async getMedicineList() {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:8080/allMedicine\");\r\n                this.medicineList = response.data.data;\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        },\r\n        equipmentSearch() {\r\n            // 根据用户输入的搜索内容进行筛选过滤\r\n            this.filteredMedicineList;\r\n        },\r\n        detail(item) {\r\n      this.$router.push({\r\n        path: '/detail',\r\n        query: {\r\n          medicineId: item.medicineId,\r\n        },\r\n      });\r\n    },\r\n    },\r\n};\r\n</script>\r\n    \r\n<style scoped>\r\n.body {\r\n    margin-top: 100px;\r\n}\r\n\r\nh2 {\r\n    font-weight: bold;\r\n    font-family: \"Microsoft YaHei\", 黑体, sans-serif;\r\n}\r\n\r\n.equipment-item {\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    background-color: #fff;\r\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\r\n    border: 1px solid #cccccc;\r\n    /* 添加淡黑色边框 */\r\n}\r\n\r\n.equipment-list {\r\n    margin-top: 15px;\r\n}\r\n\r\n.img-wrapper {\r\n    width: 35%;\r\n    padding: 10px 10px 10px 200px;\r\n    /* 左右留白150px，上下10px /\r\n    margin: 0 10px 0 0;\r\n    / 水平间距10px */\r\n}\r\n\r\n.img-wrapper img {\r\n    display: block;\r\n    width: 100%;\r\n    height: auto;\r\n}\r\n\r\n.info-wrapper {\r\n    width: 165%;\r\n    padding: 10px 150px 10px 10px;\r\n    /* 左右留白150px，上下10px /\r\n    margin: 0 0 0 10px;\r\n    / 水平间距10px */\r\n}\r\n\r\n.title {\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n    color: #333;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.price {\r\n    font-size: 16px;\r\n    color: red;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.feature,\r\n.material {\r\n    font-size: 14px;\r\n    color: #555;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.buy-button {\r\n    padding: 8px 18px;\r\n    border: none;\r\n    background-color: #1bb1c4;\r\n    color: #fff;\r\n    cursor: pointer;\r\n}\r\n\r\n.collect-button {\r\n    padding: 8px 18px;\r\n    border: none;\r\n    background-color: #da7bc4;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n}\r\n\r\n.buy-button:hover {\r\n    background-color: #ff9f3e;\r\n}\r\n\r\n.select {\r\n    margin-left: 10%;\r\n}\r\n\r\n.header-search {\r\n    margin-right: 35%;\r\n}\r\n\r\n.search-input {\r\n    border: 2px solid #7ec8e3;\r\n    border-radius: 0;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    color: #333;\r\n    width: 400px;\r\n    height: 30px;\r\n    border-right-color: transparent;\r\n    /* 将右侧边框的颜色设置为透明 */\r\n}\r\n\r\n.search-btn {\r\n    height: 46px;\r\n    width: 100px;\r\n    border: none;\r\n    border-radius: 0px;\r\n    padding: 6px 16px;\r\n    font-size: 14px;\r\n    color: #fff;\r\n    background-color: #3d7f00;\r\n    cursor: pointer;\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}