{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      selectedDepartment: '',\n      doctors: []\n    };\n  },\n\n  computed: {\n    filteredDoctors() {\n      if (!this.selectedDepartment) {\n        return this.doctors;\n      }\n\n      return this.doctors.filter(doctor => doctor.department === this.selectedDepartment);\n    }\n\n  },\n\n  mounted() {\n    this.fetchDoctors();\n  },\n\n  methods: {\n    async fetchDoctors() {\n      try {\n        const response = await axios.get('http://localhost:8081/doctor/findByDepartment', {\n          params: {\n            department: this.selectedDepartment\n          }\n        });\n        this.doctors = response.data.data;\n      } catch (error) {\n        console.error('Error fetching doctors:', error);\n      }\n    },\n\n    handleDepartmentChange() {\n      this.filteredDoctors = this.doctors.filter(doctor => doctor.department === this.selectedDepartment);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoCA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,wBAAkB,EAAE,EADf;AAELC,aAAO,EAAE;AAFJ,KAAP;AAID,GANY;;AAObC,UAAQ,EAAE;AACRC,mBAAe,GAAG;AAChB,UAAI,CAAC,KAAKH,kBAAV,EAA8B;AAC5B,eAAO,KAAKC,OAAZ;AACF;;AACA,aAAO,KAAKA,OAAL,CAAaG,MAAb,CAAoBC,MAAK,IAAKA,MAAM,CAACC,UAAP,KAAsB,KAAKN,kBAAzD,CAAP;AACF;;AANQ,GAPG;;AAebO,SAAO,GAAG;AACR,SAAKC,YAAL;AACD,GAjBY;;AAkBbC,SAAO,EAAE;AACP,UAAMD,YAAN,GAAqB;AACnB,UAAI;AACF,cAAME,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAN,CAAU,+CAAV,EAA2D;AAChFC,gBAAM,EAAE;AAAEN,sBAAU,EAAE,KAAKN;AAAnB;AADwE,SAA3D,CAAvB;AAGA,aAAKC,OAAL,GAAeS,QAAQ,CAACX,IAAT,CAAcA,IAA7B;AACF,OALA,CAKE,OAAOc,KAAP,EAAc;AACdC,eAAO,CAACD,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACF;AACD,KAVM;;AAWPE,0BAAsB,GAAG;AACvB,WAAKZ,eAAL,GAAuB,KAAKF,OAAL,CAAaG,MAAb,CAAoBC,MAAK,IAAKA,MAAM,CAACC,UAAP,KAAsB,KAAKN,kBAAzD,CAAvB;AACD;;AAbM;AAlBI,CAAf","names":["axios","data","selectedDepartment","doctors","computed","filteredDoctors","filter","doctor","department","mounted","fetchDoctors","methods","response","get","params","error","console","handleDepartmentChange"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\User\\doctorList.vue"],"sourcesContent":["<template>\r\n\r\n  <el-select v-model=\"selectedDepartment\" placeholder=\"请选择科室\" @change=\"handleDepartmentChange\">\r\n    <el-option label=\"呼吸内科\" value=\"呼吸内科\"></el-option>\r\n    <el-option label=\"消化内科\" value=\"消化内科\"></el-option>\r\n    <el-option label=\"神经内科\" value=\"神经内科\"></el-option>\r\n    <el-option label=\"心血管内科\" value=\"心血管内科\"></el-option>\r\n    <el-option label=\"肾内科\" value=\"肾内科\"></el-option>\r\n    <el-option label=\"血液内科\" value=\"血液内科\"></el-option>\r\n    <el-option label=\"免疫科\" value=\"免疫科\"></el-option>\r\n  </el-select>\r\n\r\n  <el-table :data=\"doctors\" border stripe v-if=\"doctors.length > 0\">\r\n      <el-table-column prop=\"doctorId\" label=\"医生ID\"></el-table-column>\r\n      <el-table-column prop=\"username\" label=\"医生名\"></el-table-column>\r\n      <el-table-column prop=\"department\" label=\"科室\"></el-table-column>\r\n      <el-table-column prop=\"title\" label=\"职称\">  \r\n        <template v-slot=\"scope\">\r\n        <span v-if=\"scope.row.title === '1'\">医师</span>\r\n        <span v-else-if=\"scope.row.title === '2'\">主治医师</span>\r\n        <span v-else-if=\"scope.row.title === '3'\">副主任医师</span>\r\n        <span v-else-if=\"scope.row.title === '4'\">主任医师</span>\r\n      </template></el-table-column>\r\n      <el-table-column prop=\"introduction\" label=\"介绍\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"120\">\r\n        <template #default=\"scope\">\r\n          <el-button type=\"primary\" size=\"small\" @click=\"reserveDoctor(scope.row)\">\r\n            点击预约\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  <p v-else>暂无医生信息</p>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedDepartment: '',\r\n      doctors: []\r\n    }\r\n  },\r\n  computed: {\r\n    filteredDoctors() {\r\n      if (!this.selectedDepartment) {\r\n        return this.doctors;\r\n      }\r\n      return this.doctors.filter(doctor => doctor.department === this.selectedDepartment);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchDoctors()\r\n  },\r\n  methods: {\r\n    async fetchDoctors() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8081/doctor/findByDepartment', {\r\n          params: { department: this.selectedDepartment }\r\n        })\r\n        this.doctors = response.data.data\r\n      } catch (error) {\r\n        console.error('Error fetching doctors:', error)\r\n      }\r\n    },\r\n    handleDepartmentChange() {\r\n      this.filteredDoctors = this.doctors.filter(doctor => doctor.department === this.selectedDepartment);\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  margin: 20px auto;\r\n  max-width: 800px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}