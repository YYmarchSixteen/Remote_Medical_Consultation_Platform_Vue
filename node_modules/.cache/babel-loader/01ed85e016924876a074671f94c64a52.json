{"ast":null,"code":"export default {\n  data() {\n    return {\n      chats: [],\n      currentFriend: null,\n      newMessage: ''\n    };\n  },\n\n  computed: {\n    currentFriendName() {\n      if (this.currentFriend !== null) {\n        return this.friends.find(friend => friend.id === this.currentFriend).name;\n      }\n\n      return '';\n    },\n\n    currentFriendMessages() {\n      if (this.currentFriend !== null) {\n        return this.friends.find(friend => friend.id === this.currentFriend).messages;\n      }\n\n      return [];\n    }\n\n  },\n  methods: {\n    handleFriendSelect(index) {\n      this.currentFriend = index;\n    },\n\n    sendMessage() {\n      if (this.newMessage.trim() !== '') {\n        const friendIndex = this.friends.findIndex(friend => friend.id === this.currentFriend);\n        this.friends[friendIndex].messages.push({\n          id: Date.now(),\n          sender: 'me',\n          content: this.newMessage\n        });\n        this.newMessage = '';\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA6BA,eAAe;AACbA,MAAI,GAAG;AACL,WAAO;AACLC,WAAK,EAAE,EADF;AAELC,mBAAa,EAAE,IAFV;AAGLC,gBAAU,EAAE;AAHP,KAAP;AAKD,GAPY;;AAQbC,UAAQ,EAAE;AACRC,qBAAiB,GAAG;AAClB,UAAI,KAAKH,aAAL,KAAuB,IAA3B,EAAiC;AAC/B,eAAO,KAAKI,OAAL,CAAaC,IAAb,CAAkBC,MAAK,IAAKA,MAAM,CAACC,EAAP,KAAc,KAAKP,aAA/C,EAA8DQ,IAArE;AACF;;AACA,aAAO,EAAP;AACD,KANO;;AAORC,yBAAqB,GAAG;AACtB,UAAI,KAAKT,aAAL,KAAuB,IAA3B,EAAiC;AAC/B,eAAO,KAAKI,OAAL,CAAaC,IAAb,CAAkBC,MAAK,IAAKA,MAAM,CAACC,EAAP,KAAc,KAAKP,aAA/C,EAA8DU,QAArE;AACF;;AACA,aAAO,EAAP;AACF;;AAZQ,GARG;AAsBbC,SAAO,EAAE;AACPC,sBAAkB,CAACC,KAAD,EAAQ;AACxB,WAAKb,aAAL,GAAqBa,KAArB;AACD,KAHM;;AAIPC,eAAW,GAAG;AACZ,UAAI,KAAKb,UAAL,CAAgBc,IAAhB,OAA2B,EAA/B,EAAmC;AACjC,cAAMC,WAAU,GAAI,KAAKZ,OAAL,CAAaa,SAAb,CAAuBX,MAAK,IAAKA,MAAM,CAACC,EAAP,KAAc,KAAKP,aAApD,CAApB;AACA,aAAKI,OAAL,CAAaY,WAAb,EAA0BN,QAA1B,CAAmCQ,IAAnC,CAAwC;AAAEX,YAAE,EAAEY,IAAI,CAACC,GAAL,EAAN;AAAkBC,gBAAM,EAAE,IAA1B;AAAgCC,iBAAO,EAAE,KAAKrB;AAA9C,SAAxC;AACA,aAAKA,UAAL,GAAkB,EAAlB;AACF;AACF;;AAVO;AAtBI,CAAf","names":["data","chats","currentFriend","newMessage","computed","currentFriendName","friends","find","friend","id","name","currentFriendMessages","messages","methods","handleFriendSelect","index","sendMessage","trim","friendIndex","findIndex","push","Date","now","sender","content"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\Doctor\\messageList.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-container\">\r\n    <div class=\"friend-list\">\r\n      <el-card class=\"friend-card\">\r\n        <div id=\"header\" class=\"friend-header\">好友列表</div>\r\n        <el-scrollbar wrap-class=\"friend-scrollbar\">\r\n          <el-menu class=\"friend-menu\" :default-active=\"currentFriend\" @select=\"handleFriendSelect\" mode=\"vertical\">\r\n            <el-menu-item v-for=\"friend in friends\" :key=\"friend.id\" :index=\"friend.id\">{{ friend.name }}</el-menu-item>\r\n          </el-menu>\r\n        </el-scrollbar>\r\n      </el-card>\r\n    </div>\r\n    <div class=\"chat-content\">\r\n      <el-card class=\"chat-card\">\r\n        <div id=\"header\" class=\"chat-header\">{{ currentFriendName }}</div>\r\n        <el-scrollbar wrap-class=\"chat-scrollbar\">\r\n          <div class=\"chat-messages\">\r\n            <div v-for=\"message in currentFriendMessages\" :key=\"message.id\" class=\"chat-message\" :class=\"{ 'sent-message': message.sender !== 'me' }\">\r\n              {{ message.content }}\r\n            </div>\r\n          </div>\r\n        </el-scrollbar>\r\n        <el-input class=\"chat-input\" v-model=\"newMessage\" @keyup.enter=\"sendMessage\" placeholder=\"请输入消息\" clearable></el-input>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      chats: [],\r\n      currentFriend: null,\r\n      newMessage: ''\r\n    };\r\n  },\r\n  computed: {\r\n    currentFriendName() {\r\n      if (this.currentFriend !== null) {\r\n        return this.friends.find(friend => friend.id === this.currentFriend).name;\r\n      }\r\n      return '';\r\n    },\r\n    currentFriendMessages() {\r\n      if (this.currentFriend !== null) {\r\n        return this.friends.find(friend => friend.id === this.currentFriend).messages;\r\n      }\r\n      return [];\r\n    }\r\n  },\r\n  methods: {\r\n    handleFriendSelect(index) {\r\n      this.currentFriend = index;\r\n    },\r\n    sendMessage() {\r\n      if (this.newMessage.trim() !== '') {\r\n        const friendIndex = this.friends.findIndex(friend => friend.id === this.currentFriend);\r\n        this.friends[friendIndex].messages.push({ id: Date.now(), sender: 'me', content: this.newMessage });\r\n        this.newMessage = '';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chat-container {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\n.friend-list {\r\n  width: 250px;\r\n  flex-shrink: 0;\r\n  overflow: hidden;\r\n}\r\n\r\n.friend-card {\r\n  height: 100%;\r\n}\r\n\r\n.friend-header {\r\n  padding: 10px;\r\n}\r\n\r\n.friend-scrollbar {\r\n  height: calc(100% - 40px);\r\n}\r\n\r\n.friend-menu {\r\n  height: 100%;\r\n}\r\n\r\n.chat-content {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chat-card {\r\n  height: 100%;\r\n}\r\n\r\n.chat-header {\r\n  padding: 10px;\r\n}\r\n\r\n.chat-scrollbar {\r\n  height: calc(100% - 40px);\r\n}\r\n\r\n.chat-messages {\r\n  padding: 10px;\r\n}\r\n\r\n.chat-message {\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.sent-message {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.chat-input {\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}