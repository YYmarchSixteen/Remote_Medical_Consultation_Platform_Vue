{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-c2f1a09c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"预约\");\n\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_date_picker, {\n    modelValue: $data.selectedDate,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedDate = $event),\n    type: \"date\",\n    placeholder: \"选择日期\",\n    \"picker-options\": $data.pickerOptions,\n    onChange: $options.handleDateChange\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\", \"picker-options\", \"onChange\"]), _createVNode(_component_el_table, {\n    data: $data.tableData,\n    border: \"\",\n    style: {\n      \"width\": \"450px\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"time\",\n      label: \"时间\",\n      width: \"150\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"column2\",\n      label: \"预约状态\",\n      width: \"150\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"column3\",\n      label: \"操作\",\n      width: \"150\"\n    }, {\n      default: _withCtx(scope => [scope.row.column2 === '无预约' ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        type: \"primary\",\n        onClick: $event => $options.reserve(scope.row)\n      }, {\n        default: _withCtx(() => [_hoisted_2]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"已预约\"))]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\"])]);\n}","map":{"version":3,"mappings":";;;;;AACOA,OAAK,EAAC;;;iDAWsF;;;;;;;;;;;;;;uBAXjGC,oBAgBM,KAhBN,cAgBM,CAfJC,aACiBC,yBADjB,EACiB;gBADQC,kBACR;+DADQA,qBAAYC,OACpB;AADsBC,QAAI,EAAC,MAC3B;AADkCC,eAAW,EAAC,MAC9C;AADsD,sBAAgBH,mBACtE;AADsFI,YAAM,EAAEC;AAC9F,GADjB;;AAAA,iDAeI,EAZJP,aAWWQ,mBAXX,EAWW;AAXAC,QAAI,EAAEP,eAWN;AAXiBQ,UAAM,EAAN,EAWjB;AAXwBC,SAAoB,EAApB;AAAA;AAAA;AAWxB,GAXX;sBACE,MACkB,CADlBX,aACkBY,0BADlB,EACkB;AADDC,UAAI,EAAC,MACJ;AADWC,WAAK,EAAC,IACjB;AADsBC,WAAK,EAAC;AAC5B,KADlB,CACkB,EAClBf,aACkBY,0BADlB,EACkB;AADDC,UAAI,EAAC,SACJ;AADcC,WAAK,EAAC,MACpB;AAD2BC,WAAK,EAAC;AACjC,KADlB,CADkB,EAGlBf,aAKkBY,0BALlB,EAKkB;AALDC,UAAI,EAAC,SAKJ;AALcC,WAAK,EAAC,IAKpB;AALyBC,WAAK,EAAC;AAK/B,KALlB;wBACoBC,KAChB,IADqB,CACWA,KAAK,CAACC,GAAN,CAAUC,OAAV,KAAiB,uBAAjDC,aAAuGC,oBAAvG,EAAuG;cAAA;AAA5FhB,YAAI,EAAC,SAAuF;AAAzCiB,eAAK,YAAEd,iBAAQS,KAAK,CAACC,GAAd;AAAkC,OAAvG;0BAAyF,MAAE;;;;OAA3F;;AAAA,uCACAlB,oBAAuB,MAAvB,EAAuBuB,UAAvB,EAAa,KAAb,EAFqB;;;;KADzB,CAHkB;;;;GAFpB;;AAAA,aAYI,CAhBN","names":["class","_createElementBlock","_createVNode","_component_el_date_picker","$data","$event","type","placeholder","onChange","$options","_component_el_table","data","border","style","_component_el_table_column","prop","label","width","scope","row","column2","_createBlock","_component_el_button","onClick","_hoisted_3"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\User\\reserve.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <el-date-picker v-model=\"selectedDate\" type=\"date\" placeholder=\"选择日期\" :picker-options=\"pickerOptions\" @change=\"handleDateChange\">\r\n    </el-date-picker>\r\n\r\n    <el-table :data=\"tableData\" border style=\"width: 450px\">\r\n      <el-table-column prop=\"time\" label=\"时间\" width=\"150\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"column2\" label=\"预约状态\" width=\"150\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"column3\" label=\"操作\" width=\"150\">\r\n        <template v-slot=\"scope\">\r\n          <el-button type=\"primary\" v-if=\"scope.row.column2 === '无预约'\" @click=\"reserve(scope.row)\">预约</el-button>\r\n          <span v-else>已预约</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedDate: '',\r\n      reservations: [],\r\n      doctorId: '',\r\n      tableData: [],\r\n      pickerOptions: {\r\n        disabledDate(time) {\r\n          console.log('当前日期:', time);\r\n          // 获取今天的日期\r\n          const today = new Date();\r\n          // 将时间设置为当天的00:00:00\r\n          today.setHours(0, 0, 0, 0);\r\n          // 将要比较的时间也设置为00:00:00\r\n          time.setHours(0, 0, 0, 0);\r\n          // 如果要比较的时间小于今天的日期，则禁用选择\r\n          return time < today;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.generateTableData()\r\n    this.doctorId = this.$route.params.doctorId\r\n  },\r\n  methods: {\r\n    reserve(row) {\r\n\r\n      const params = new URLSearchParams()\r\n      params.append('userId', 1)\r\n      params.append('doctorId', this.doctorId)\r\n      params.append('reserveTime', this.selectedDate)\r\n      params.append('sequence', row.index)\r\n      axios.post('http://localhost:8081/reserve/addReserve', params)\r\n      //window.location.reload()\r\n      row.column2 = '已预约'\r\n    },\r\n    generateTableData() {\r\n      const startTime = new Date('2024-04-07T08:00:00')\r\n      for (let i = 0; i < 15; i++) {\r\n        const time = new Date(startTime.getTime() + i * 15 * 60000)\r\n        this.tableData.push({\r\n          index: i + 1, // Adding unique index\r\n          time: time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n          column2: '无预约',\r\n          column3: ''\r\n        })\r\n      }\r\n    },\r\n    handleDateChange() {\r\n      this.selectedDate = this.selectedDate ? this.formatDate(this.selectedDate) : ''\r\n      console.log('Selected date:', this.selectedDate)\r\n    },\r\n    formatDate(date) {\r\n      const year = date.getFullYear()\r\n      const month = String(date.getMonth() + 1).padStart(2, '0')\r\n      const day = String(date.getDate()).padStart(2, '0')\r\n      return `${year}-${month}-${day}`\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  margin: 20px auto;\r\n  max-width: 800px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}