{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      userList: [],\n      currentUserId: null,\n      currentUsername: '',\n      currentChat: [],\n      newMessage: ''\n    };\n  },\n\n  mounted() {\n    this.fetchUserList();\n  },\n\n  methods: {\n    fetchUserList() {\n      axios.get(`http://localhost:8081/chat/doctorChatList?doctorId=13`).then(response => {\n        this.userList = response.data.data;\n\n        if (this.userList.length > 0) {\n          this.currentUsername = this.userList[0].username;\n          this.currentUserId = this.userList[0].userId;\n          this.fetchChatContent(this.currentUserId);\n        }\n      }).catch(error => {\n        console.error('Error fetching user list:', error);\n      });\n    },\n\n    fetchChatContent(userId) {\n      axios.get(`http://localhost:8081/chat/all?doctorId=13&userId=${userId}`).then(response => {\n        this.currentChat = response.data.data.map(message => {\n          const formattedTime = new Date(message.sendTime).toLocaleString();\n          return { ...message,\n            formattedTime\n          };\n        });\n      }).catch(error => {\n        console.error('Error fetching chat content:', error);\n      });\n    },\n\n    handleUserSelect(username) {\n      this.currentUsername = username;\n      const selectedUser = this.userList.find(user => user.username === username);\n\n      if (selectedUser) {\n        this.currentUserId = selectedUser.userId;\n        this.fetchChatContent(this.currentUserId);\n      }\n    },\n\n    redirectToMedicalRecord() {\n      this.$router.push('/doctor/emr');\n    },\n\n    redirectToPrescription() {\n      this.$router.push('/doctor/prescription');\n    },\n\n    sendMessage() {\n      if (this.newMessage.trim() !== '') {\n        // 发送消息逻辑\n        this.newMessage = ''; // 滚动到底部\n\n        this.$nextTick(() => {\n          const chatContent = this.$refs.chatContent;\n          chatContent.scrollTop = chatContent.scrollHeight;\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkDA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,cAAQ,EAAE,EADL;AAELC,mBAAa,EAAE,IAFV;AAGLC,qBAAe,EAAE,EAHZ;AAILC,iBAAW,EAAE,EAJR;AAKLC,gBAAU,EAAE;AALP,KAAP;AAOD,GATY;;AAUbC,SAAO,GAAG;AACR,SAAKC,aAAL;AACD,GAZY;;AAabC,SAAO,EAAE;AACPD,iBAAa,GAAG;AACdR,WAAK,CAACU,GAAN,CAAW,uDAAX,EACGC,IADH,CACQC,QAAO,IAAK;AAChB,aAAKV,QAAL,GAAgBU,QAAQ,CAACX,IAAT,CAAcA,IAA9B;;AACA,YAAI,KAAKC,QAAL,CAAcW,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,eAAKT,eAAL,GAAuB,KAAKF,QAAL,CAAc,CAAd,EAAiBY,QAAxC;AACA,eAAKX,aAAL,GAAqB,KAAKD,QAAL,CAAc,CAAd,EAAiBa,MAAtC;AACA,eAAKC,gBAAL,CAAsB,KAAKb,aAA3B;AACF;AACD,OARH,EASGc,KATH,CASSC,KAAI,IAAK;AACdC,eAAO,CAACD,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;AACD,OAXH;AAYD,KAdM;;AAePF,oBAAgB,CAACD,MAAD,EAAS;AACvBf,WAAK,CAACU,GAAN,CAAW,qDAAoDK,MAAO,EAAtE,EACGJ,IADH,CACQC,QAAO,IAAK;AAChB,aAAKP,WAAL,GAAmBO,QAAQ,CAACX,IAAT,CAAcA,IAAd,CAAmBmB,GAAnB,CAAuBC,OAAM,IAAK;AACnD,gBAAMC,aAAY,GAAI,IAAIC,IAAJ,CAASF,OAAO,CAACG,QAAjB,EAA2BC,cAA3B,EAAtB;AACA,iBAAO,EAAE,GAAGJ,OAAL;AAAcC;AAAd,WAAP;AACD,SAHkB,CAAnB;AAID,OANH,EAOGL,KAPH,CAOSC,KAAI,IAAK;AACdC,eAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACD,OATH;AAUD,KA1BM;;AA2BPQ,oBAAgB,CAACZ,QAAD,EAAW;AACzB,WAAKV,eAAL,GAAuBU,QAAvB;AACA,YAAMa,YAAW,GAAI,KAAKzB,QAAL,CAAc0B,IAAd,CAAmBC,IAAG,IAAKA,IAAI,CAACf,QAAL,KAAkBA,QAA7C,CAArB;;AACA,UAAIa,YAAJ,EAAkB;AAChB,aAAKxB,aAAL,GAAqBwB,YAAY,CAACZ,MAAlC;AACA,aAAKC,gBAAL,CAAsB,KAAKb,aAA3B;AACF;AACD,KAlCM;;AAmCP2B,2BAAuB,GAAG;AACxB,WAAKC,OAAL,CAAaC,IAAb,CAAkB,aAAlB;AACD,KArCM;;AAsCPC,0BAAsB,GAAG;AACvB,WAAKF,OAAL,CAAaC,IAAb,CAAkB,sBAAlB;AACD,KAxCM;;AAyCPE,eAAW,GAAG;AACZ,UAAI,KAAK5B,UAAL,CAAgB6B,IAAhB,OAA2B,EAA/B,EAAmC;AACjC;AACA,aAAK7B,UAAL,GAAkB,EAAlB,CAFiC,CAIjC;;AACA,aAAK8B,SAAL,CAAe,MAAM;AACnB,gBAAMC,WAAU,GAAI,KAAKC,KAAL,CAAWD,WAA/B;AACAA,qBAAW,CAACE,SAAZ,GAAwBF,WAAW,CAACG,YAApC;AACD,SAHD;AAIF;AACF;;AApDO;AAbI,CAAf","names":["axios","data","userList","currentUserId","currentUsername","currentChat","newMessage","mounted","fetchUserList","methods","get","then","response","length","username","userId","fetchChatContent","catch","error","console","map","message","formattedTime","Date","sendTime","toLocaleString","handleUserSelect","selectedUser","find","user","redirectToMedicalRecord","$router","push","redirectToPrescription","sendMessage","trim","$nextTick","chatContent","$refs","scrollTop","scrollHeight"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\Doctor\\messageList.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-container\">\r\n    <!-- 用户列表 -->\r\n    <div class=\"user-list\">\r\n      <el-card class=\"user-card\">\r\n        <div id=\"header\" class=\"user-header\">用户列表</div>\r\n        <el-scrollbar wrap-class=\"user-scrollbar\">\r\n          <el-menu class=\"user-menu\" :default-active=\"currentUserId\" mode=\"vertical\">\r\n            <el-menu-item v-for=\"user in userList\" :key=\"user.userId\" :index=\"user.userId\"\r\n                          @click=\"handleUserSelect(user.username)\">\r\n              {{ user.username }}\r\n            </el-menu-item>\r\n          </el-menu>\r\n        </el-scrollbar>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 聊天内容 -->\r\n    <div class=\"chat-content\" ref=\"chatContent\">\r\n      <el-card class=\"chat-card\">\r\n        <!-- 聊天头部 -->\r\n        <div id=\"header\" class=\"chat-header\">{{ currentUsername }}<br><br>\r\n          <!-- 写病历和开处方按钮 -->\r\n          <div class=\"action-buttons\">\r\n            <el-button type=\"primary\" @click=\"redirectToMedicalRecord\">写病历</el-button>\r\n            <el-button type=\"success\" @click=\"redirectToPrescription\">开处方</el-button>\r\n          </div>\r\n        </div>\r\n        <el-scrollbar wrap-class=\"chat-scrollbar\">\r\n          <div class=\"chat-messages\">\r\n            <div v-for=\"message in currentChat\" :key=\"message.id\" class=\"chat-message\"\r\n                 :class=\"{ 'sent-message': message.sender !== 'user', 'received-message': message.sender === 'user' }\">\r\n              <div v-if=\"message.sender === 'user'\" class=\"user-message\">\r\n                {{ message.message }}<br>{{ message.formattedTime }}\r\n              </div>\r\n              <div v-else class=\"doctor-message\">\r\n                {{ message.message }}<br>{{ message.formattedTime }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-scrollbar>\r\n        <!-- 输入框 -->\r\n        <el-input class=\"chat-input\" v-model=\"newMessage\" @keyup.enter=\"sendMessage\" placeholder=\"请输入消息\"\r\n                  clearable></el-input>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userList: [],\r\n      currentUserId: null,\r\n      currentUsername: '',\r\n      currentChat: [],\r\n      newMessage: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUserList()\r\n  },\r\n  methods: {\r\n    fetchUserList() {\r\n      axios.get(`http://localhost:8081/chat/doctorChatList?doctorId=13`)\r\n        .then(response => {\r\n          this.userList = response.data.data\r\n          if (this.userList.length > 0) {\r\n            this.currentUsername = this.userList[0].username\r\n            this.currentUserId = this.userList[0].userId\r\n            this.fetchChatContent(this.currentUserId)\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching user list:', error)\r\n        })\r\n    },\r\n    fetchChatContent(userId) {\r\n      axios.get(`http://localhost:8081/chat/all?doctorId=13&userId=${userId}`)\r\n        .then(response => {\r\n          this.currentChat = response.data.data.map(message => {\r\n            const formattedTime = new Date(message.sendTime).toLocaleString()\r\n            return { ...message, formattedTime }\r\n          })\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching chat content:', error)\r\n        })\r\n    },\r\n    handleUserSelect(username) {\r\n      this.currentUsername = username\r\n      const selectedUser = this.userList.find(user => user.username === username)\r\n      if (selectedUser) {\r\n        this.currentUserId = selectedUser.userId\r\n        this.fetchChatContent(this.currentUserId)\r\n      }\r\n    },\r\n    redirectToMedicalRecord() {\r\n      this.$router.push('/doctor/emr')\r\n    },\r\n    redirectToPrescription() {\r\n      this.$router.push('/doctor/prescription')\r\n    },\r\n    sendMessage() {\r\n      if (this.newMessage.trim() !== '') {\r\n        // 发送消息逻辑\r\n        this.newMessage = ''\r\n\r\n        // 滚动到底部\r\n        this.$nextTick(() => {\r\n          const chatContent = this.$refs.chatContent\r\n          chatContent.scrollTop = chatContent.scrollHeight\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chat-container {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\n.user-list {\r\n  width: 250px;\r\n  flex-shrink: 0;\r\n  overflow: hidden;\r\n}\r\n\r\n.user-card {\r\n  height: 100%;\r\n}\r\n\r\n.user-header {\r\n  padding: 10px;\r\n}\r\n\r\n.user-scrollbar {\r\n  height: calc(100% - 40px);\r\n}\r\n\r\n.user-menu {\r\n  height: 100%;\r\n}\r\n\r\n.chat-content {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chat-card {\r\n  height: 100%;\r\n}\r\n\r\n.chat-header {\r\n  padding: 10px;\r\n}\r\n\r\n.chat-scrollbar {\r\n  height: calc(100% - 40px);\r\n}\r\n\r\n.chat-messages {\r\n  padding: 10px;\r\n}\r\n\r\n.chat-message {\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.sent-message {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.chat-input {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.sent-message {\r\n  background-color: #f0f0f0;\r\n  text-align: right;\r\n}\r\n\r\n.received-message {\r\n  background-color: #e3f2fd;\r\n  text-align: left;\r\n}\r\n\r\n.chat-message {\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n  word-wrap: break-word;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}