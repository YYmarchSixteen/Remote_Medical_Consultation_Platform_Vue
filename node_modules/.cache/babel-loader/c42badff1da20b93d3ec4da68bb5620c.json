{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, withKeys as _withKeys, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-d6fc84e2\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"user-list\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"header\",\n  class: \"user-header\"\n}, \"用户列表\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = {\n  class: \"chat-content\"\n};\nconst _hoisted_5 = {\n  id: \"header\",\n  class: \"chat-header\"\n};\nconst _hoisted_6 = {\n  class: \"chat-messages\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"user-message\"\n};\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_9 = {\n  key: 1,\n  class: \"doctor-message\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_menu_item = _resolveComponent(\"el-menu-item\");\n\n  const _component_el_menu = _resolveComponent(\"el-menu\");\n\n  const _component_el_scrollbar = _resolveComponent(\"el-scrollbar\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_card, {\n    class: \"user-card\"\n  }, {\n    default: _withCtx(() => [_hoisted_3, _createVNode(_component_el_scrollbar, {\n      \"wrap-class\": \"user-scrollbar\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_menu, {\n        class: \"user-menu\",\n        \"default-active\": $data.currentUserId,\n        mode: \"vertical\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.userList, user => {\n          return _openBlock(), _createBlock(_component_el_menu_item, {\n            key: user.userId,\n            index: user.userId,\n            onClick: $event => $options.handleUserSelect(user.username)\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(user.username), 1\n            /* TEXT */\n            )]),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1032\n          /* PROPS, DYNAMIC_SLOTS */\n          , [\"index\", \"onClick\"]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        ))]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"default-active\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  })]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_card, {\n    class: \"chat-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, _toDisplayString($data.currentUsername), 1\n    /* TEXT */\n    ), _createVNode(_component_el_scrollbar, {\n      \"wrap-class\": \"chat-scrollbar\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.currentChat, message => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: message.id,\n          class: _normalizeClass([\"chat-message\", {\n            'sent-message': message.sender !== 'user',\n            'received-message': message.sender === 'user'\n          }])\n        }, [message.sender === 'user' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createTextVNode(_toDisplayString(message.message), 1\n        /* TEXT */\n        ), _hoisted_8, _createTextVNode(_toDisplayString(message.formattedTime), 1\n        /* TEXT */\n        )])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createTextVNode(_toDisplayString(message.message), 1\n        /* TEXT */\n        ), _hoisted_10, _createTextVNode(_toDisplayString(message.formattedTime), 1\n        /* TEXT */\n        )]))], 2\n        /* CLASS */\n        );\n      }), 128\n      /* KEYED_FRAGMENT */\n      ))])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_input, {\n      class: \"chat-input\",\n      modelValue: $data.newMessage,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newMessage = $event),\n      onKeyup: _withKeys($options.sendMessage, [\"enter\"]),\n      placeholder: \"请输入消息\",\n      clearable: \"\"\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\", \"onKeyup\"])]),\n    _: 1\n    /* STABLE */\n\n  })])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","id","_createElementBlock","_createVNode","_component_el_card","_hoisted_3","_component_el_scrollbar","_component_el_menu","$data","mode","_Fragment","_renderList","user","_createBlock","_component_el_menu_item","key","userId","index","onClick","$options","username","_toDisplayString","message","sender","_hoisted_8","formattedTime","_hoisted_10","_component_el_input","$event","onKeyup","placeholder","clearable"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\Doctor\\messageList.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-container\">\r\n    <div class=\"user-list\">\r\n      <el-card class=\"user-card\">\r\n        <div id=\"header\" class=\"user-header\">用户列表</div>\r\n        <el-scrollbar wrap-class=\"user-scrollbar\">\r\n          <el-menu class=\"user-menu\" :default-active=\"currentUserId\" mode=\"vertical\">\r\n            <el-menu-item v-for=\"user in userList\" :key=\"user.userId\" :index=\"user.userId\" @click=\"handleUserSelect(user.username)\">\r\n              {{ user.username }}\r\n            </el-menu-item>\r\n          </el-menu>\r\n        </el-scrollbar>\r\n      </el-card>\r\n    </div>\r\n    <div class=\"chat-content\">\r\n      <el-card class=\"chat-card\">\r\n        <div id=\"header\" class=\"chat-header\">{{ currentUsername }}</div>\r\n        <el-scrollbar wrap-class=\"chat-scrollbar\">\r\n          <div class=\"chat-messages\">\r\n            <div v-for=\"message in currentChat\" :key=\"message.id\" class=\"chat-message\" :class=\"{ 'sent-message': message.sender !== 'user', 'received-message': message.sender === 'user' }\">\r\n              <div v-if=\"message.sender === 'user'\" class=\"user-message\">\r\n                {{ message.message }}<br>{{ message.formattedTime }}\r\n              </div>\r\n              <div v-else class=\"doctor-message\">\r\n                {{ message.message }}<br>{{ message.formattedTime }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-scrollbar>\r\n        <el-input class=\"chat-input\" v-model=\"newMessage\" @keyup.enter=\"sendMessage\" placeholder=\"请输入消息\" clearable></el-input>\r\n      </el-card>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userList: [],\r\n      currentUserId: null,\r\n      currentUsername: '',\r\n      currentChat: [],\r\n      newMessage: ''\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchUserList();\r\n  },\r\n  methods: {\r\n    fetchUserList() {\r\n      axios.get(`http://localhost:8081/chat/doctorChatList?doctorId=13`)\r\n        .then(response => {\r\n          this.userList = response.data.data;\r\n          if (this.userList.length > 0) {\r\n            this.currentUsername = this.userList[0].username;\r\n            this.currentUserId = this.userList[0].userId;\r\n            this.fetchChatContent(this.currentUserId);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching user list:', error);\r\n        });\r\n    },\r\n    handleUserSelect(username) {\r\n      this.currentUsername = username;\r\n    },\r\n    fetchChatContent(userId) {\r\n      axios.get(`http://localhost:8081/chat/all?doctorId=13&userId=${userId}`)\r\n        .then(response => {\r\n          this.currentChat = response.data.data.map(message => {\r\n            const formattedTime = new Date(message.sendTime).toLocaleString();\r\n            return { ...message, formattedTime };\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching chat content:', error);\r\n        });\r\n    },\r\n    sendMessage() {\r\n      if (this.newMessage.trim() !== '') {\r\n        this.newMessage = '';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chat-container {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\n.user-list {\r\n  width: 250px;\r\n  flex-shrink: 0;\r\n  overflow: hidden;\r\n}\r\n\r\n.user-card {\r\n  height: 100%;\r\n}\r\n\r\n.user-header {\r\n  padding: 10px;\r\n}\r\n\r\n.user-scrollbar {\r\n  height: calc(100% - 40px);\r\n}\r\n\r\n.user-menu {\r\n  height: 100%;\r\n}\r\n\r\n.chat-content {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chat-card {\r\n  height: 100%;\r\n}\r\n\r\n.chat-header {\r\n  padding: 10px;\r\n}\r\n\r\n.chat-scrollbar {\r\n  height: calc(100% - 40px);\r\n}\r\n\r\n.chat-messages {\r\n  padding: 10px;\r\n}\r\n\r\n.chat-message {\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.sent-message {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.chat-input {\r\n  margin-top: 10px;\r\n}\r\n.sent-message {\r\n  background-color: #f0f0f0;\r\n  text-align: right; /* 右对齐，用于医生发送的消息 */\r\n}\r\n\r\n.received-message {\r\n  background-color: #e3f2fd; /* 更换背景颜色，用于用户发送的消息 */\r\n  text-align: left; /* 左对齐，用于用户发送的消息 */\r\n}\r\n\r\n.chat-message {\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n  max-width: 100%; /* 限制消息的最大宽度，使得长消息不会占满整个容器 */\r\n  word-wrap: break-word; /* 自动换行，避免长单词溢出容器 */\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}