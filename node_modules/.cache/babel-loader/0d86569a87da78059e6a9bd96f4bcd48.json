{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6810563a\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"header\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" = \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_Header)]), _hoisted_2], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;AACOA,OAAK,EAAC;;;iDAEL;;;;;6DAFNC,oBAEM,KAFN,cAEM,CADJC,aAAiBC,iBAAjB,CACI,CAFN","names":["class","_createElementVNode","_createVNode","_component_Header"],"sourceRoot":"","sources":["D:\\Dev\\Front\\demo01\\src\\views\\User\\personal.vue"],"sourcesContent":["<template>\r\n  <div class=\"header\">\r\n    <Header></Header>\r\n  </div>\r\n  =\r\n</template>\r\n  \r\n<script>\r\nimport axios from 'axios'\r\nimport Header from '../userLayout/Header/header.vue';\r\n\r\nexport default {\r\n  components: {\r\n        Header\r\n    },\r\n  data() {\r\n    return {\r\n      userInfo: {\r\n        username:'',\r\n      },\r\n      passwordForm: {\r\n        oldPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      },\r\n      rules: {\r\n        address: [{ required: true, trigger: 'blur' }],\r\n        telephone: [{ required: true,  trigger: 'blur' }]\r\n      },\r\n      passwordRules: {\r\n        oldPassword: [{ required: true, message: '请输入旧密码', trigger: 'blur' }],\r\n        newPassword: [\r\n          { required: true, message: '请输入新密码', trigger: 'blur' },\r\n          { min: 6, max: 20, message: '密码长度为6-20位', trigger: 'blur' }\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: '请再次输入新密码', trigger: 'blur' },\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (value !== this.passwordForm.newPassword) {\r\n                callback(new Error('两次输入的密码不一致'))\r\n              } else {\r\n                callback()\r\n              }\r\n            },\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      },\r\n      activeTab: 'basic-info'\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUserInfo()\r\n  },\r\n  methods: {  \r\n  }\r\n}\r\n</script>\r\n  \r\n<style scoped>\r\n.personal-center {\r\n  margin: 20px auto;\r\n  max-width: 800px;\r\n  margin-top: 100px;\r\n}\r\n\r\n.card-header {\r\n  background-color: #f5f7fa;\r\n  padding: 12px 20px;\r\n}\r\n\r\n.card-content {\r\n  padding: 20px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}