{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      selectedDate: '',\n      reservations: [],\n      doctorId: '',\n      tableData: []\n    };\n  },\n\n  mounted() {\n    this.generateTableData();\n    this.doctorId = this.$route.params.doctorId;\n  },\n\n  methods: {\n    reserve(row) {\n      console.log('Reserved for:', row.time);\n      console.log('Reserved for:', row.index); // 这里可以添加预约的具体逻辑，比如调用接口等\n\n      row.column2 = '已预约';\n    },\n\n    generateTableData() {\n      const startTime = new Date('2024-04-07T08:00:00');\n\n      for (let i = 0; i < 15; i++) {\n        const time = new Date(startTime.getTime() + i * 15 * 60000);\n        this.tableData.push({\n          index: i + 1,\n          // Adding unique index\n          time: time.toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          }),\n          column2: '无预约',\n          column3: ''\n        });\n      }\n    },\n\n    handleDateChange() {\n      // 处理日期选择器的change事件，将所选日期赋给selectedDate变量\n      console.log('Selected date:', this.selectedDate);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuBA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,kBAAY,EAAE,EADT;AAELC,kBAAY,EAAE,EAFT;AAGLC,cAAQ,EAAE,EAHL;AAILC,eAAS,EAAE;AAJN,KAAP;AAMD,GARY;;AASbC,SAAO,GAAG;AACR,SAAKC,iBAAL;AACA,SAAKH,QAAL,GAAgB,KAAKI,MAAL,CAAYC,MAAZ,CAAmBL,QAAnC;AACD,GAZY;;AAabM,SAAO,EAAE;AACPC,WAAO,CAACC,GAAD,EAAM;AACXC,aAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,GAAG,CAACG,IAAjC;AACAF,aAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,GAAG,CAACI,KAAjC,EAFW,CAGX;;AACAJ,SAAG,CAACK,OAAJ,GAAc,KAAd;AACD,KANM;;AAOPV,qBAAiB,GAAG;AAClB,YAAMW,SAAQ,GAAI,IAAIC,IAAJ,CAAS,qBAAT,CAAlB;;AACA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,cAAML,IAAG,GAAI,IAAII,IAAJ,CAASD,SAAS,CAACG,OAAV,KAAsBD,IAAI,EAAJ,GAAS,KAAxC,CAAb;AACA,aAAKf,SAAL,CAAeiB,IAAf,CAAoB;AAClBN,eAAK,EAAEI,IAAI,CADO;AACJ;AACdL,cAAI,EAAEA,IAAI,CAACQ,kBAAL,CAAwB,EAAxB,EAA4B;AAAEC,gBAAI,EAAE,SAAR;AAAmBC,kBAAM,EAAE;AAA3B,WAA5B,CAFY;AAGlBR,iBAAO,EAAE,KAHS;AAIlBS,iBAAO,EAAE;AAJS,SAApB;AAMF;AACD,KAlBM;;AAmBPC,oBAAgB,GAAG;AACjB;AACAd,aAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKZ,YAAnC;AACD;;AAtBM;AAbI,CAAf","names":["axios","data","selectedDate","reservations","doctorId","tableData","mounted","generateTableData","$route","params","methods","reserve","row","console","log","time","index","column2","startTime","Date","i","getTime","push","toLocaleTimeString","hour","minute","column3","handleDateChange"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\User\\reserve.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <el-date-picker v-model=\"selectedDate\" type=\"date\" placeholder=\"选择日期\" @change=\"fetchReservations\">\r\n    </el-date-picker>\r\n\r\n    <el-table :data=\"tableData\" border style=\"width: 450px\">\r\n<!--      <el-table-column prop=\"index\" label=\"序号\" width=\"80\">-->\r\n<!--      </el-table-column>-->\r\n      <el-table-column prop=\"time\" label=\"时间\" width=\"150\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"column2\" label=\"预约状态\" width=\"150\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"column3\" label=\"操作\" width=\"150\">\r\n        <template v-slot=\"scope\">\r\n          <el-button type=\"primary\" v-if=\"scope.row.column2 === '无预约'\" @click=\"reserve(scope.row)\">预约</el-button>\r\n          <span v-else>已预约</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedDate: '',\r\n      reservations: [],\r\n      doctorId: '',\r\n      tableData: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.generateTableData()\r\n    this.doctorId = this.$route.params.doctorId\r\n  },\r\n  methods: {\r\n    reserve(row) {\r\n      console.log('Reserved for:', row.time);\r\n      console.log('Reserved for:', row.index);\r\n      // 这里可以添加预约的具体逻辑，比如调用接口等\r\n      row.column2 = '已预约';\r\n    },\r\n    generateTableData() {\r\n      const startTime = new Date('2024-04-07T08:00:00')\r\n      for (let i = 0; i < 15; i++) {\r\n        const time = new Date(startTime.getTime() + i * 15 * 60000)\r\n        this.tableData.push({\r\n          index: i + 1, // Adding unique index\r\n          time: time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n          column2: '无预约',\r\n          column3: ''\r\n        })\r\n      }\r\n    },\r\n    handleDateChange() {\r\n      // 处理日期选择器的change事件，将所选日期赋给selectedDate变量\r\n      console.log('Selected date:', this.selectedDate);\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  margin: 20px auto;\r\n  max-width: 800px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}