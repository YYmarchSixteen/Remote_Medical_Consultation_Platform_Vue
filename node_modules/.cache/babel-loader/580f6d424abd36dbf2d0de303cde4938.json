{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      userList: [],\n      currentUserId: null,\n      currentUsername: '',\n      currentChat: [],\n      newMessage: '',\n      cameraDialogVisible: false\n    };\n  },\n\n  mounted() {\n    this.fetchUserList();\n  },\n\n  methods: {\n    fetchUserList() {\n      axios.get(`http://localhost:8081/chat/doctorChatList?doctorId=13`).then(response => {\n        this.userList = response.data.data;\n\n        if (this.userList.length > 0) {\n          this.currentUsername = this.userList[0].username;\n          this.currentUserId = this.userList[0].userId;\n          this.fetchChatContent(this.currentUserId);\n        }\n      }).catch(error => {\n        console.error('Error fetching user list:', error);\n      });\n    },\n\n    fetchChatContent(userId) {\n      axios.get(`http://localhost:8081/chat/all?doctorId=13&userId=${userId}`).then(response => {\n        this.currentChat = response.data.data.map(message => {\n          const formattedTime = new Date(message.sendTime).toLocaleString();\n          return { ...message,\n            formattedTime\n          };\n        });\n      }).catch(error => {\n        console.error('Error fetching chat content:', error);\n      });\n    },\n\n    handleUserSelect(username) {\n      this.currentUsername = username;\n      const selectedUser = this.userList.find(user => user.username === username);\n\n      if (selectedUser) {\n        this.currentUserId = selectedUser.userId;\n        this.fetchChatContent(this.currentUserId);\n      }\n    },\n\n    redirectToMedicalRecord() {\n      this.$router.push('/doctor/emr');\n    },\n\n    redirectToPrescription() {\n      this.$router.push('/doctor/prescription');\n    },\n\n    sendMessage() {\n      if (this.newMessage.trim() !== '') {\n        const message = {\n          id: this.currentChat.length + 1,\n          message: this.newMessage.trim(),\n          sender: 'doctor',\n          // 将消息标记为医生的发言\n          formattedTime: new Date().toLocaleString()\n        };\n        this.currentChat.push(message);\n        this.newMessage = '';\n      }\n    },\n\n    toPatient() {\n      this.$router.push('/doctor/patient');\n    },\n\n    toPersonal() {\n      this.$router.push('/doctor/Personal');\n    },\n\n    handleClose() {\n      this.dialogVisible = false; // 关闭弹出框时 视频关闭播放\n\n      const video = document.getElementById('video');\n      video.pause();\n    },\n\n    handleVideo() {\n      this.$refs.videoDiolag.dialogVisible = true;\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","data","userList","currentUserId","currentUsername","currentChat","newMessage","cameraDialogVisible","mounted","fetchUserList","methods","get","then","response","length","username","userId","fetchChatContent","catch","error","console","map","message","formattedTime","Date","sendTime","toLocaleString","handleUserSelect","selectedUser","find","user","redirectToMedicalRecord","$router","push","redirectToPrescription","sendMessage","trim","id","sender","toPatient","toPersonal","handleClose","dialogVisible","video","document","getElementById","pause","handleVideo","$refs","videoDiolag"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\Doctor\\messageList.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-container\">\r\n    <!-- 用户列表 -->\r\n    <div class=\"user-list\">\r\n      <el-card class=\"user-card\">\r\n        <el-button link type=\"primary\" size=\"small\" @click=\"toPatient\">\r\n          主页\r\n        </el-button>\r\n        <el-button link type=\"primary\" size=\"small\" @click=\"toPersonal\">\r\n          个人中心\r\n        </el-button>\r\n        <div id=\"header\" class=\"user-header\">用户列表</div>\r\n        <el-scrollbar wrap-class=\"user-scrollbar\">\r\n          <el-menu class=\"user-menu\" :default-active=\"currentUserId\" mode=\"vertical\">\r\n            <el-menu-item v-for=\"user in userList\" :key=\"user.userId\" :index=\"user.userId\"\r\n                          @click=\"handleUserSelect(user.username)\">\r\n              {{ user.username }}\r\n            </el-menu-item>\r\n          </el-menu>\r\n        </el-scrollbar>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 聊天内容 -->\r\n    <div class=\"chat-content\">\r\n      <el-card class=\"chat-card\">\r\n        <!-- 聊天头部 -->\r\n        <div id=\"header\" class=\"chat-header\">{{ currentUsername }}<br><br>\r\n          <!-- 写病历和开处方按钮 -->\r\n          <div class=\"action-buttons\">\r\n            <el-button type=\"primary\" @click=\"redirectToMedicalRecord\">写病历</el-button>\r\n            <el-button type=\"success\" @click=\"redirectToPrescription\">开处方</el-button>\r\n            <el-button type=\"primary\" @click=\"handleVideo\">开启视频</el-button>\r\n          </div>\r\n        </div>\r\n        <el-scrollbar wrap-class=\"chat-scrollbar\" style=\"height: 80vh\">\r\n          <div class=\"chat-messages\">\r\n            <div v-for=\"message in currentChat\" :key=\"message.id\" class=\"chat-message\"\r\n                 :class=\"{ 'sent-message': message.sender !== 'user', 'received-message': message.sender === 'user' }\">\r\n              <div v-if=\"message.sender === 'user'\" class=\"user-message\">\r\n                {{ message.message }}<br>{{ message.formattedTime }}\r\n              </div>\r\n              <div v-else class=\"doctor-message\">\r\n                {{ message.message }}<br>{{ message.formattedTime }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-scrollbar>\r\n        <!-- 输入框 -->\r\n        <el-input class=\"chat-input\" v-model=\"newMessage\" @keyup.enter=\"sendMessage\" placeholder=\"请输入消息\"\r\n                  clearable></el-input>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n  <!-- 视频窗口 -->\r\n  // template\r\n  <el-dialog\r\n    v-model:visible=\"dialogVisible\"\r\n    width=\"800px\"\r\n    height=\"480\"\r\n    :before-close=\"handleClose\"\r\n  >\r\n    <el-divider />\r\n    <video id=\"video\" controls width=\"800\" height=\"480\" poster=\"../../assets/7.jpg\">\r\n      <source src=\"'http://192.168.43.212:81/stream'\" type=\"video/mp4\">\r\n    </video>\r\n    <span id=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n    </span>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userList: [],\r\n      currentUserId: null,\r\n      currentUsername: '',\r\n      currentChat: [],\r\n      newMessage: '',\r\n      cameraDialogVisible: false\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUserList()\r\n  },\r\n  methods: {\r\n    fetchUserList() {\r\n      axios.get(`http://localhost:8081/chat/doctorChatList?doctorId=13`)\r\n        .then(response => {\r\n          this.userList = response.data.data\r\n          if (this.userList.length > 0) {\r\n            this.currentUsername = this.userList[0].username\r\n            this.currentUserId = this.userList[0].userId\r\n            this.fetchChatContent(this.currentUserId)\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching user list:', error)\r\n        })\r\n    },\r\n    fetchChatContent(userId) {\r\n      axios.get(`http://localhost:8081/chat/all?doctorId=13&userId=${userId}`)\r\n        .then(response => {\r\n          this.currentChat = response.data.data.map(message => {\r\n            const formattedTime = new Date(message.sendTime).toLocaleString()\r\n            return { ...message, formattedTime }\r\n          })\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching chat content:', error)\r\n        })\r\n    },\r\n    handleUserSelect(username) {\r\n      this.currentUsername = username\r\n      const selectedUser = this.userList.find(user => user.username === username)\r\n      if (selectedUser) {\r\n        this.currentUserId = selectedUser.userId\r\n        this.fetchChatContent(this.currentUserId)\r\n      }\r\n    },\r\n    redirectToMedicalRecord() {\r\n      this.$router.push('/doctor/emr')\r\n    },\r\n    redirectToPrescription() {\r\n      this.$router.push('/doctor/prescription')\r\n    },\r\n    sendMessage() {\r\n      if (this.newMessage.trim() !== '') {\r\n        const message = {\r\n          id: this.currentChat.length + 1,\r\n          message: this.newMessage.trim(),\r\n          sender: 'doctor', // 将消息标记为医生的发言\r\n          formattedTime: new Date().toLocaleString()\r\n        }\r\n        this.currentChat.push(message)\r\n        this.newMessage = ''\r\n      }\r\n    },\r\n    toPatient() {\r\n      this.$router.push('/doctor/patient')\r\n    },\r\n    toPersonal() {\r\n      this.$router.push('/doctor/Personal')\r\n    },\r\n    handleClose() {\r\n      this.dialogVisible = false\r\n      // 关闭弹出框时 视频关闭播放\r\n      const video = document.getElementById('video')\r\n      video.pause()\r\n    },\r\n    handleVideo() {\r\n      this.$refs.videoDiolag.dialogVisible = true\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chat-container {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\n.user-list {\r\n  width: 250px;\r\n  flex-shrink: 0;\r\n  overflow: hidden;\r\n}\r\n\r\n.user-card {\r\n  height: 100%;\r\n}\r\n\r\n.user-header {\r\n  padding: 10px;\r\n}\r\n\r\n.user-scrollbar {\r\n  height: calc(100% - 40px);\r\n}\r\n\r\n.user-menu {\r\n  height: 100%;\r\n}\r\n\r\n.chat-content {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chat-card {\r\n  height: 100%;\r\n}\r\n\r\n.chat-header {\r\n  padding: 10px;\r\n}\r\n\r\n.chat-scrollbar {\r\n  height: calc(100% - 40px);\r\n}\r\n\r\n.chat-messages {\r\n  padding: 10px;\r\n}\r\n\r\n.chat-message {\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.sent-message {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.chat-input {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.sent-message {\r\n  background-color: #f0f0f0;\r\n  text-align: right;\r\n}\r\n\r\n.received-message {\r\n  background-color: #e3f2fd;\r\n  text-align: left;\r\n}\r\n\r\n.chat-message {\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n  word-wrap: break-word;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}