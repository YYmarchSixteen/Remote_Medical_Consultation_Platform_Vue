{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  return _openBlock(), _createBlock(_component_el_card, {\n    class: \"box-card\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table, {\n      data: $data.list.slice(($data.currentPage - 1) * $data.pagesize, $data.currentPage * $data.pagesize),\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"orderId\",\n        label: \"ID\",\n        width: \"300\",\n        \"span-method\": $options.mergeRows\n      }, null, 8\n      /* PROPS */\n      , [\"span-method\"]), _createVNode(_component_el_table_column, {\n        prop: \"medicineName\",\n        label: \"物品明细\",\n        width: \"300\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"count\",\n        label: \"数量\",\n        width: \"300\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"price\",\n        label: \"单价\",\n        width: \"300\"\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"data\"]), _createVNode(_component_el_pagination, {\n      modelValue: $data.currentPage,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.currentPage = $event),\n      \"page-sizes\": [10],\n      \"page-size\": $data.pagesize,\n      background: $data.background,\n      layout: \"total, sizes, prev, pager, next, jumper\",\n      total: $data.list.length,\n      onSizeChange: $options.handleSizeChange,\n      onCurrentChange: $options.handleCurrentChange\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\", \"page-size\", \"background\", \"total\", \"onSizeChange\", \"onCurrentChange\"])]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;;uBACEA,aAgBUC,kBAhBV,EAgBU;AAhBDC,SAAK,EAAC;AAgBL,GAhBV,EAAyB;sBACvB,MAKW,CALXC,aAKWC,mBALX,EAKW;AALAC,UAAI,EAAEC,WAAKC,KAAL,CAAU,CAAED,oBAAW,CAAb,IAAqBA,cAA/B,EAAyCA,oBAAcA,cAAvD,CAKN;AALwEE,WAAmB,EAAnB;AAAA;AAAA;AAKxE,KALX;wBACE,MAAkF,CAAlFL,aAAkFM,0BAAlF,EAAkF;AAAjEC,YAAI,EAAC,SAA4D;AAAlDC,aAAK,EAAC,IAA4C;AAAvCC,aAAK,EAAC,KAAiC;AAA1B,uBAAaC;AAAa,OAAlF;;AAAA,wBAAkF,EAClFV,aAAgEM,0BAAhE,EAAgE;AAA/CC,YAAI,EAAC,cAA0C;AAA3BC,aAAK,EAAC,MAAqB;AAAdC,aAAK,EAAC;AAAQ,OAAhE,CADkF,EAElFT,aAAuDM,0BAAvD,EAAuD;AAAtCC,YAAI,EAAC,OAAiC;AAAzBC,aAAK,EAAC,IAAmB;AAAdC,aAAK,EAAC;AAAQ,OAAvD,CAFkF,EAGlFT,aAAuDM,0BAAvD,EAAuD;AAAtCC,YAAI,EAAC,OAAiC;AAAzBC,aAAK,EAAC,IAAmB;AAAdC,aAAK,EAAC;AAAQ,OAAvD,CAHkF;;;;KADpF;;AAAA,eAKW,EACXT,aAQyCW,wBARzC,EAQyC;kBAP9BR,iBAO8B;iEAP9BA,oBAAWS,OAOmB;AANtC,oBAAY,IAM0B;AALtC,mBAAWT,cAK2B;AAJtCU,gBAAU,EAAEV,gBAI0B;AAHvCW,YAAM,EAAC,yCAGgC;AAFtCC,WAAK,EAAEZ,WAAKa,MAE0B;AADtCC,kBAAW,EAAEP,yBACyB;AAAtCQ,qBAAc,EAAER;AAAsB,KARzC;;AAAA,4FADW,EANY;;;;AAAA,GAAzB","names":["_createBlock","_component_el_card","class","_createVNode","_component_el_table","data","$data","slice","style","_component_el_table_column","prop","label","width","$options","_component_el_pagination","$event","background","layout","total","length","onSizeChange","onCurrentChange"],"sourceRoot":"","sources":["D:\\Dev\\Front\\finalProject\\src\\views\\Admin\\order.vue"],"sourcesContent":["<template>\r\n  <el-card class=\"box-card\">\r\n    <el-table :data=\"list.slice((currentPage - 1) * pagesize, currentPage * pagesize)\" style=\"width: 100%\">\r\n      <el-table-column prop=\"orderId\" label=\"ID\" width=\"300\" :span-method=\"mergeRows\" />\r\n      <el-table-column prop=\"medicineName\" label=\"物品明细\" width=\"300\" />\r\n      <el-table-column prop=\"count\" label=\"数量\" width=\"300\" />\r\n      <el-table-column prop=\"price\" label=\"单价\" width=\"300\" />\r\n    </el-table>\r\n    <el-pagination\r\n      v-model=\"currentPage\"\r\n      :page-sizes=\"[10]\"\r\n      :page-size=\"pagesize\"\r\n      :background=\"background\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :total=\"list.length\"\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"/>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport { get } from '@/utils/request'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      currentPage: 1, // 默认页码为1\r\n      pagesize: 15, // 默认一页显示 条\r\n      background: true, // 分页栏背景色\r\n      list: [],\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getOrderDetail()\r\n  },\r\n  methods: {\r\n    getOrderDetail() {\r\n      get('http://localhost:8080/allOrderDetail').then((res) => {\r\n        this.list = res.data.data\r\n      })\r\n    },\r\n    handleSizeChange(size) {\r\n      this.pagesize = size\r\n    },\r\n    handleCurrentChange(currentPage) {\r\n      this.currentPage = currentPage\r\n    },\r\n    mergeRows({ row, column, rowIndex, columnIndex }) {\r\n      if (columnIndex === 0) { // orderId 列\r\n        let prevRow = this.list[rowIndex - 1];\r\n        if (prevRow && prevRow.orderId === row.orderId) { // 如果上一行的 orderId 和当前行相等，则不需要渲染当前单元格\r\n          return 0;\r\n        }\r\n        let rowspan = 1; // 计算当前单元格需要合并的行数\r\n        for (let i = rowIndex + 1; i < this.list.length; i++) {\r\n          if (this.list[i].orderId === row.orderId) {\r\n            rowspan++;\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n        return rowspan;\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n  margin-top: 5px;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  height: 95%;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}