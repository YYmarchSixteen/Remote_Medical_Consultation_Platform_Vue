{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, normalizeClass as _normalizeClass, withKeys as _withKeys, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-d6fc84e2\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"friend-list\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"header\",\n  class: \"friend-header\"\n}, \"好友列表\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = {\n  class: \"chat-content\"\n};\nconst _hoisted_5 = {\n  id: \"header\",\n  class: \"chat-header\"\n};\nconst _hoisted_6 = {\n  class: \"chat-messages\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_menu_item = _resolveComponent(\"el-menu-item\");\n\n  const _component_el_menu = _resolveComponent(\"el-menu\");\n\n  const _component_el_scrollbar = _resolveComponent(\"el-scrollbar\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_card, {\n    class: \"friend-card\"\n  }, {\n    default: _withCtx(() => [_hoisted_3, _createVNode(_component_el_scrollbar, {\n      \"wrap-class\": \"friend-scrollbar\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_menu, {\n        class: \"friend-menu\",\n        \"default-active\": $data.currentFriend,\n        onSelect: $options.handleFriendSelect,\n        mode: \"vertical\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.friends, friend => {\n          return _openBlock(), _createBlock(_component_el_menu_item, {\n            key: friend.id,\n            index: friend.id\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(friend.name), 1\n            /* TEXT */\n            )]),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1032\n          /* PROPS, DYNAMIC_SLOTS */\n          , [\"index\"]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        ))]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"default-active\", \"onSelect\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  })]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_card, {\n    class: \"chat-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, _toDisplayString($options.currentFriendName), 1\n    /* TEXT */\n    ), _createVNode(_component_el_scrollbar, {\n      \"wrap-class\": \"chat-scrollbar\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.currentFriendMessages, message => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: message.id,\n          class: _normalizeClass([\"chat-message\", {\n            'sent-message': message.sender !== 'me'\n          }])\n        }, _toDisplayString(message.content), 3\n        /* TEXT, CLASS */\n        );\n      }), 128\n      /* KEYED_FRAGMENT */\n      ))])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_input, {\n      class: \"chat-input\",\n      modelValue: $data.newMessage,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newMessage = $event),\n      onKeyup: _withKeys($options.sendMessage, [\"enter\"]),\n      placeholder: \"请输入消息\",\n      clearable: \"\"\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\", \"onKeyup\"])]),\n    _: 1\n    /* STABLE */\n\n  })])]);\n}","map":{"version":3,"mappings":";;;;;AACOA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;gEAEPC,oBAAiD,KAAjD,EAAiD;AAA5CC,IAAE,EAAC,QAAyC;AAAhCF,OAAK,EAAC;AAA0B,CAAjD,EAAuC,MAAvC,EAA2C;AAAA;AAA3C;;;AAQCA,OAAK,EAAC;;;AAEFE,IAAE,EAAC;AAASF,OAAK,EAAC;;;AAEhBA,OAAK,EAAC;;;;;;;;;;;;;uBAfnBG,oBAwBM,KAxBN,cAwBM,CAvBJF,oBASM,KATN,cASM,CARJG,aAOUC,kBAPV,EAOU;AAPDL,SAAK,EAAC;AAOL,GAPV,EAA4B;sBAC1B,MAAiD,CAAjDM,UAAiD,EACjDF,aAIeG,uBAJf,EAIe;AAJD,oBAAW;AAIV,KAJf,EAA2C;wBACzC,MAEU,CAFVH,aAEUI,kBAFV,EAEU;AAFDR,aAAK,EAAC,aAEL;AAFoB,0BAAgBS,mBAEpC;AAFoDC,gBAAM,EAAEC,2BAE5D;AAFgFC,YAAI,EAAC;AAErF,OAFV;0BACgB,MAAyB,oBAAvCT,oBAA4GU,SAA5G,EAA4G,IAA5G,EAA4GC,YAA7EL,aAA6E,EAAvFM,MAAiB,IAAX;+BAA3BC,aAA4GC,uBAA5G,EAA4G;AAAnEC,eAAG,EAAEH,MAAM,CAACb,EAAuD;AAAlDiB,iBAAK,EAAEJ,MAAM,CAACb;AAAoC,WAA5G;8BAA4E,MAAiB,mCAAda,MAAM,CAACK,OAAI;AAAA;aAAG;;;;WAA7F;;AAAA;SAA4G,CAA5G;;AAAA,SAAuC;;;;OADzC;;AAAA,uCAEU,EAH+B;;;;AAAA,KAA3C,CADiD,EADvB;;;;AAAA,GAA5B,CAQI,CATN,CAuBI,EAbJnB,oBAYM,KAZN,cAYM,CAXJG,aAUUC,kBAVV,EAUU;AAVDL,SAAK,EAAC;AAUL,GAVV,EAA0B;sBACxB,MAAkE,CAAlEC,oBAAkE,KAAlE,cAAkEoB,iBAA1BV,0BAA0B,CAAlE,EAAyD;AAAA;AAAzD,KAAkE,EAClEP,aAMeG,uBANf,EAMe;AAND,oBAAW;AAMV,KANf,EAAyC;wBACvC,MAIM,CAJNN,oBAIM,KAJN,cAIM,oBAHJE,oBAEMU,SAFN,EAEM,IAFN,EAEMC,YAFiBH,8BAEjB,EAFMW,OAAgC,IAAzB;6BAAnBnB,oBAEM,KAFN,EAEM;AAFyCe,aAAG,EAAEI,OAAO,CAACpB,EAEtD;AAF0DF,eAAK,mBAAC,cAAD,EAAe;AAAA,4BAA2BsB,OAAO,CAACC,MAAR,KAAc;AAAzC,WAAf;AAE/D,SAFN,mBACKD,OAAO,CAACE,QADb,EACoB;AAAA;AADpB;OAEM,CAFN;;AAAA,OAGI,EAJN,CAIM,EALiC;;;;AAAA,KAAzC,CADkE,EAQlEpB,aAAsHqB,mBAAtH,EAAsH;AAA5GzB,WAAK,EAAC,YAAsG;kBAAhFS,gBAAgF;iEAAhFA,mBAAUiB,OAAsE;AAAnEC,aAAK,YAAQhB,oBAAR,EAAmB,SAAnB,CAA8D;AAAzCiB,iBAAW,EAAC,OAA6B;AAArBC,eAAS,EAAT;AAAqB,KAAtH;;AAAA,gCARkE,EAD1C;;;;AAAA,GAA1B,CAWI,CAZN,CAaI,CAxBN","names":["class","_createElementVNode","id","_createElementBlock","_createVNode","_component_el_card","_hoisted_3","_component_el_scrollbar","_component_el_menu","$data","onSelect","$options","mode","_Fragment","_renderList","friend","_createBlock","_component_el_menu_item","key","index","name","_toDisplayString","message","sender","content","_component_el_input","$event","onKeyup","placeholder","clearable"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\Doctor\\messageList.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-container\">\r\n    <div class=\"friend-list\">\r\n      <el-card class=\"friend-card\">\r\n        <div id=\"header\" class=\"friend-header\">好友列表</div>\r\n        <el-scrollbar wrap-class=\"friend-scrollbar\">\r\n          <el-menu class=\"friend-menu\" :default-active=\"currentFriend\" @select=\"handleFriendSelect\" mode=\"vertical\">\r\n            <el-menu-item v-for=\"friend in friends\" :key=\"friend.id\" :index=\"friend.id\">{{ friend.name }}</el-menu-item>\r\n          </el-menu>\r\n        </el-scrollbar>\r\n      </el-card>\r\n    </div>\r\n    <div class=\"chat-content\">\r\n      <el-card class=\"chat-card\">\r\n        <div id=\"header\" class=\"chat-header\">{{ currentFriendName }}</div>\r\n        <el-scrollbar wrap-class=\"chat-scrollbar\">\r\n          <div class=\"chat-messages\">\r\n            <div v-for=\"message in currentFriendMessages\" :key=\"message.id\" class=\"chat-message\" :class=\"{ 'sent-message': message.sender !== 'me' }\">\r\n              {{ message.content }}\r\n            </div>\r\n          </div>\r\n        </el-scrollbar>\r\n        <el-input class=\"chat-input\" v-model=\"newMessage\" @keyup.enter=\"sendMessage\" placeholder=\"请输入消息\" clearable></el-input>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      friends: [\r\n        { id: 1, name: '好友1', messages: [{ id: 1, sender: 'friend', content: '你好吗？' }] },\r\n        { id: 2, name: '好友2', messages: [{ id: 1, sender: 'friend', content: '在干嘛呢？' }] },\r\n        { id: 3, name: '好友3', messages: [{ id: 1, sender: 'friend', content: '有空一起出来玩吗？' }] },\r\n      ],\r\n      currentFriend: null,\r\n      newMessage: ''\r\n    };\r\n  },\r\n  computed: {\r\n    currentFriendName() {\r\n      if (this.currentFriend !== null) {\r\n        return this.friends.find(friend => friend.id === this.currentFriend).name;\r\n      }\r\n      return '';\r\n    },\r\n    currentFriendMessages() {\r\n      if (this.currentFriend !== null) {\r\n        return this.friends.find(friend => friend.id === this.currentFriend).messages;\r\n      }\r\n      return [];\r\n    }\r\n  },\r\n  methods: {\r\n    handleFriendSelect(index) {\r\n      this.currentFriend = index;\r\n    },\r\n    sendMessage() {\r\n      if (this.newMessage.trim() !== '') {\r\n        const friendIndex = this.friends.findIndex(friend => friend.id === this.currentFriend);\r\n        this.friends[friendIndex].messages.push({ id: Date.now(), sender: 'me', content: this.newMessage });\r\n        this.newMessage = '';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chat-container {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\n.friend-list {\r\n  width: 250px;\r\n  flex-shrink: 0;\r\n  overflow: hidden;\r\n}\r\n\r\n.friend-card {\r\n  height: 100%;\r\n}\r\n\r\n.friend-header {\r\n  padding: 10px;\r\n}\r\n\r\n.friend-scrollbar {\r\n  height: calc(100% - 40px);\r\n}\r\n\r\n.friend-menu {\r\n  height: 100%;\r\n}\r\n\r\n.chat-content {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chat-card {\r\n  height: 100%;\r\n}\r\n\r\n.chat-header {\r\n  padding: 10px;\r\n}\r\n\r\n.chat-scrollbar {\r\n  height: calc(100% - 40px);\r\n}\r\n\r\n.chat-messages {\r\n  padding: 10px;\r\n}\r\n\r\n.chat-message {\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.sent-message {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.chat-input {\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}