{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  return _openBlock(), _createBlock(_component_el_card, {\n    class: \"box-card\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table, {\n      data: $data.list,\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"orderId\",\n        label: \"ID\",\n        width: \"200\",\n        formatter: $options.formatOrderId,\n        \"class-name\": $options.setCellClassName\n      }, null, 8\n      /* PROPS */\n      , [\"formatter\", \"class-name\"]), _createVNode(_component_el_table_column, {\n        prop: \"\",\n        label: \"用户Id\",\n        width: \"200\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"medicineName\",\n        label: \"物品明细\",\n        width: \"200\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"count\",\n        label: \"数量\",\n        width: \"300\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"price\",\n        label: \"单价\",\n        width: \"300\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"\",\n        label: \"下单时间\",\n        width: \"300\"\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"data\"])]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;;;;;;;uBACEA,aAeUC,kBAfV,EAeU;AAfDC,SAAK,EAAC;AAeL,GAfV,EAAyB;sBACvB,MAaW,CAbXC,aAaWC,mBAbX,EAaW;AAbAC,UAAI,EAAEC,UAaN;AAbYC,WAAmB,EAAnB;AAAA;AAAA;AAaZ,KAbX;wBACE,MAME,CANFJ,aAMEK,0BANF,EAME;AALAC,YAAI,EAAC,SAKL;AAJAC,aAAK,EAAC,IAIN;AAHAC,aAAK,EAAC,KAGN;AAFCC,iBAAS,EAAEC,sBAEZ;AADC,sBAAYA;AACb,OANF;;AAAA,oCAME,EACFV,aAAoDK,0BAApD,EAAoD;AAAnCC,YAAI,EAAC,EAA8B;AAA3BC,aAAK,EAAC,MAAqB;AAAdC,aAAK,EAAC;AAAQ,OAApD,CADE,EAEFR,aAAgEK,0BAAhE,EAAgE;AAA/CC,YAAI,EAAC,cAA0C;AAA3BC,aAAK,EAAC,MAAqB;AAAdC,aAAK,EAAC;AAAQ,OAAhE,CAFE,EAGFR,aAAuDK,0BAAvD,EAAuD;AAAtCC,YAAI,EAAC,OAAiC;AAAzBC,aAAK,EAAC,IAAmB;AAAdC,aAAK,EAAC;AAAQ,OAAvD,CAHE,EAIFR,aAAuDK,0BAAvD,EAAuD;AAAtCC,YAAI,EAAC,OAAiC;AAAzBC,aAAK,EAAC,IAAmB;AAAdC,aAAK,EAAC;AAAQ,OAAvD,CAJE,EAKFR,aAAoDK,0BAApD,EAAoD;AAAnCC,YAAI,EAAC,EAA8B;AAA3BC,aAAK,EAAC,MAAqB;AAAdC,aAAK,EAAC;AAAQ,OAApD,CALE;;;;KAPJ;;AAAA,eAaW,EAdY;;;;AAAA,GAAzB","names":["_createBlock","_component_el_card","class","_createVNode","_component_el_table","data","$data","style","_component_el_table_column","prop","label","width","formatter","$options"],"sourceRoot":"","sources":["D:\\Dev\\Front\\finalProject\\src\\views\\Admin\\order.vue"],"sourcesContent":["<template>\r\n  <el-card class=\"box-card\">\r\n    <el-table :data=\"list\" style=\"width: 100%\">\r\n      <el-table-column\r\n        prop=\"orderId\"\r\n        label=\"ID\"\r\n        width=\"200\"\r\n        :formatter=\"formatOrderId\"\r\n        :class-name=\"setCellClassName\"\r\n      />\r\n      <el-table-column prop=\"\" label=\"用户Id\" width=\"200\" />\r\n      <el-table-column prop=\"medicineName\" label=\"物品明细\" width=\"200\" />\r\n      <el-table-column prop=\"count\" label=\"数量\" width=\"300\" />\r\n      <el-table-column prop=\"price\" label=\"单价\" width=\"300\" />\r\n      <el-table-column prop=\"\" label=\"下单时间\" width=\"300\" />\r\n    </el-table>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport { get } from \"@/utils/request\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      list: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getOrderDetail();\r\n  },\r\n  methods: {\r\n    getOrderDetail() {\r\n      get(\"http://localhost:8080/allOrderDetail\").then((res) => {\r\n        this.list = res.data.data;\r\n      });\r\n    },\r\n    formatOrderId(row, column, cellValue, index) {\r\n      if (index === 0 || row.orderId !== this.list[index - 1].orderId) {\r\n        // 如果是第一行或者和上一行的 orderId 不同，就返回当前 orderId 的值\r\n        return row.orderId;\r\n      }\r\n      // 否则返回空字符串，使单元格合并\r\n      return \"\";\r\n    },\r\n    // eslint-disable-next-line no-unused-vars\r\n    setCellClassName(row, column, rowIndex, columnIndex) {\r\n      if (\r\n        rowIndex === 0 ||\r\n        row.orderId !== this.list[rowIndex - 1].orderId\r\n      ) {\r\n        // 如果是第一行或者和上一行的 orderId 不同，就添加一个新的 CSS 类名\r\n        return \"merge-cell\";\r\n      }\r\n      // 否则返回空字符串\r\n      return \"\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n  margin-top: 5px;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  height: 95%;\r\n}\r\n\r\n.merge-cell {\r\n  white-space: nowrap; /* 不换行 */\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}