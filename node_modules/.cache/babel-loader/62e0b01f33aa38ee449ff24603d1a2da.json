{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      selectedDate: '',\n      reservations: [],\n      doctorId: '',\n      tableData: [],\n      pickerOptions: {\n        disabledDate(time) {\n          console.log('当前日期:', time); // 获取今天的日期\n\n          const today = new Date(); // 将时间设置为当天的00:00:00\n\n          today.setHours(0, 0, 0, 0); // 将要比较的时间也设置为00:00:00\n\n          time.setHours(0, 0, 0, 0); // 如果要比较的时间小于今天的日期，则禁用选择\n\n          return time < today;\n        }\n\n      }\n    };\n  },\n\n  mounted() {\n    this.generateTableData();\n    this.doctorId = this.$route.params.doctorId;\n  },\n\n  methods: {\n    reserve(row) {\n      const params = new URLSearchParams();\n      params.append('userId', 1);\n      params.append('doctorId', this.doctorId);\n      params.append('reserveTime', this.selectedDate);\n      params.append('sequence', row.index);\n      axios.post('http://localhost:8081/reserve/addReserve', params); //window.location.reload()\n\n      row.column2 = '已预约';\n    },\n\n    generateTableData() {\n      const startTime = new Date('2024-04-07T08:00:00');\n\n      for (let i = 0; i < 15; i++) {\n        const time = new Date(startTime.getTime() + i * 15 * 60000);\n        this.tableData.push({\n          index: i + 1,\n          // Adding unique index\n          time: time.toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          }),\n          column2: '无预约',\n          column3: ''\n        });\n      }\n    },\n\n    handleDateChange() {\n      this.selectedDate = this.selectedDate ? this.formatDate(this.selectedDate) : '';\n      console.log('Selected date:', this.selectedDate);\n    },\n\n    formatDate(date) {\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","data","selectedDate","reservations","doctorId","tableData","pickerOptions","disabledDate","time","console","log","today","Date","setHours","mounted","generateTableData","$route","params","methods","reserve","row","URLSearchParams","append","index","post","column2","startTime","i","getTime","push","toLocaleTimeString","hour","minute","column3","handleDateChange","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\User\\reserve.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <el-date-picker v-model=\"selectedDate\" type=\"date\" placeholder=\"选择日期\" :picker-options=\"pickerOptions\" @change=\"handleDateChange\">\r\n    </el-date-picker>\r\n\r\n    <el-table :data=\"tableData\" border style=\"width: 450px\">\r\n      <el-table-column prop=\"time\" label=\"时间\" width=\"150\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"column2\" label=\"预约状态\" width=\"150\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"column3\" label=\"操作\" width=\"150\">\r\n        <template v-slot=\"scope\">\r\n          <el-button type=\"primary\" v-if=\"scope.row.column2 === '无预约'\" @click=\"reserve(scope.row)\">预约</el-button>\r\n          <span v-else>已预约</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedDate: '',\r\n      reservations: [],\r\n      doctorId: '',\r\n      tableData: [],\r\n      pickerOptions: {\r\n        disabledDate(time) {\r\n          console.log('当前日期:', time);\r\n          // 获取今天的日期\r\n          const today = new Date();\r\n          // 将时间设置为当天的00:00:00\r\n          today.setHours(0, 0, 0, 0);\r\n          // 将要比较的时间也设置为00:00:00\r\n          time.setHours(0, 0, 0, 0);\r\n          // 如果要比较的时间小于今天的日期，则禁用选择\r\n          return time < today;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.generateTableData()\r\n    this.doctorId = this.$route.params.doctorId\r\n  },\r\n  methods: {\r\n    reserve(row) {\r\n\r\n      const params = new URLSearchParams()\r\n      params.append('userId', 1)\r\n      params.append('doctorId', this.doctorId)\r\n      params.append('reserveTime', this.selectedDate)\r\n      params.append('sequence', row.index)\r\n      axios.post('http://localhost:8081/reserve/addReserve', params)\r\n      //window.location.reload()\r\n      row.column2 = '已预约'\r\n    },\r\n    generateTableData() {\r\n      const startTime = new Date('2024-04-07T08:00:00')\r\n      for (let i = 0; i < 15; i++) {\r\n        const time = new Date(startTime.getTime() + i * 15 * 60000)\r\n        this.tableData.push({\r\n          index: i + 1, // Adding unique index\r\n          time: time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n          column2: '无预约',\r\n          column3: ''\r\n        })\r\n      }\r\n    },\r\n    handleDateChange() {\r\n      this.selectedDate = this.selectedDate ? this.formatDate(this.selectedDate) : ''\r\n      console.log('Selected date:', this.selectedDate)\r\n    },\r\n    formatDate(date) {\r\n      const year = date.getFullYear()\r\n      const month = String(date.getMonth() + 1).padStart(2, '0')\r\n      const day = String(date.getDate()).padStart(2, '0')\r\n      return `${year}-${month}-${day}`\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  margin: 20px auto;\r\n  max-width: 800px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}