{"ast":null,"code":"import axios from 'axios';\nimport Vue from 'vue';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport Quill from 'quill';\nVue.use(ElementUI);\nexport default {\n  data() {\n    return {\n      editorVisible: false,\n      doctors: []\n    };\n  },\n\n  mounted() {\n    this.fetchDoctors();\n  },\n\n  methods: {\n    async fetchDoctors() {\n      try {\n        const response = await axios.get('http://localhost:8081/notice/all');\n        this.doctors = response.data.data;\n      } catch (error) {\n        console.error('Error fetching doctors:', error);\n      }\n    },\n\n    openEditor() {\n      this.editorVisible = true;\n\n      if (!this.quill) {\n        this.quill = new Quill('#editor', {\n          theme: 'snow'\n        });\n      }\n    },\n\n    closeEditor() {\n      this.editorVisible = false;\n    },\n\n    saveContent() {\n      const content = this.quill.root.innerHTML;\n      console.log(content);\n      this.closeEditor();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA+BA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,SAAR;AAEA,eAAe;AACbG,MAAI,GAAG;AACL,WAAO;AACLC,mBAAa,EAAE,KADV;AAELC,aAAO,EAAE;AAFJ,KAAP;AAID,GANY;;AAObC,SAAO,GAAG;AACR,SAAKC,YAAL;AACD,GATY;;AAUbC,SAAO,EAAE;AACP,UAAMD,YAAN,GAAqB;AACnB,UAAI;AACF,cAAME,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAN,CAAU,kCAAV,CAAvB;AACA,aAAKL,OAAL,GAAeI,QAAQ,CAACN,IAAT,CAAcA,IAA7B;AACF,OAHA,CAGE,OAAOQ,KAAP,EAAc;AACdC,eAAO,CAACD,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACF;AACD,KARM;;AASPE,cAAU,GAAG;AACX,WAAKT,aAAL,GAAqB,IAArB;;AACA,UAAI,CAAC,KAAKU,KAAV,EAAiB;AACf,aAAKA,KAAL,GAAa,IAAIb,KAAJ,CAAU,SAAV,EAAqB;AAChCc,eAAK,EAAE;AADyB,SAArB,CAAb;AAGF;AACD,KAhBM;;AAiBPC,eAAW,GAAG;AACZ,WAAKZ,aAAL,GAAqB,KAArB;AACD,KAnBM;;AAoBPa,eAAW,GAAG;AACZ,YAAMC,OAAM,GAAI,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,SAAhC;AACAR,aAAO,CAACS,GAAR,CAAYH,OAAZ;AACA,WAAKF,WAAL;AACF;;AAxBO;AAVI,CAAf","names":["axios","Vue","ElementUI","Quill","use","data","editorVisible","doctors","mounted","fetchDoctors","methods","response","get","error","console","openEditor","quill","theme","closeEditor","saveContent","content","root","innerHTML","log"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\Admin\\notice.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1>Doctor List</h1>\r\n    <div>\r\n      <button @click=\"openEditor\">打开编辑器</button>\r\n      <el-dialog :visible.sync=\"editorVisible\" title=\"编辑器\" @close=\"closeEditor\">\r\n        <div id=\"editor\"></div>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editorVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveContent\">保存</el-button>\r\n      </span>\r\n      </el-dialog>\r\n    </div>\r\n    <el-table :data=\"doctors\" border stripe>\r\n      <el-table-column prop=\"noticeId\" label=\"医生ID\"></el-table-column>\r\n      <el-table-column prop=\"receiver\" label=\"接收者\"></el-table-column>\r\n      <el-table-column prop=\"title\" label=\"标题\"></el-table-column>\r\n      <el-table-column prop=\"status\" label=\"当前状态\"></el-table-column>\r\n      <el-table-column prop=\"sendTime\" label=\"发送时间\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"120\">\r\n        <template #default>\r\n          <el-button link type=\"primary\" size=\"small\" @click=\"noticeInfo\">\r\n            查看详情\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport Vue from 'vue'\r\nimport ElementUI from 'element-ui'\r\nimport 'element-ui/lib/theme-chalk/index.css'\r\nimport Quill from 'quill'\r\n\r\nVue.use(ElementUI)\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      editorVisible: false,\r\n      doctors: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchDoctors()\r\n  },\r\n  methods: {\r\n    async fetchDoctors() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8081/notice/all')\r\n        this.doctors = response.data.data\r\n      } catch (error) {\r\n        console.error('Error fetching doctors:', error)\r\n      }\r\n    },\r\n    openEditor() {\r\n      this.editorVisible = true\r\n      if (!this.quill) {\r\n        this.quill = new Quill('#editor', {\r\n          theme: 'snow'\r\n        })\r\n      }\r\n    },\r\n    closeEditor() {\r\n      this.editorVisible = false\r\n    },\r\n    saveContent() {\r\n      const content = this.quill.root.innerHTML\r\n      console.log(content)\r\n      this.closeEditor()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  margin: 20px auto;\r\n  max-width: 800px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}