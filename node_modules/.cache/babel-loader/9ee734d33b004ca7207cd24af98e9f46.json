{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport { post } from '@/utils/request';\nexport default {\n  data() {\n    return {\n      videoWidth: 250,\n      videoHeight: 350,\n      imgSrc: \"\",\n      thisCancas: null,\n      thisContext: null,\n      thisVideo: null,\n      openVideo: false\n    };\n  },\n\n  mounted() {\n    this.getCompetence(); //进入页面就调用摄像头\n  },\n\n  methods: {\n    // 调用权限（打开摄像头功能）\n    getCompetence() {\n      var _this = this;\n\n      _this.thisCancas = document.getElementById(\"canvasCamera\");\n      _this.thisContext = this.thisCancas.getContext(\"2d\");\n      _this.thisVideo = document.getElementById(\"videoCamera\");\n      _this.thisVideo.style.display = \"block\"; // 获取媒体属性，旧版本浏览器可能不支持mediaDevices，我们首先设置一个空对象\n\n      if (navigator.mediaDevices === undefined) {\n        navigator.mediaDevices = {};\n      } // 一些浏览器实现了部分mediaDevices，我们不能只分配一个对象\n      // 使用getUserMedia，因为它会覆盖现有的属性。\n      // 这里，如果缺少getUserMedia属性，就添加它。\n\n\n      if (navigator.mediaDevices.getUserMedia === undefined) {\n        navigator.mediaDevices.getUserMedia = function (constraints) {\n          // 首先获取现存的getUserMedia(如果存在)\n          var getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.getUserMedia; // 有些浏览器不支持，会返回错误信息\n          // 保持接口一致\n\n          if (!getUserMedia) {\n            //不存在则报错\n            return Promise.reject(new Error(\"getUserMedia is not implemented in this browser\"));\n          } // 否则，使用Promise将调用包装到旧的navigator.getUserMedia\n\n\n          return new Promise(function (resolve, reject) {\n            getUserMedia.call(navigator, constraints, resolve, reject);\n          });\n        };\n      }\n\n      var constraints = {\n        audio: false,\n        video: {\n          width: this.videoWidth,\n          height: this.videoHeight,\n          transform: \"scaleX(-1)\"\n        }\n      };\n      navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n        // 旧的浏览器可能没有srcObject\n        if (\"srcObject\" in _this.thisVideo) {\n          _this.thisVideo.srcObject = stream;\n        } else {\n          // 避免在新的浏览器中使用它，因为它正在被弃用。\n          _this.thisVideo.src = window.URL.createObjectURL(stream);\n        }\n\n        _this.thisVideo.onloadedmetadata = function (e) {\n          _this.thisVideo.play();\n        };\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    //  绘制图片（拍照功能）\n    setImage() {\n      var _this = this; // canvas画图\n\n\n      _this.thisContext.drawImage(_this.thisVideo, 0, 0, _this.videoWidth, _this.videoHeight); // 获取图片base64链接\n\n\n      var image = this.thisCancas.toDataURL(\"image/jpg\"); // post(\"http://127.0.0.1:8000/getpic/\",{ image }).then((res) =>{\n      //     console.log(res)\n      // })\n\n      _this.imgSrc = image; //赋值并预览图片\n\n      var file = this.dataURLtoFile(image);\n      console.log(file); // post(\"http://127.0.0.1:8000/getpic/\").then((res) => {\n      //     console.log(res)\n      // })\n\n      var data = new FormData(); //重点在这里 如果使用 var data = {}; data.inputfile=... 这样的方式不能正常上传\n      // 将需要添加的参数添加进表单中\n\n      data.append(\"file\", file); //获取需要上传的文件\n\n      console.log(data);\n      let headers = {\n        headers: {\n          \"Content-Type\": \"image/jpeg\"\n        }\n      }; //设置上传文件格式，为指定传输数据为二进制类型\n\n      post('http://127.0.0.1:8000/getpic/', data, headers).then(res => {\n        console.log();\n\n        if (res.data.level > 0.6) {\n          this.$message({\n            message: '成功' + '置信度为' + res.data.level,\n            type: 'success'\n          });\n        } else {\n          this.$message.error('失败');\n        }\n      }).catch(err => {\n        console.log('上传失败', err);\n      });\n    },\n\n    // 关闭摄像头\n    stopNavigator() {\n      this.thisVideo.srcObject.getTracks()[0].stop();\n    },\n\n    // base64转文件，此处没用到\n    dataURLtoFile(dataurl, filename) {\n      // var arr = dataurl.split(\",\");\n      // var mime = arr[0].match(/:(.*?);/)[1];\n      // var bstr = atob(arr[1]);\n      // var n = bstr.length;\n      // var u8arr = new Uint8Array(n);\n      // while (n--) {\n      //     u8arr[n] = bstr.charCodeAt(n);\n      // }\n      // return new File([u8arr], filename, { type: mime });\n      var arr = dataurl.split(','),\n          mime = arr[0].match(/:(.*?);/)[1],\n          bstr = atob(arr[1]),\n          n = bstr.length,\n          u8arr = new Uint8Array(n);\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n\n      return new Blob([u8arr], {\n        type: mime\n      });\n    },\n\n    toIndex() {\n      this.$router.push('/doctor/message');\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;AAmBA,SAASA,IAAT,QAAqB,iBAArB;AACA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,gBAAU,EAAE,GADP;AAELC,iBAAW,EAAE,GAFR;AAGLC,YAAM,EAAE,EAHH;AAILC,gBAAU,EAAE,IAJP;AAKLC,iBAAW,EAAE,IALR;AAMLC,eAAS,EAAE,IANN;AAOLC,eAAS,EAAE;AAPN,KAAP;AASD,GAXY;;AAYbC,SAAO,GAAG;AACR,SAAKC,aAAL,GADQ,CACc;AACvB,GAdY;;AAebC,SAAO,EAAE;AACP;AACAD,iBAAa,GAAG;AACd,UAAIE,KAAI,GAAI,IAAZ;;AACAA,WAAK,CAACP,UAAN,GAAmBQ,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAnB;AACAF,WAAK,CAACN,WAAN,GAAoB,KAAKD,UAAL,CAAgBU,UAAhB,CAA2B,IAA3B,CAApB;AACAH,WAAK,CAACL,SAAN,GAAkBM,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAlB;AACAF,WAAK,CAACL,SAAN,CAAgBS,KAAhB,CAAsBC,OAAtB,GAAgC,OAAhC,CALc,CAMd;;AACA,UAAIC,SAAS,CAACC,YAAV,KAA2BC,SAA/B,EAA0C;AACxCF,iBAAS,CAACC,YAAV,GAAyB,EAAzB;AACF,OATc,CAUd;AACA;AACA;;;AACA,UAAID,SAAS,CAACC,YAAV,CAAuBE,YAAvB,KAAwCD,SAA5C,EAAuD;AACrDF,iBAAS,CAACC,YAAV,CAAuBE,YAAvB,GAAsC,UAAUC,WAAV,EAAuB;AAC3D;AACA,cAAID,YAAW,GACbH,SAAS,CAACK,kBAAV,IACAL,SAAS,CAACM,eADV,IAEAN,SAAS,CAACG,YAHZ,CAF2D,CAM3D;AACA;;AACA,cAAI,CAACA,YAAL,EAAmB;AACjB;AACA,mBAAOI,OAAO,CAACC,MAAR,CACL,IAAIC,KAAJ,CAAU,iDAAV,CADK,CAAP;AAGF,WAb2D,CAc3D;;;AACA,iBAAO,IAAIF,OAAJ,CAAY,UAAUG,OAAV,EAAmBF,MAAnB,EAA2B;AAC5CL,wBAAY,CAACQ,IAAb,CAAkBX,SAAlB,EAA6BI,WAA7B,EAA0CM,OAA1C,EAAmDF,MAAnD;AACD,WAFM,CAAP;AAGD,SAlBD;AAmBF;;AACA,UAAIJ,WAAU,GAAI;AAChBQ,aAAK,EAAE,KADS;AAEhBC,aAAK,EAAE;AACLC,eAAK,EAAE,KAAK9B,UADP;AAEL+B,gBAAM,EAAE,KAAK9B,WAFR;AAGL+B,mBAAS,EAAE;AAHN;AAFS,OAAlB;AAQAhB,eAAS,CAACC,YAAV,CACGE,YADH,CACgBC,WADhB,EAEGa,IAFH,CAEQ,UAAUC,MAAV,EAAkB;AACtB;AACA,YAAI,eAAexB,KAAK,CAACL,SAAzB,EAAoC;AAClCK,eAAK,CAACL,SAAN,CAAgB8B,SAAhB,GAA4BD,MAA5B;AACF,SAFA,MAEO;AACL;AACAxB,eAAK,CAACL,SAAN,CAAgB+B,GAAhB,GAAsBC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BL,MAA3B,CAAtB;AACF;;AACAxB,aAAK,CAACL,SAAN,CAAgBmC,gBAAhB,GAAmC,UAAUC,CAAV,EAAa;AAC9C/B,eAAK,CAACL,SAAN,CAAgBqC,IAAhB;AACD,SAFD;AAGD,OAbH,EAcGC,KAdH,CAcUC,GAAD,IAAS;AACdC,eAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAhBH;AAiBD,KA7DM;;AA8DP;AACAG,YAAQ,GAAG;AACT,UAAIrC,KAAI,GAAI,IAAZ,CADS,CAET;;;AACAA,WAAK,CAACN,WAAN,CAAkB4C,SAAlB,CACEtC,KAAK,CAACL,SADR,EAEE,CAFF,EAGE,CAHF,EAIEK,KAAK,CAACV,UAJR,EAKEU,KAAK,CAACT,WALR,EAHS,CAUT;;;AACA,UAAIgD,KAAI,GAAI,KAAK9C,UAAL,CAAgB+C,SAAhB,CAA0B,WAA1B,CAAZ,CAXS,CAYT;AACA;AACA;;AACAxC,WAAK,CAACR,MAAN,GAAe+C,KAAf,CAfS,CAea;;AACtB,UAAIE,IAAG,GAAI,KAAKC,aAAL,CAAmBH,KAAnB,CAAX;AACAJ,aAAO,CAACC,GAAR,CAAYK,IAAZ,EAjBS,CAkBT;AACA;AACA;;AACA,UAAIpD,IAAG,GAAI,IAAIsD,QAAJ,EAAX,CArBS,CAqBiB;AAC1B;;AACAtD,UAAI,CAACuD,MAAL,CAAY,MAAZ,EAAoBH,IAApB,EAvBS,CAuBgB;;AACzBN,aAAO,CAACC,GAAR,CAAY/C,IAAZ;AACA,UAAIwD,OAAM,GAAI;AAAEA,eAAO,EAAE;AAAE,0BAAgB;AAAlB;AAAX,OAAd,CAzBS,CAyBkD;;AAC3DzD,UAAI,CAAC,+BAAD,EAAkCC,IAAlC,EAAwCwD,OAAxC,CAAJ,CACGtB,IADH,CACQuB,GAAE,IAAK;AACXX,eAAO,CAACC,GAAR;;AACA,YAAIU,GAAG,CAACzD,IAAJ,CAAS0D,KAAT,GAAiB,GAArB,EAA0B;AACxB,eAAKC,QAAL,CAAc;AACZC,mBAAO,EAAE,OAAO,MAAP,GAAgBH,GAAG,CAACzD,IAAJ,CAAS0D,KADtB;AAEZG,gBAAI,EAAE;AAFM,WAAd;AAIF,SALA,MAKO;AACL,eAAKF,QAAL,CAAcG,KAAd,CAAoB,IAApB;AACF;AACD,OAXH,EAYGlB,KAZH,CAYSC,GAAE,IAAK;AACZC,eAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,GAApB;AACD,OAdH;AAeD,KAxGM;;AAyGP;AACAkB,iBAAa,GAAG;AACd,WAAKzD,SAAL,CAAe8B,SAAf,CAAyB4B,SAAzB,GAAqC,CAArC,EAAwCC,IAAxC;AACD,KA5GM;;AA8GP;AACAZ,iBAAa,CAACa,OAAD,EAAUC,QAAV,EAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAIC,GAAE,GAAIF,OAAO,CAACG,KAAR,CAAc,GAAd,CAAV;AAAA,UACEC,IAAG,GAAIF,GAAG,CAAC,CAAD,CAAH,CAAOG,KAAP,CAAa,SAAb,EAAwB,CAAxB,CADT;AAAA,UAEEC,IAAG,GAAIC,IAAI,CAACL,GAAG,CAAC,CAAD,CAAJ,CAFb;AAAA,UAEuBM,IAAIF,IAAI,CAACG,MAFhC;AAAA,UAGEC,KAAI,GAAI,IAAIC,UAAJ,CAAeH,CAAf,CAHV;;AAIA,aAAOA,CAAC,EAAR,EAAY;AACVE,aAAK,CAACF,CAAD,CAAL,GAAWF,IAAI,CAACM,UAAL,CAAgBJ,CAAhB,CAAX;AACF;;AACA,aAAO,IAAIK,IAAJ,CAAS,CAACH,KAAD,CAAT,EAAkB;AAAEf,YAAI,EAAES;AAAR,OAAlB,CAAP;AACD,KAjIM;;AAkIPU,WAAO,GAAE;AACP,WAAKC,OAAL,CAAaC,IAAb,CAAkB,iBAAlB;AACD;;AApIM;AAfI,CAAf","names":["post","data","videoWidth","videoHeight","imgSrc","thisCancas","thisContext","thisVideo","openVideo","mounted","getCompetence","methods","_this","document","getElementById","getContext","style","display","navigator","mediaDevices","undefined","getUserMedia","constraints","webkitGetUserMedia","mozGetUserMedia","Promise","reject","Error","resolve","call","audio","video","width","height","transform","then","stream","srcObject","src","window","URL","createObjectURL","onloadedmetadata","e","play","catch","err","console","log","setImage","drawImage","image","toDataURL","file","dataURLtoFile","FormData","append","headers","res","level","$message","message","type","error","stopNavigator","getTracks","stop","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","Blob","toIndex","$router","push"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\Doctor\\userTest.vue"],"sourcesContent":["\r\n<template>\r\n  <div class=\"camera_outer\">\r\n    <video id=\"videoCamera\" :width=\"videoWidth\" :height=\"videoHeight\" autoplay></video>\r\n    <canvas style=\"display: none\" id=\"canvasCamera\" :width=\"videoWidth\" :height=\"videoHeight\"></canvas>\r\n    <div v-if=\"imgSrc\" class=\"img_bg_camera\">\r\n      <p>效果预览</p>\r\n      <img :src=\"'http://192.168.43.212:81/stream'\" alt=\"\" class=\"tx_img\" />\r\n\r\n    </div>\r\n    <div class=\"button\">\r\n<!--      <el-button @click=\"getCompetence()\" type=\"primary\">打开摄像头</el-button>-->\r\n<!--      <el-button @click=\"stopNavigator()\" type=\"warning\">关闭摄像头</el-button>-->\r\n<!--      <el-button @click=\"setImage()\" type=\"success\">拍照</el-button>-->\r\n      <el-button type=\"primary\" @click=\"toIndex\">结束并返回</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { post } from '@/utils/request'\r\nexport default {\r\n  data() {\r\n    return {\r\n      videoWidth: 250,\r\n      videoHeight: 350,\r\n      imgSrc: \"\",\r\n      thisCancas: null,\r\n      thisContext: null,\r\n      thisVideo: null,\r\n      openVideo: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getCompetence(); //进入页面就调用摄像头\r\n  },\r\n  methods: {\r\n    // 调用权限（打开摄像头功能）\r\n    getCompetence() {\r\n      var _this = this;\r\n      _this.thisCancas = document.getElementById(\"canvasCamera\");\r\n      _this.thisContext = this.thisCancas.getContext(\"2d\");\r\n      _this.thisVideo = document.getElementById(\"videoCamera\");\r\n      _this.thisVideo.style.display = \"block\";\r\n      // 获取媒体属性，旧版本浏览器可能不支持mediaDevices，我们首先设置一个空对象\r\n      if (navigator.mediaDevices === undefined) {\r\n        navigator.mediaDevices = {};\r\n      }\r\n      // 一些浏览器实现了部分mediaDevices，我们不能只分配一个对象\r\n      // 使用getUserMedia，因为它会覆盖现有的属性。\r\n      // 这里，如果缺少getUserMedia属性，就添加它。\r\n      if (navigator.mediaDevices.getUserMedia === undefined) {\r\n        navigator.mediaDevices.getUserMedia = function (constraints) {\r\n          // 首先获取现存的getUserMedia(如果存在)\r\n          var getUserMedia =\r\n            navigator.webkitGetUserMedia ||\r\n            navigator.mozGetUserMedia ||\r\n            navigator.getUserMedia;\r\n          // 有些浏览器不支持，会返回错误信息\r\n          // 保持接口一致\r\n          if (!getUserMedia) {\r\n            //不存在则报错\r\n            return Promise.reject(\r\n              new Error(\"getUserMedia is not implemented in this browser\")\r\n            );\r\n          }\r\n          // 否则，使用Promise将调用包装到旧的navigator.getUserMedia\r\n          return new Promise(function (resolve, reject) {\r\n            getUserMedia.call(navigator, constraints, resolve, reject);\r\n          });\r\n        };\r\n      }\r\n      var constraints = {\r\n        audio: false,\r\n        video: {\r\n          width: this.videoWidth,\r\n          height: this.videoHeight,\r\n          transform: \"scaleX(-1)\",\r\n        },\r\n      };\r\n      navigator.mediaDevices\r\n        .getUserMedia(constraints)\r\n        .then(function (stream) {\r\n          // 旧的浏览器可能没有srcObject\r\n          if (\"srcObject\" in _this.thisVideo) {\r\n            _this.thisVideo.srcObject = stream;\r\n          } else {\r\n            // 避免在新的浏览器中使用它，因为它正在被弃用。\r\n            _this.thisVideo.src = window.URL.createObjectURL(stream);\r\n          }\r\n          _this.thisVideo.onloadedmetadata = function (e) {\r\n            _this.thisVideo.play();\r\n          };\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    //  绘制图片（拍照功能）\r\n    setImage() {\r\n      var _this = this;\r\n      // canvas画图\r\n      _this.thisContext.drawImage(\r\n        _this.thisVideo,\r\n        0,\r\n        0,\r\n        _this.videoWidth,\r\n        _this.videoHeight\r\n      );\r\n      // 获取图片base64链接\r\n      var image = this.thisCancas.toDataURL(\"image/jpg\");\r\n      // post(\"http://127.0.0.1:8000/getpic/\",{ image }).then((res) =>{\r\n      //     console.log(res)\r\n      // })\r\n      _this.imgSrc = image; //赋值并预览图片\r\n      var file = this.dataURLtoFile(image)\r\n      console.log(file)\r\n      // post(\"http://127.0.0.1:8000/getpic/\").then((res) => {\r\n      //     console.log(res)\r\n      // })\r\n      var data = new FormData();//重点在这里 如果使用 var data = {}; data.inputfile=... 这样的方式不能正常上传\r\n      // 将需要添加的参数添加进表单中\r\n      data.append(\"file\", file)//获取需要上传的文件\r\n      console.log(data)\r\n      let headers = { headers: { \"Content-Type\": \"image/jpeg\" } }//设置上传文件格式，为指定传输数据为二进制类型\r\n      post('http://127.0.0.1:8000/getpic/', data, headers)\r\n        .then(res => {\r\n          console.log()\r\n          if (res.data.level > 0.6) {\r\n            this.$message({\r\n              message: '成功' + '置信度为' + res.data.level,\r\n              type: 'success'\r\n            });\r\n          } else {\r\n            this.$message.error('失败');\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log('上传失败', err)\r\n        })\r\n    },\r\n    // 关闭摄像头\r\n    stopNavigator() {\r\n      this.thisVideo.srcObject.getTracks()[0].stop();\r\n    },\r\n\r\n    // base64转文件，此处没用到\r\n    dataURLtoFile(dataurl, filename) {\r\n      // var arr = dataurl.split(\",\");\r\n      // var mime = arr[0].match(/:(.*?);/)[1];\r\n      // var bstr = atob(arr[1]);\r\n      // var n = bstr.length;\r\n      // var u8arr = new Uint8Array(n);\r\n      // while (n--) {\r\n      //     u8arr[n] = bstr.charCodeAt(n);\r\n      // }\r\n      // return new File([u8arr], filename, { type: mime });\r\n      var arr = dataurl.split(','),\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]), n = bstr.length,\r\n        u8arr = new Uint8Array(n);\r\n      while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n)\r\n      }\r\n      return new Blob([u8arr], { type: mime })\r\n    },\r\n    toIndex(){\r\n      this.$router.push('/doctor/message')\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n</style>"]},"metadata":{},"sourceType":"module"}