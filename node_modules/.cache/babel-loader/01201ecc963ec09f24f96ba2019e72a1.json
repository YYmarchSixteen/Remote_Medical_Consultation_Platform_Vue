{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-3e3afc8c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"header\"\n};\nconst _hoisted_2 = {\n  class: \"body\"\n};\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  class: \"header-search\"\n};\nconst _hoisted_5 = {\n  class: \"equipment-list\"\n};\nconst _hoisted_6 = {\n  class: \"img-wrapper\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"info-wrapper\"\n};\nconst _hoisted_9 = {\n  class: \"title\"\n};\nconst _hoisted_10 = {\n  class: \"price\"\n};\nconst _hoisted_11 = {\n  class: \"feature\"\n};\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"功能:\", -1\n/* HOISTED */\n));\n\nconst _hoisted_13 = {\n  class: \"material\"\n};\n\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"类型：\", -1\n/* HOISTED */\n));\n\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_Header)]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.searchTerm = $event),\n    class: \"search-input\",\n    placeholder: \"请输入搜索内容\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.searchTerm]]), _createElementVNode(\"button\", {\n    class: \"search-btn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.equipmentSearch && $options.equipmentSearch(...args))\n  }, \"搜索\")])]), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.medicineList, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"equipment-item\",\n      key: index\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n      src: item.picture,\n      alt: \"\",\n      style: {\n        \"width\": \"200px\",\n        \"height\": \"auto\"\n      }\n    }, null, 8\n    /* PROPS */\n    , _hoisted_7)]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(item.medicineName), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_10, \"单价: ￥\" + _toDisplayString(item.price), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createTextVNode(\" \" + _toDisplayString(item.feature), 1\n    /* TEXT */\n    )]), _createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _createTextVNode(_toDisplayString(item.typeName), 1\n    /* TEXT */\n    )]), _createElementVNode(\"button\", {\n      class: \"buy-button\",\n      onClick: $event => $options.detail(item)\n    }, \"查看详情\", 8\n    /* PROPS */\n    , _hoisted_15), _createElementVNode(\"button\", {\n      class: \"collect-button\",\n      onClick: $event => $options.insertCollect(item)\n    }, \"加入收藏\", 8\n    /* PROPS */\n    , _hoisted_16)])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;AACSA,OAAK,EAAC;;;AAGNA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;AAEJA,OAAK,EAAC;;;AAKRA,OAAK,EAAC;;;AAEFA,OAAK,EAAC;;;;AAGNA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;AACNA,OAAK,EAAC;;;AACNA,OAAK,EAAC;;;iEACTC,oBAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,EAAO;AAAA;AAAP;;;AAEGD,OAAK,EAAC;;;iEACTC,oBAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,EAAO;AAAA;AAAP;;;;;;;6DAvBVA,oBAEM,KAFN,cAEM,CADJC,aAAiBC,iBAAjB,CACI,CAFN,GAGAF,oBA2BM,KA3BN,cA2BM,CA1BJA,oBAMM,KANN,cAMM,CAJJA,oBAGM,KAHN,cAGM,iBAFJA,oBAAqF,OAArF,EAAqF;AAA9EG,QAAI,EAAC,MAAyE;+DAAzDC,kBAAUC,OAA+C;AAA7CN,SAAK,EAAC,cAAuC;AAAxBO,eAAW,EAAC;AAAY,GAArF;;AAAA,oBAA4BF,kBAExB,EADJJ,oBAA+D,QAA/D,EAA+D;AAAvDD,SAAK,EAAC,YAAiD;AAAnCQ,WAAK,yCAAEC,6DAAF;AAA8B,GAA/D,EAAoD,IAApD,CACI,CAHN,CAII,CANN,CA0BI,EAnBJR,oBAkBM,KAlBN,cAkBM,oBAjBJS,oBAgBMC,SAhBN,EAgBM,IAhBN,EAgBMC,YAhB8CC,kBAgB9C,EAhB0D,CAA5BC,IAA4B,EAAtBC,KAAsB,KAAjB;yBAA/CL,oBAgBM,KAhBN,EAgBM;AAhBDV,WAAK,EAAC,gBAgBL;AAhB6DgB,SAAG,EAAED;AAgBlE,KAhBN,GACEd,oBAEM,KAFN,cAEM,CADJA,oBAAoE,KAApE,EAAoE;AAA9DgB,SAAG,EAAEH,IAAI,CAACI,OAAoD;AAA3CC,SAAG,EAAC,EAAuC;AAApCC,WAAmC,EAAnC;AAAA;AAAA;AAAA;AAAoC,KAApE;;AAAA,iBACI,CAFN,GAGAnB,oBAWM,KAXN,cAWM,CAVJA,oBAAgD,KAAhD,cAAgDoB,iBAA1BP,IAAI,CAACQ,YAAqB,CAAhD,EAAuC;AAAA;AAAvC,KAUI,EATJrB,oBAA8C,KAA9C,eAAmB,UAAKoB,iBAAGP,IAAI,CAACS,KAAR,CAAxB,EAAqC;AAAA;AAArC,KASI,EARJtB,oBAEM,KAFN,eAEM,CADJuB,WACI,mBADQ,MAACH,iBAAGP,IAAI,CAACW,OAAR,GAAe;AAAA;KACxB,CAFN,CAQI,EALJxB,oBAEM,KAFN,eAEM,CADJyB,WACI,oCADWZ,IAAI,CAACa,WAAQ;AAAA;KACxB,CAFN,CAKI,EAFJ1B,oBAA8D,QAA9D,EAA8D;AAAtDD,WAAK,EAAC,YAAgD;AAAlCQ,aAAK,YAAEC,gBAAOK,IAAP;AAA2B,KAA9D,EAAiD,MAAjD,EAAqD;AAAA;AAArD,MAAqDc,WAArD,CAEI,EADJ3B,oBAAyE,QAAzE,EAAyE;AAAjED,WAAK,EAAC,gBAA2D;AAAzCQ,aAAK,YAAEC,uBAAcK,IAAd;AAAkC,KAAzE,EAA4D,MAA5D,EAAgE;AAAA;AAAhE,MAAgEe,WAAhE,CACI,CAXN,EAJF;GAgBM,CAhBN;;AAAA,GAiBI,EAlBN,CAmBI,CA3BN","names":["class","_createElementVNode","_createVNode","_component_Header","type","_ctx","$event","placeholder","onClick","$options","_createElementBlock","_Fragment","_renderList","$data","item","index","key","src","picture","alt","style","_toDisplayString","medicineName","price","_hoisted_12","feature","_hoisted_14","typeName","_hoisted_15","_hoisted_16"],"sourceRoot":"","sources":["D:\\Dev\\Front\\finalProject\\src\\views\\User\\test.vue"],"sourcesContent":["<template>\r\n    <div class=\"header\">\r\n      <Header></Header>\r\n    </div>\r\n    <div class=\"body\">\r\n      <div class=\"container\">\r\n    \r\n        <div class=\"header-search\">\r\n          <input type=\"text\" v-model=\"searchTerm\" class=\"search-input\" placeholder=\"请输入搜索内容\" />\r\n          <button class=\"search-btn\" @click=\"equipmentSearch\">搜索</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"equipment-list\">\r\n        <div class=\"equipment-item\" v-for=\"(item, index) in medicineList\" :key=\"index\">\r\n          <div class=\"img-wrapper\">\r\n            <img :src=\"item.picture\" alt=\"\" style=\"width: 200px; height: auto;\">\r\n          </div>\r\n          <div class=\"info-wrapper\">\r\n            <div class=\"title\">{{ item.medicineName }}</div>\r\n            <div class=\"price\">单价: ￥{{ item.price }}</div>\r\n            <div class=\"feature\">\r\n              <h2>功能:</h2> {{ item.feature }}\r\n            </div>\r\n            <div class=\"material\">\r\n              <h2>类型：</h2>{{ item.typeName }}\r\n            </div>\r\n            <button class=\"buy-button\" @click=\"detail(item)\">查看详情</button>\r\n            <button class=\"collect-button\" @click=\"insertCollect(item)\">加入收藏</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n    \r\n  <script>\r\n  import axios from 'axios';\r\n  import Header from '../userLayout/Header/header.vue';\r\n  \r\n  export default {\r\n    components: {\r\n      Header\r\n    },\r\n    data() {\r\n      return {\r\n        form: {},\r\n        username: sessionStorage.getItem('username'),\r\n        userid: sessionStorage.getItem('userid'),\r\n        isLoading: false,\r\n        medicineList: [],\r\n        equipmentTypes: [],\r\n        selectedType: '',\r\n        back: []\r\n      };\r\n    },\r\n  \r\n    mounted() {\r\n      this.getEquipmentList();\r\n      this.fetchEquipmentTypes();\r\n  \r\n    },\r\n  \r\n    methods: {\r\n      equipmentSearch() {\r\n    if (!this.searchTerm) { // 如果搜索框为空，就显示全部\r\n      this.getEquipmentList();\r\n      return;\r\n    }\r\n    const keyword = this.searchTerm.trim();\r\n    const filteredList = this.equipmentList.filter((item) =>\r\n      item.equipmentname.indexOf(keyword) !== -1 ||\r\n      item.feature.indexOf(keyword) !== -1 ||\r\n      item.material.indexOf(keyword) !== -1\r\n    );\r\n    this.updateEquipmentList(filteredList);\r\n  },\r\n      changeSelect() {\r\n        alert(\"当前显示类型\" + this.selectedType)\r\n        axios.get('http://localhost:8080/typeSearch?type=' + this.selectedType)\r\n          .then(res => {\r\n            console.log(res.data)\r\n            this.equipmentList = res.data\r\n            console.log(this.equipmentList)\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n      },\r\n  \r\n      async fetchEquipmentTypes() {\r\n        try {\r\n          const res = await axios.get('http://localhost:8080/equipmenttypeList');\r\n          this.equipmentTypes.push(...res.data);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n      async getEquipmentList() {\r\n        try {\r\n          const response = await axios.get('http://localhost:8080/allMedicine');\r\n          this.medicineList = response.data.data;\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      },\r\n  \r\n      updateEquipmentList(newList) {\r\n        this.equipmentList = newList;\r\n      },\r\n  \r\n      detail(item) {\r\n        this.$router.push({\r\n          path: '/detail',\r\n          query: {\r\n            id: item.id,\r\n          },\r\n        });\r\n      },\r\n  \r\n      async insertCollect(item) {\r\n        if (this.isLoading) {\r\n          return;\r\n        }\r\n        try {\r\n          this.isLoading = true;\r\n          const response = await axios.get('http://localhost:8080/collect', {\r\n            params: {\r\n              userid: sessionStorage.getItem('userid'),\r\n              equipmentid: item.id,\r\n            },\r\n          });\r\n          if (response.status === 200) {\r\n            if (response.data === '当前商品已收藏') {\r\n              this.$message.error('当前商品已收藏');\r\n            } else if (response.data === '收藏成功') {\r\n              this.$message.success('收藏成功');\r\n              item.isCollected = true;\r\n            } else if (response.data === '收藏失败，请稍后再试') {\r\n              this.$message.error('收藏失败，请稍后再试');\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        } finally {\r\n          this.isLoading = false;\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n    \r\n  <style scoped>\r\n  .body {\r\n    margin-top: 100px;\r\n  }\r\n  \r\n  h2{\r\n    font-weight: bold;\r\n    font-family: \"Microsoft YaHei\", 黑体, sans-serif;\r\n  }\r\n  \r\n  .equipment-item {\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    background-color: #fff;\r\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\r\n    border: 1px solid #cccccc;\r\n    /* 添加淡黑色边框 */\r\n  }\r\n  \r\n  .equipment-list {\r\n    margin-top: 15px;\r\n  }\r\n  \r\n  .img-wrapper {\r\n    width: 35%;\r\n    padding: 10px 10px 10px 200px;\r\n    /* 左右留白150px，上下10px */\r\n    margin: 0 10px 0 0;\r\n    /* 水平间距10px */\r\n  }\r\n  \r\n  .img-wrapper img {\r\n    display: block;\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n  \r\n  .info-wrapper {\r\n    width: 165%;\r\n    padding: 10px 150px 10px 10px;\r\n    /* 左右留白150px，上下10px */\r\n    margin: 0 0 0 10px;\r\n    /* 水平间距10px */\r\n  }\r\n  \r\n  .title {\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n    color: #333;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  .price {\r\n    font-size: 16px;\r\n    color: red;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .feature,\r\n  .material {\r\n    font-size: 14px;\r\n    color: #555;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  .buy-button {\r\n    padding: 8px 18px;\r\n    border: none;\r\n    background-color: #1bb1c4;\r\n    color: #fff;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .collect-button {\r\n    padding: 8px 18px;\r\n    border: none;\r\n    background-color: #da7bc4;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    margin-left: 10px;\r\n  }\r\n  \r\n  .buy-button:hover {\r\n    background-color: #ff9f3e;\r\n  }\r\n  \r\n  .select {\r\n    margin-left: 10%;\r\n  }\r\n  \r\n  .header-search {\r\n    margin-right: 35%;\r\n  }\r\n  \r\n  .search-input {\r\n    border: 2px solid #7ec8e3;\r\n    border-radius: 0;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    color: #333;\r\n    width: 400px;\r\n    height: 30px;\r\n    border-right-color: transparent; /* 将右侧边框的颜色设置为透明 */\r\n  }\r\n  \r\n  \r\n  \r\n  .search-btn {\r\n    height: 46px;\r\n    width: 100px;\r\n    border: none;\r\n    border-radius: 0px;\r\n    padding: 6px 16px;\r\n    font-size: 14px;\r\n    color: #fff;\r\n    background-color: #3d7f00;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  </style>\r\n    "]},"metadata":{},"sourceType":"module"}