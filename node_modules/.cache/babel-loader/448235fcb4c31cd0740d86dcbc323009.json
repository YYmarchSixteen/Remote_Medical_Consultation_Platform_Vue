{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-98b15a5c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Doctor List\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  key: 0\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"editor\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" 查看详情 \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.openEditor && $options.openEditor(...args))\n  }, \"打开编辑器\"), $data.editorVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.saveContent && $options.saveContent(...args))\n  }, \"保存\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.closeEditor && $options.closeEditor(...args))\n  }, \"关闭\")])) : _createCommentVNode(\"v-if\", true)]), _createVNode(_component_el_table, {\n    data: $data.doctors,\n    border: \"\",\n    stripe: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"noticeId\",\n      label: \"医生ID\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"receiver\",\n      label: \"接收者\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"title\",\n      label: \"标题\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"status\",\n      label: \"当前状态\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"sendTime\",\n      label: \"发送时间\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"120\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: _ctx.noticeInfo\n      }, {\n        default: _withCtx(() => [_hoisted_5]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\"])]);\n}","map":{"version":3,"mappings":";;;;;AACOA,OAAK,EAAC;;;gEACTC,oBAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,EAAe;AAAA;AAAf;;;;;;gEAIIA,oBAAuB,KAAvB,EAAuB;AAAlBC,IAAE,EAAC;AAAe,CAAvB,EAAgB,IAAhB,EAAgB;AAAA;AAAhB;;iDAakE;;;;;;;;;uBAlBxEC,oBAwBM,KAxBN,cAwBM,CAvBJC,UAuBI,EAtBJH,oBAOM,KAPN,EAOM,IAPN,EAOM,CANJA,oBAA0C,QAA1C,EAA0C;AAAjCI,WAAK,yCAAEC,mDAAF;AAA4B,GAA1C,EAA4B,OAA5B,CAMI,EALOC,qCAAXJ,oBAIM,KAJN,EAIMK,UAJN,EAIM,CAHJC,UAGI,EAFJR,oBAAwC,QAAxC,EAAwC;AAA/BI,WAAK,yCAAEC,qDAAF;AAA0B,GAAxC,EAA6B,IAA7B,CAEI,EADJL,oBAAwC,QAAxC,EAAwC;AAA/BI,WAAK,yCAAEC,qDAAF;AAA0B,GAAxC,EAA6B,IAA7B,CACI,CAJN,sCAKI,CAPN,CAsBI,EAdJI,aAaWC,mBAbX,EAaW;AAbAC,QAAI,EAAEL,aAaN;AAbeM,UAAM,EAAN,EAaf;AAbsBC,UAAM,EAAN;AAatB,GAbX;sBACE,MAAgE,CAAhEJ,aAAgEK,0BAAhE,EAAgE;AAA/CC,UAAI,EAAC,UAA0C;AAA/BC,WAAK,EAAC;AAAyB,KAAhE,CAAgE,EAChEP,aAA+DK,0BAA/D,EAA+D;AAA9CC,UAAI,EAAC,UAAyC;AAA9BC,WAAK,EAAC;AAAwB,KAA/D,CADgE,EAEhEP,aAA2DK,0BAA3D,EAA2D;AAA1CC,UAAI,EAAC,OAAqC;AAA7BC,WAAK,EAAC;AAAuB,KAA3D,CAFgE,EAGhEP,aAA8DK,0BAA9D,EAA8D;AAA7CC,UAAI,EAAC,QAAwC;AAA/BC,WAAK,EAAC;AAAyB,KAA9D,CAHgE,EAIhEP,aAAgEK,0BAAhE,EAAgE;AAA/CC,UAAI,EAAC,UAA0C;AAA/BC,WAAK,EAAC;AAAyB,KAAhE,CAJgE,EAKhEP,aAMkBK,0BANlB,EAMkB;AANDE,WAAK,EAAC,IAML;AANUC,WAAK,EAAC;AAMhB,KANlB;AACaC,aAAO,WAChB,MAEY,CAFZT,aAEYU,oBAFZ,EAEY;AAFDC,YAAI,EAAJ,EAEC;AAFIC,YAAI,EAAC,SAET;AAFmBC,YAAI,EAAC,OAExB;AAFiClB,eAAK,EAAEmB;AAExC,OAFZ;0BAAgE,MAEhE;;;;OAFA;;AAAA,oBAEY,CAHI;;;;KADpB,CALgE;;;;GADlE;;AAAA,aAcI,CAxBN","names":["class","_createElementVNode","id","_createElementBlock","_hoisted_2","onClick","$options","$data","_hoisted_3","_hoisted_4","_createVNode","_component_el_table","data","border","stripe","_component_el_table_column","prop","label","width","default","_component_el_button","link","type","size","_ctx"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\Admin\\notice.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1>Doctor List</h1>\r\n    <div>\r\n      <button @click=\"openEditor\">打开编辑器</button>\r\n      <div v-if=\"editorVisible\">\r\n        <div id=\"editor\"></div>\r\n        <button @click=\"saveContent\">保存</button>\r\n        <button @click=\"closeEditor\">关闭</button>\r\n      </div>\r\n    </div>\r\n    <el-table :data=\"doctors\" border stripe>\r\n      <el-table-column prop=\"noticeId\" label=\"医生ID\"></el-table-column>\r\n      <el-table-column prop=\"receiver\" label=\"接收者\"></el-table-column>\r\n      <el-table-column prop=\"title\" label=\"标题\"></el-table-column>\r\n      <el-table-column prop=\"status\" label=\"当前状态\"></el-table-column>\r\n      <el-table-column prop=\"sendTime\" label=\"发送时间\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"120\">\r\n        <template #default>\r\n          <el-button link type=\"primary\" size=\"small\" @click=\"noticeInfo\">\r\n            查看详情\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport Quill from 'quill'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      doctors: [],\r\n      quill: null,\r\n      editorVisible: false // 控制富文本编辑器的显示与隐藏\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchDoctors()\r\n    // 创建Quill实例\r\n    this.quill = new Quill('#editor', {\r\n      theme: 'snow' // 使用snow主题，也可以根据需要自行选择\r\n    })\r\n  },\r\n  methods: {\r\n    async fetchDoctors() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8081/notice/all')\r\n        this.doctors = response.data.data\r\n      } catch (error) {\r\n        console.error('Error fetching doctors:', error)\r\n      }\r\n    },\r\n    // 点击按钮弹出富文本编辑器\r\n    openEditor() {\r\n      this.editorVisible = true\r\n    },\r\n    // 关闭富文本编辑器\r\n    closeEditor() {\r\n      this.editorVisible = false\r\n    },\r\n    // 保存编辑器内容\r\n    saveContent() {\r\n      const content = this.quill.root.innerHTML\r\n      // 处理编辑器内容，例如保存到数据库等操作\r\n      console.log(content)\r\n      // 关闭编辑器\r\n      this.closeEditor()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  margin: 20px auto;\r\n  max-width: 800px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}