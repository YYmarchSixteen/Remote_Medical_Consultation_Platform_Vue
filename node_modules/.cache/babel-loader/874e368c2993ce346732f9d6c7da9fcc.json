{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-a767b0bc\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"header\"\n};\nconst _hoisted_2 = {\n  class: \"body\"\n};\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  class: \"header-search\"\n};\nconst _hoisted_5 = {\n  class: \"equipment-list\"\n};\nconst _hoisted_6 = {\n  class: \"img-wrapper\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"info-wrapper\"\n};\nconst _hoisted_9 = {\n  class: \"title\"\n};\nconst _hoisted_10 = {\n  class: \"price\"\n};\nconst _hoisted_11 = {\n  class: \"feature\"\n};\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"功能:\", -1\n/* HOISTED */\n));\n\nconst _hoisted_13 = {\n  class: \"material\"\n};\n\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"类型：\", -1\n/* HOISTED */\n));\n\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_Header)]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchTerm = $event),\n    class: \"search-input\",\n    placeholder: \"请输入搜索内容\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.searchTerm]]), _createElementVNode(\"button\", {\n    class: \"search-btn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.equipmentSearch && $options.equipmentSearch(...args))\n  }, \"搜索\")])]), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredMedicineList, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"equipment-item\",\n      key: index\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n      src: item.picture,\n      alt: \"\",\n      style: {\n        \"width\": \"200px\",\n        \"height\": \"auto\"\n      }\n    }, null, 8\n    /* PROPS */\n    , _hoisted_7)]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(item.medicineName), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_10, \"单价: ￥\" + _toDisplayString(item.price), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createTextVNode(\" \" + _toDisplayString(item.feature), 1\n    /* TEXT */\n    )]), _createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _createTextVNode(_toDisplayString(item.typeName), 1\n    /* TEXT */\n    )]), _createElementVNode(\"button\", {\n      class: \"buy-button\",\n      onClick: $event => $options.detail(item)\n    }, \"查看详情\", 8\n    /* PROPS */\n    , _hoisted_15), _createElementVNode(\"button\", {\n      class: \"collect-button\",\n      onClick: $event => $options.cart(item)\n    }, \"加入购物车\", 8\n    /* PROPS */\n    , _hoisted_16)])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;AACOA,OAAK,EAAC;;;AAGNA,OAAK,EAAC;;;AACFA,OAAK,EAAC;;;AAGFA,OAAK,EAAC;;;AAMVA,OAAK,EAAC;;;AAEEA,OAAK,EAAC;;;;AAGNA,OAAK,EAAC;;;AACFA,OAAK,EAAC;;;AACNA,OAAK,EAAC;;;AACNA,OAAK,EAAC;;;iEACPC,oBAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,EAAO;AAAA;AAAP;;;AAECD,OAAK,EAAC;;;iEACPC,oBAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,EAAO;AAAA;AAAP;;;;;;;6DAzBpBA,oBAEM,KAFN,cAEM,CADFC,aAAiBC,iBAAjB,CACE,CAFN,GAGAF,oBA6BM,KA7BN,cA6BM,CA5BFA,oBAOM,KAPN,cAOM,CAJFA,oBAGM,KAHN,cAGM,iBAFFA,oBAAqF,OAArF,EAAqF;AAA9EG,QAAI,EAAC,MAAyE;+DAAzDC,mBAAUC,OAA+C;AAA7CN,SAAK,EAAC,cAAuC;AAAxBO,eAAW,EAAC;AAAY,GAArF;;AAAA,oBAA4BF,mBAE1B,EADFJ,oBAA+D,QAA/D,EAA+D;AAAvDD,SAAK,EAAC,YAAiD;AAAnCQ,WAAK,yCAAEC,6DAAF;AAA8B,GAA/D,EAAoD,IAApD,CACE,CAHN,CAIE,CAPN,CA4BE,EAnBFR,oBAkBM,KAlBN,cAkBM,oBAjBFS,oBAgBMC,SAhBN,EAgBM,IAhBN,EAgBMC,YAhB8CH,6BAgB9C,EAhBkE,CAApCI,IAAoC,EAA9BC,KAA8B,KAAzB;yBAA/CJ,oBAgBM,KAhBN,EAgBM;AAhBDV,WAAK,EAAC,gBAgBL;AAhBqEe,SAAG,EAAED;AAgB1E,KAhBN,GACIb,oBAEM,KAFN,cAEM,CADFA,oBAAsE,KAAtE,EAAsE;AAAhEe,SAAG,EAAEH,IAAI,CAACI,OAAsD;AAA7CC,SAAG,EAAC,EAAyC;AAAtCC,WAAmC,EAAnC;AAAA;AAAA;AAAA;AAAsC,KAAtE;;AAAA,iBACE,CAFN,GAGAlB,oBAWM,KAXN,cAWM,CAVFA,oBAAgD,KAAhD,cAAgDmB,iBAA1BP,IAAI,CAACQ,YAAqB,CAAhD,EAAuC;AAAA;AAAvC,KAUE,EATFpB,oBAA8C,KAA9C,eAAmB,UAAKmB,iBAAGP,IAAI,CAACS,KAAR,CAAxB,EAAqC;AAAA;AAArC,KASE,EARFrB,oBAEM,KAFN,eAEM,CADFsB,WACE,mBADU,MAACH,iBAAGP,IAAI,CAACW,OAAR,GAAe;AAAA;KAC1B,CAFN,CAQE,EALFvB,oBAEM,KAFN,eAEM,CADFwB,WACE,oCADaZ,IAAI,CAACa,WAAQ;AAAA;KAC1B,CAFN,CAKE,EAFFzB,oBAA8D,QAA9D,EAA8D;AAAtDD,WAAK,EAAC,YAAgD;AAAlCQ,aAAK,YAAEC,gBAAOI,IAAP;AAA2B,KAA9D,EAAiD,MAAjD,EAAqD;AAAA;AAArD,MAAqDc,WAArD,CAEE,EADF1B,oBAAiE,QAAjE,EAAiE;AAAzDD,WAAK,EAAC,gBAAmD;AAAjCQ,aAAK,YAAEC,cAAKI,IAAL;AAA0B,KAAjE,EAAmD,OAAnD,EAAwD;AAAA;AAAxD,MAAwDe,WAAxD,CACE,CAXN,EAJJ;GAgBM,CAhBN;;AAAA,GAiBE,EAlBN,CAmBE,CA7BN","names":["class","_createElementVNode","_createVNode","_component_Header","type","$data","$event","placeholder","onClick","$options","_createElementBlock","_Fragment","_renderList","item","index","key","src","picture","alt","style","_toDisplayString","medicineName","price","_hoisted_12","feature","_hoisted_14","typeName","_hoisted_15","_hoisted_16"],"sourceRoot":"","sources":["D:\\Dev\\Front\\finalProject\\src\\views\\User\\shoppingCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"header\">\r\n      <Header></Header>\r\n  </div>\r\n  <div class=\"body\">\r\n      <div class=\"container\">\r\n\r\n\r\n          <div class=\"header-search\">\r\n              <input type=\"text\" v-model=\"searchTerm\" class=\"search-input\" placeholder=\"请输入搜索内容\" />\r\n              <button class=\"search-btn\" @click=\"equipmentSearch\">搜索</button>\r\n          </div>\r\n      </div>\r\n\r\n      <div class=\"equipment-list\">\r\n          <div class=\"equipment-item\" v-for=\"(item, index) in filteredMedicineList\" :key=\"index\">\r\n              <div class=\"img-wrapper\">\r\n                  <img :src=\"item.picture\" alt=\"\" style=\"width: 200px; height: auto;\" />\r\n              </div>\r\n              <div class=\"info-wrapper\">\r\n                  <div class=\"title\">{{ item.medicineName }}</div>\r\n                  <div class=\"price\">单价: ￥{{ item.price }}</div>\r\n                  <div class=\"feature\">\r\n                      <h2>功能:</h2> {{ item.feature }}\r\n                  </div>\r\n                  <div class=\"material\">\r\n                      <h2>类型：</h2>{{ item.typeName }}\r\n                  </div>\r\n                  <button class=\"buy-button\" @click=\"detail(item)\">查看详情</button>\r\n                  <button class=\"collect-button\" @click=\"cart(item)\">加入购物车</button>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport axios from \"axios\";\r\nimport Header from \"../userLayout/Header/header.vue\";\r\n\r\nexport default {\r\n  components: {\r\n      Header,\r\n  },\r\n  data() {\r\n      return {\r\n          form: {},\r\n          username: sessionStorage.getItem(\"username\"),\r\n          userId: sessionStorage.getItem(\"userId\"),\r\n          isLoading: false,\r\n          medicineList: [],\r\n          medicineTypes: [],\r\n          selectedType: \"\",\r\n          searchTerm: \"\",\r\n      };\r\n  },\r\n\r\n  mounted() {\r\n      this.getMedicineList();\r\n      this.fetchMedicineTypes();\r\n      console.log(this.username)\r\n      console.log(this.userId)\r\n  },\r\n\r\n  computed: {\r\n      filteredMedicineList() {\r\n          if (this.searchTerm === \"\") {\r\n              return this.medicineList.filter(item => item.typeName === this.selectedType || this.selectedType === \"\");\r\n          } else {\r\n              const reg = new RegExp(this.searchTerm, \"i\");\r\n              return this.medicineList.filter(\r\n                  (item) => (item.medicineName.search(reg) !== -1) && (item.typeName === this.selectedType || this.selectedType === \"\")\r\n              );\r\n          }\r\n      },\r\n\r\n  },\r\n\r\n  methods: {\r\n      cart(item) {\r\n          const { medicineId, medicineName, price } = item;\r\n          const count = 1; // 假设默认传递的 count 为 1\r\n          const userId = this.userId;\r\n\r\n          axios.get(`http://localhost:8080/insertCart?userId=${userId}&medicineId=${medicineId}&medicineName=${medicineName}&count=${count}&price=${price}`)\r\n              .then(res => {\r\n                  if (res.data.code === 400) {\r\n                      this.$message.error('添加失败，请稍后再试！');\r\n                  } else if (res.data.code === 409) {\r\n                      this.$message.warning('药品已在购物车中，请勿重复添加！');\r\n                  } else if (res.data.code === 200) {\r\n                      this.$message.success('添加成功！');\r\n                  }\r\n              })\r\n              .catch(error => {\r\n                  console.error(error);\r\n                  this.$message.error('添加失败，请稍后再试！');\r\n              })\r\n      },\r\n      async fetchMedicineTypes() {\r\n          try {\r\n              const res = await axios.get(\"http://localhost:8080/allMedicineType\");\r\n              this.medicineTypes.push(...res.data.data);\r\n          } catch (error) {\r\n              console.log(error);\r\n          }\r\n      },\r\n      async getMedicineList() {\r\n          try {\r\n              const response = await axios.get(\"http://localhost:8080/allMedicine\");\r\n              this.medicineList = response.data.data;\r\n          } catch (error) {\r\n              console.error(error);\r\n          }\r\n      },\r\n      equipmentSearch() {\r\n          // 根据用户输入的搜索内容进行筛选过滤\r\n          this.filteredMedicineList;\r\n      },\r\n      detail(item) {\r\n          this.$router.push({\r\n              path: '/detail',\r\n              query: {\r\n                  medicineId: item.medicineId,\r\n              },\r\n          });\r\n      },\r\n  },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n.body {\r\n  margin-top: 100px;\r\n}\r\n\r\nh2 {\r\n  font-weight: bold;\r\n  font-family: \"Microsoft YaHei\", 黑体, sans-serif;\r\n}\r\n\r\n.equipment-item {\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  background-color: #fff;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid #cccccc;\r\n  /* 添加淡黑色边框 */\r\n}\r\n\r\n.equipment-list {\r\n  margin-top: 15px;\r\n}\r\n\r\n.img-wrapper {\r\n  width: 35%;\r\n  padding: 10px 10px 10px 200px;\r\n  /* 左右留白150px，上下10px /\r\n  margin: 0 10px 0 0;\r\n  / 水平间距10px */\r\n}\r\n\r\n.img-wrapper img {\r\n  display: block;\r\n  width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.info-wrapper {\r\n  width: 165%;\r\n  padding: 10px 150px 10px 10px;\r\n  /* 左右留白150px，上下10px /\r\n  margin: 0 0 0 10px;\r\n  / 水平间距10px */\r\n}\r\n\r\n.title {\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  color: #333;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.price {\r\n  font-size: 16px;\r\n  color: red;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.feature,\r\n.material {\r\n  font-size: 14px;\r\n  color: #555;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.buy-button {\r\n  padding: 8px 18px;\r\n  border: none;\r\n  background-color: #1bb1c4;\r\n  color: #fff;\r\n  cursor: pointer;\r\n}\r\n\r\n.collect-button {\r\n  padding: 8px 18px;\r\n  border: none;\r\n  background-color: #da7bc4;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n}\r\n\r\n.buy-button:hover {\r\n  background-color: #ff9f3e;\r\n}\r\n\r\n.select {\r\n  margin-left: 10%;\r\n}\r\n\r\n.header-search {\r\n  margin-right: 35%;\r\n}\r\n\r\n.search-input {\r\n  border: 2px solid #7ec8e3;\r\n  border-radius: 0;\r\n  padding: 6px 12px;\r\n  font-size: 14px;\r\n  color: #333;\r\n  width: 400px;\r\n  height: 30px;\r\n  border-right-color: transparent;\r\n  /* 将右侧边框的颜色设置为透明 */\r\n}\r\n\r\n.search-btn {\r\n  height: 46px;\r\n  width: 100px;\r\n  border: none;\r\n  border-radius: 0px;\r\n  padding: 6px 16px;\r\n  font-size: 14px;\r\n  color: #fff;\r\n  background-color: #3d7f00;\r\n  cursor: pointer;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}