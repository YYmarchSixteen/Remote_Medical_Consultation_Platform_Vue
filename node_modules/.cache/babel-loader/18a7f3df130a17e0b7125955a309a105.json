{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveDirective as _resolveDirective, createElementVNode as _createElementVNode, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"content\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_quill = _resolveDirective(\"quill\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" bidirectional data binding（双向数据绑定） \"), _withDirectives(_createElementVNode(\"div\", {\n    class: \"quill-editor\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.content = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_directive_quill, $data.editorOption, \"myQuillEditor\"]]), _createCommentVNode(\" Or manually control the data synchronization（手动控制数据流）  \"), _withDirectives(_createElementVNode(\"div\", {\n    class: \"quill-editor\",\n    content: $data.content,\n    onChange: _cache[1] || (_cache[1] = $event => $options.onEditorChange($event))\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_1), [[_directive_quill, $data.editorOption, \"myQuillEditor\"]])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;6DACEA,6EACAC,oBAGM,KAHN,EAGM;AAHDC,SAAK,EAAC,cAGL;+DAFQC,gBAAOC;AAEf,GAHN;;AAAA,yBAE4BD,oBAAf,oBAGbH,iGACAC,oBAIM,KAJN,EAIM;AAJDC,SAAK,EAAC,cAIL;AAHAG,WAAO,EAAEF,aAGT;AAFAG,YAAM,sCAAEC,wBAAeH,MAAf,CAAF;AAEN,GAJN;;AAAA,qCAG4BD,oBAAf","names":["_createCommentVNode","_createElementVNode","class","$data","$event","content","onChange","$options"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\Admin\\notice.vue"],"sourcesContent":["<template>\r\n  <!-- bidirectional data binding（双向数据绑定） -->\r\n  <div class=\"quill-editor\"\r\n       v-model=\"content\"\r\n       v-quill:myQuillEditor=\"editorOption\">\r\n  </div>\r\n\r\n  <!-- Or manually control the data synchronization（手动控制数据流）  -->\r\n  <div class=\"quill-editor\"\r\n       :content=\"content\"\r\n       @change=\"onEditorChange($event)\"\r\n       v-quill:myQuillEditor=\"editorOption\">\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      content: '<p>example content</p>',\r\n      editorOption: { /* quill options */ }\r\n    }\r\n  },\r\n  mounted() {\r\n    console.log('this is current quill instance object', this.myQuillEditor)\r\n  },\r\n  methods: {\r\n    onEditorChange(event) {\r\n      console.log('onEditorChange')\r\n    }\r\n  },\r\n  // Omit the same parts as in the following component sample code\r\n  // ...\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}