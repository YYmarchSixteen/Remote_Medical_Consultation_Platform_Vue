{"ast":null,"code":"import axios from \"axios\";\nimport Header from \"../userLayout/Header/header.vue\";\nexport default {\n  components: {\n    Header\n  },\n\n  data() {\n    return {\n      form: {},\n      username: sessionStorage.getItem(\"username\"),\n      userId: sessionStorage.getItem(\"userId\"),\n      isLoading: false,\n      medicineList: [],\n      medicineTypes: [],\n      selectedType: \"\",\n      searchTerm: \"\"\n    };\n  },\n\n  mounted() {\n    this.getMedicineList();\n    this.fetchMedicineTypes();\n    console.log(this.username);\n    console.log(this.userId);\n  },\n\n  computed: {\n    filteredMedicineList() {\n      if (this.searchTerm === \"\") {\n        return this.medicineList.filter(item => item.typeName === this.selectedType || this.selectedType === \"\");\n      } else {\n        const reg = new RegExp(this.searchTerm, \"i\");\n        return this.medicineList.filter(item => item.medicineName.search(reg) !== -1 && (item.typeName === this.selectedType || this.selectedType === \"\"));\n      }\n    }\n\n  },\n  methods: {\n    cart(item) {\n      const {\n        medicineId,\n        medicineName,\n        price\n      } = item;\n      const count = 1; // 假设默认传递的 count 为 1\n\n      const userId = this.userId;\n      axios.get(`http://localhost:8080/insertCart?userId=${userId}&medicineId=${medicineId}&medicineName=${medicineName}&count=${count}&price=${price}`).then(res => {\n        if (res.data.code === 400) {\n          this.$message.error('添加失败，请稍后再试！');\n        } else if (res.data.code === 409) {\n          this.$message.warning('药品已在购物车中，请勿重复添加！');\n        } else if (res.data.code === 200) {\n          this.$message.success('添加成功！');\n        }\n      }).catch(error => {\n        console.error(error);\n        this.$message.error('添加失败，请稍后再试！');\n      });\n    },\n\n    async fetchMedicineTypes() {\n      try {\n        const res = await axios.get(\"http://localhost:8080/allMedicineType\");\n        this.medicineTypes.push(...res.data.data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async getMedicineList() {\n      try {\n        const userId = this.userId; // 获取参数 userId\n\n        const response = await axios.get(`http://localhost:8080/cartById?userId=${userId}`);\n        this.medicineList = response.data.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    equipmentSearch() {\n      // 根据用户输入的搜索内容进行筛选过滤\n      this.filteredMedicineList;\n    },\n\n    detail(item) {\n      this.$router.push({\n        path: '/detail',\n        query: {\n          medicineId: item.medicineId\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","Header","components","data","form","username","sessionStorage","getItem","userId","isLoading","medicineList","medicineTypes","selectedType","searchTerm","mounted","getMedicineList","fetchMedicineTypes","console","log","computed","filteredMedicineList","filter","item","typeName","reg","RegExp","medicineName","search","methods","cart","medicineId","price","count","get","then","res","code","$message","error","warning","success","catch","push","response","equipmentSearch","detail","$router","path","query"],"sourceRoot":"","sources":["D:\\Dev\\Front\\finalProject\\src\\views\\User\\shoppingCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"header\">\r\n    <Header></Header>\r\n  </div>\r\n  <div class=\"body\">\r\n    <div class=\"container\">\r\n      <div class=\"select\">\r\n        <el-select v-model=\"selectedType\" placeholder=\"请选择药品类型\">\r\n          <el-option v-for=\"type in medicineTypes\" :key=\"type.id\" :label=\"type.typeName\" :value=\"type.typeName\"\r\n            @click=\"selectedType = type.typeName\"></el-option>\r\n        </el-select>\r\n      </div>\r\n\r\n      <div class=\"header-search\">\r\n        <input type=\"text\" v-model=\"searchTerm\" class=\"search-input\" placeholder=\"请输入搜索内容\" />\r\n        <button class=\"search-btn\" @click=\"equipmentSearch\">搜索</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"equipment-list\">\r\n      <div class=\"equipment-item\" v-for=\"(item, index) in filteredMedicineList\" :key=\"index\">\r\n        <div class=\"img-wrapper\">\r\n          <img :src=\"item.picture\" alt=\"\" style=\"width: 200px; height: auto;\" />\r\n        </div>\r\n        <div class=\"info-wrapper\">\r\n          <div class=\"title\">{{ item.medicineName }}</div>\r\n          <div class=\"price\">单价: ￥{{ item.price }}</div>\r\n          <div class=\"feature\">\r\n            <h2>功能:</h2> {{ item.feature }}\r\n          </div>\r\n          <div class=\"material\">\r\n            <h2>类型：</h2>{{ item.typeName }}\r\n          </div>\r\n          <button class=\"buy-button\" @click=\"pay(item)\">点击购买</button>\r\n          <button class=\"collect-button\" @click=\"cart(item)\">移出购物车</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport axios from \"axios\";\r\nimport Header from \"../userLayout/Header/header.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    Header,\r\n  },\r\n  data() {\r\n    return {\r\n      form: {},\r\n      username: sessionStorage.getItem(\"username\"),\r\n      userId: sessionStorage.getItem(\"userId\"),\r\n      isLoading: false,\r\n      medicineList: [],\r\n      medicineTypes: [],\r\n      selectedType: \"\",\r\n      searchTerm: \"\",\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.getMedicineList();\r\n    this.fetchMedicineTypes();\r\n    console.log(this.username)\r\n    console.log(this.userId)\r\n  },\r\n\r\n  computed: {\r\n    filteredMedicineList() {\r\n      if (this.searchTerm === \"\") {\r\n        return this.medicineList.filter(item => item.typeName === this.selectedType || this.selectedType === \"\");\r\n      } else {\r\n        const reg = new RegExp(this.searchTerm, \"i\");\r\n        return this.medicineList.filter(\r\n          (item) => (item.medicineName.search(reg) !== -1) && (item.typeName === this.selectedType || this.selectedType === \"\")\r\n        );\r\n      }\r\n    },\r\n\r\n  },\r\n\r\n  methods: {\r\n    cart(item) {\r\n      const { medicineId, medicineName, price } = item;\r\n      const count = 1; // 假设默认传递的 count 为 1\r\n      const userId = this.userId;\r\n\r\n      axios.get(`http://localhost:8080/insertCart?userId=${userId}&medicineId=${medicineId}&medicineName=${medicineName}&count=${count}&price=${price}`)\r\n        .then(res => {\r\n          if (res.data.code === 400) {\r\n            this.$message.error('添加失败，请稍后再试！');\r\n          } else if (res.data.code === 409) {\r\n            this.$message.warning('药品已在购物车中，请勿重复添加！');\r\n          } else if (res.data.code === 200) {\r\n            this.$message.success('添加成功！');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n          this.$message.error('添加失败，请稍后再试！');\r\n        })\r\n    },\r\n    async fetchMedicineTypes() {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:8080/allMedicineType\");\r\n        this.medicineTypes.push(...res.data.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    async getMedicineList() {\r\n      try {\r\n        const userId = this.userId; // 获取参数 userId\r\n        const response = await axios.get(`http://localhost:8080/cartById?userId=${userId}`);\r\n        this.medicineList = response.data.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    equipmentSearch() {\r\n      // 根据用户输入的搜索内容进行筛选过滤\r\n      this.filteredMedicineList;\r\n    },\r\n    detail(item) {\r\n      this.$router.push({\r\n        path: '/detail',\r\n        query: {\r\n          medicineId: item.medicineId,\r\n        },\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n.body {\r\n  margin-top: 100px;\r\n}\r\n\r\nh2 {\r\n  font-weight: bold;\r\n  font-family: \"Microsoft YaHei\", 黑体, sans-serif;\r\n}\r\n\r\n.equipment-item {\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  background-color: #fff;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid #cccccc;\r\n  /* 添加淡黑色边框 */\r\n}\r\n\r\n.equipment-list {\r\n  margin-top: 15px;\r\n}\r\n\r\n.img-wrapper {\r\n  width: 35%;\r\n  padding: 10px 10px 10px 200px;\r\n  /* 左右留白150px，上下10px /\r\n  margin: 0 10px 0 0;\r\n  / 水平间距10px */\r\n}\r\n\r\n.img-wrapper img {\r\n  display: block;\r\n  width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.info-wrapper {\r\n  width: 165%;\r\n  padding: 10px 150px 10px 10px;\r\n  /* 左右留白150px，上下10px /\r\n  margin: 0 0 0 10px;\r\n  / 水平间距10px */\r\n}\r\n\r\n.title {\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  color: #333;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.price {\r\n  font-size: 16px;\r\n  color: red;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.feature,\r\n.material {\r\n  font-size: 14px;\r\n  color: #555;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.buy-button {\r\n  padding: 8px 18px;\r\n  border: none;\r\n  background-color: #1bb1c4;\r\n  color: #fff;\r\n  cursor: pointer;\r\n}\r\n\r\n.collect-button {\r\n  padding: 8px 18px;\r\n  border: none;\r\n  background-color: #da7bc4;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n}\r\n\r\n.buy-button:hover {\r\n  background-color: #ff9f3e;\r\n}\r\n\r\n.select {\r\n  margin-left: 10%;\r\n}\r\n\r\n.header-search {\r\n  margin-right: 35%;\r\n}\r\n\r\n.search-input {\r\n  border: 2px solid #7ec8e3;\r\n  border-radius: 0;\r\n  padding: 6px 12px;\r\n  font-size: 14px;\r\n  color: #333;\r\n  width: 400px;\r\n  height: 30px;\r\n  border-right-color: transparent;\r\n  /* 将右侧边框的颜色设置为透明 */\r\n}\r\n\r\n.search-btn {\r\n  height: 46px;\r\n  width: 100px;\r\n  border: none;\r\n  border-radius: 0px;\r\n  padding: 6px 16px;\r\n  font-size: 14px;\r\n  color: #fff;\r\n  background-color: #3d7f00;\r\n  cursor: pointer;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}