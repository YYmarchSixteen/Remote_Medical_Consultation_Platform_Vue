{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7b5ee6c5\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Doctor List\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" 查看详情 \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_el_table, {\n    data: $data.doctors,\n    border: \"\",\n    stripe: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"userId\",\n      label: \"用户ID\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"username\",\n      label: \"用户名\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"picture\",\n      label: \"头像\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"telephone\",\n      label: \"联系方式\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"gender\",\n      label: \"性别\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"age\",\n      label: \"年龄\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"status\",\n      label: \"当前状态\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"120\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: _ctx.handleClick\n      }, {\n        default: _withCtx(() => [_hoisted_3]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\"])]);\n}","map":{"version":3,"mappings":";;;;;AACOA,OAAK,EAAC;;;gEACTC,oBAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,EAAe;AAAA;AAAf;;iDAWuE;;;;;;;;;uBAZzEC,oBAkBM,KAlBN,cAkBM,CAjBJC,UAiBI,EAhBJC,aAeWC,mBAfX,EAeW;AAfAC,QAAI,EAAEC,aAeN;AAfeC,UAAM,EAAN,EAef;AAfsBC,UAAM,EAAN;AAetB,GAfX;sBACE,MAA8D,CAA9DL,aAA8DM,0BAA9D,EAA8D;AAA7CC,UAAI,EAAC,QAAwC;AAA/BC,WAAK,EAAC;AAAyB,KAA9D,CAA8D,EAC9DR,aAA+DM,0BAA/D,EAA+D;AAA9CC,UAAI,EAAC,UAAyC;AAA9BC,WAAK,EAAC;AAAwB,KAA/D,CAD8D,EAE9DR,aAA6DM,0BAA7D,EAA6D;AAA5CC,UAAI,EAAC,SAAuC;AAA7BC,WAAK,EAAC;AAAuB,KAA7D,CAF8D,EAG9DR,aAAiEM,0BAAjE,EAAiE;AAAhDC,UAAI,EAAC,WAA2C;AAA/BC,WAAK,EAAC;AAAyB,KAAjE,CAH8D,EAI9DR,aAA4DM,0BAA5D,EAA4D;AAA3CC,UAAI,EAAC,QAAsC;AAA7BC,WAAK,EAAC;AAAuB,KAA5D,CAJ8D,EAK9DR,aAAyDM,0BAAzD,EAAyD;AAAxCC,UAAI,EAAC,KAAmC;AAA7BC,WAAK,EAAC;AAAuB,KAAzD,CAL8D,EAM9DR,aAA8DM,0BAA9D,EAA8D;AAA7CC,UAAI,EAAC,QAAwC;AAA/BC,WAAK,EAAC;AAAyB,KAA9D,CAN8D,EAO9DR,aAMkBM,0BANlB,EAMkB;AANAE,WAAK,EAAC,IAMN;AANWC,WAAK,EAAC;AAMjB,KANlB;AACaC,aAAO,WAChB,MAEY,CAFZV,aAEYW,oBAFZ,EAEY;AAFDC,YAAI,EAAJ,EAEC;AAFIC,YAAI,EAAC,SAET;AAFmBC,YAAI,EAAC,OAExB;AAFiCC,eAAK,EAAEC;AAExC,OAFZ;0BAAiE,MAEjE;;;;OAFA;;AAAA,oBAEY,CAHI;;;;KADpB,CAP8D;;;;GADhE;;AAAA,aAgBI,CAlBN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_createVNode","_component_el_table","data","$data","border","stripe","_component_el_table_column","prop","label","width","default","_component_el_button","link","type","size","onClick","_ctx"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\Admin\\user.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1>Doctor List</h1>\r\n    <el-table :data=\"doctors\" border stripe>\r\n      <el-table-column prop=\"userId\" label=\"用户ID\"></el-table-column>\r\n      <el-table-column prop=\"username\" label=\"用户名\"></el-table-column>\r\n      <el-table-column prop=\"picture\" label=\"头像\"></el-table-column>\r\n      <el-table-column prop=\"telephone\" label=\"联系方式\"></el-table-column>\r\n      <el-table-column prop=\"gender\" label=\"性别\"></el-table-column>\r\n      <el-table-column prop=\"age\" label=\"年龄\"></el-table-column>\r\n      <el-table-column prop=\"status\" label=\"当前状态\"></el-table-column>\r\n      <el-table-column  label=\"操作\" width=\"120\">\r\n        <template #default>\r\n          <el-button link type=\"primary\" size=\"small\" @click=\"handleClick\">\r\n            查看详情\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      doctors: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchDoctors()\r\n  },\r\n  methods: {\r\n    async fetchDoctors() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8081/user/all')\r\n        this.doctors = response.data.data\r\n      } catch (error) {\r\n        console.error('Error fetching doctors:', error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  margin: 20px auto;\r\n  max-width: 800px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}