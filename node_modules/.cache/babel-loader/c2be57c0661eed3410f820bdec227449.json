{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      userList: [],\n      currentUserId: null,\n      currentUsername: '',\n      currentChat: [],\n      newMessage: ''\n    };\n  },\n\n  mounted() {\n    this.fetchUserList();\n  },\n\n  methods: {\n    fetchUserList() {\n      axios.get(`http://localhost:8081/chat/doctorChatList?doctorId=13`).then(response => {\n        this.userList = response.data;\n      }).catch(error => {\n        console.error('Error fetching user list:', error);\n      });\n    },\n\n    handleUserSelect(userId) {\n      this.currentUserId = userId;\n      this.fetchChatContent(userId);\n    },\n\n    fetchChatContent(userId) {\n      axios.get(`http://localhost:8081/chat/all?doctorId=13&userId=${userId}`).then(response => {\n        this.currentUsername = response.data.username;\n        this.currentChat = response.data.messages;\n      }).catch(error => {\n        console.error('Error fetching chat content:', error);\n      });\n    },\n\n    sendMessage() {\n      if (this.newMessage.trim() !== '') {\n        // 发送消息逻辑\n        this.newMessage = '';\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA6BA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,cAAQ,EAAE,EADL;AAELC,mBAAa,EAAE,IAFV;AAGLC,qBAAe,EAAE,EAHZ;AAILC,iBAAW,EAAE,EAJR;AAKLC,gBAAU,EAAE;AALP,KAAP;AAOD,GATY;;AAUbC,SAAO,GAAG;AACR,SAAKC,aAAL;AACD,GAZY;;AAabC,SAAO,EAAE;AACPD,iBAAa,GAAG;AACdR,WAAK,CAACU,GAAN,CAAW,uDAAX,EACGC,IADH,CACQC,QAAO,IAAK;AAChB,aAAKV,QAAL,GAAgBU,QAAQ,CAACX,IAAzB;AACD,OAHH,EAIGY,KAJH,CAISC,KAAI,IAAK;AACdC,eAAO,CAACD,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;AACD,OANH;AAOD,KATM;;AAUPE,oBAAgB,CAACC,MAAD,EAAS;AACvB,WAAKd,aAAL,GAAqBc,MAArB;AACA,WAAKC,gBAAL,CAAsBD,MAAtB;AACD,KAbM;;AAcPC,oBAAgB,CAACD,MAAD,EAAS;AACvBjB,WAAK,CAACU,GAAN,CAAW,qDAAoDO,MAAO,EAAtE,EACGN,IADH,CACQC,QAAO,IAAK;AAChB,aAAKR,eAAL,GAAuBQ,QAAQ,CAACX,IAAT,CAAckB,QAArC;AACA,aAAKd,WAAL,GAAmBO,QAAQ,CAACX,IAAT,CAAcmB,QAAjC;AACD,OAJH,EAKGP,KALH,CAKSC,KAAI,IAAK;AACdC,eAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACD,OAPH;AAQD,KAvBM;;AAwBPO,eAAW,GAAG;AACZ,UAAI,KAAKf,UAAL,CAAgBgB,IAAhB,OAA2B,EAA/B,EAAmC;AACjC;AACA,aAAKhB,UAAL,GAAkB,EAAlB;AACF;AACF;;AA7BO;AAbI,CAAf","names":["axios","data","userList","currentUserId","currentUsername","currentChat","newMessage","mounted","fetchUserList","methods","get","then","response","catch","error","console","handleUserSelect","userId","fetchChatContent","username","messages","sendMessage","trim"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\Doctor\\messageList.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-container\">\r\n    <div class=\"user-list\">\r\n      <el-card class=\"user-card\">\r\n        <div slot=\"header\" class=\"user-header\">用户列表</div>\r\n        <el-scrollbar wrap-class=\"user-scrollbar\">\r\n          <el-menu class=\"user-menu\" :default-active=\"currentUserId\" @select=\"handleUserSelect\" mode=\"vertical\">\r\n            <el-menu-item v-for=\"user in userList\" :key=\"user.userId\" :index=\"user.userId\">{{ user.username }}</el-menu-item>\r\n          </el-menu>\r\n        </el-scrollbar>\r\n      </el-card>\r\n    </div>\r\n    <div class=\"chat-content\">\r\n      <el-card class=\"chat-card\">\r\n        <div slot=\"header\" class=\"chat-header\">{{ currentUsername }}</div>\r\n        <el-scrollbar wrap-class=\"chat-scrollbar\">\r\n          <div class=\"chat-messages\">\r\n            <div v-for=\"message in currentChat\" :key=\"message.id\" class=\"chat-message\" :class=\"{ 'sent-message': message.sender !== 'me' }\">\r\n              {{ message.content }}\r\n            </div>\r\n          </div>\r\n        </el-scrollbar>\r\n        <el-input class=\"chat-input\" v-model=\"newMessage\" @keyup.enter=\"sendMessage\" placeholder=\"请输入消息\" clearable></el-input>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userList: [],\r\n      currentUserId: null,\r\n      currentUsername: '',\r\n      currentChat: [],\r\n      newMessage: ''\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchUserList();\r\n  },\r\n  methods: {\r\n    fetchUserList() {\r\n      axios.get(`http://localhost:8081/chat/doctorChatList?doctorId=13`)\r\n        .then(response => {\r\n          this.userList = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching user list:', error);\r\n        });\r\n    },\r\n    handleUserSelect(userId) {\r\n      this.currentUserId = userId;\r\n      this.fetchChatContent(userId);\r\n    },\r\n    fetchChatContent(userId) {\r\n      axios.get(`http://localhost:8081/chat/all?doctorId=13&userId=${userId}`)\r\n        .then(response => {\r\n          this.currentUsername = response.data.username;\r\n          this.currentChat = response.data.messages;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching chat content:', error);\r\n        });\r\n    },\r\n    sendMessage() {\r\n      if (this.newMessage.trim() !== '') {\r\n        // 发送消息逻辑\r\n        this.newMessage = '';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chat-container {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\n.user-list {\r\n  width: 250px;\r\n  flex-shrink: 0;\r\n  overflow: hidden;\r\n}\r\n\r\n.user-card {\r\n  height: 100%;\r\n}\r\n\r\n.user-header {\r\n  padding: 10px;\r\n}\r\n\r\n.user-scrollbar {\r\n  height: calc(100% - 40px);\r\n}\r\n\r\n.user-menu {\r\n  height: 100%;\r\n}\r\n\r\n.chat-content {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chat-card {\r\n  height: 100%;\r\n}\r\n\r\n.chat-header {\r\n  padding: 10px;\r\n}\r\n\r\n.chat-scrollbar {\r\n  height: calc(100% - 40px);\r\n}\r\n\r\n.chat-messages {\r\n  padding: 10px;\r\n}\r\n\r\n.chat-message {\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.sent-message {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.chat-input {\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}