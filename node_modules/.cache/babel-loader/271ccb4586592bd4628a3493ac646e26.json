{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"添加\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.add(_ctx.props))\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  }), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tbData.children, shuju => {\n    return _openBlock(), _createBlock(_component_el_table, {\n      key: shuju\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"departmentId\",\n        label: \"科室ID\",\n        width: \"150\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(shuju.departmentId), 1\n        /* TEXT */\n        )]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1024\n      /* DYNAMIC_SLOTS */\n      ), _createVNode(_component_el_table_column, {\n        prop: \"departmentName\",\n        label: \"科室\",\n        width: \"150\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(shuju.departmentName), 1\n        /* TEXT */\n        )]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1024\n      /* DYNAMIC_SLOTS */\n      )]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1024\n    /* DYNAMIC_SLOTS */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;iDACgD;;;;;;;;;6DAA9CA,aAA4DC,oBAA5D,EAA4D;AAAjDC,QAAI,EAAC,SAA4C;AAAjCC,WAAK,sCAAEC,aAAIC,UAAJ,CAAF;AAA4B,GAA5D;sBAA8C,MAAE;;;;GAAhD,sBACAC,oBAKWC,SALX,EAKW,IALX,EAKWC,YAJOC,aAAOC,QAId,EAJFC,KAAwB,IAAnB;yBADdC,aAKWC,mBALX,EAKW;AAJyBC,SAAG,EAAEH;AAI9B,KALX,EAC8C;wBAE5C,MAAuG,CAAvGX,aAAuGe,0BAAvG,EAAuG;AAAtFC,YAAI,EAAC,cAAiF;AAAlEC,aAAK,EAAC,MAA4D;AAArDC,aAAK,EAAC;AAA+C,OAAvG;0BAA+D,MAAsB,mCAApBP,KAAK,CAACQ,eAAY;AAAA;SAAE;;;;OAArF;;AAAA,OAAuG,EACvGnB,aAAyGe,0BAAzG,EAAyG;AAAxFC,YAAI,EAAC,gBAAmF;AAAlEC,aAAK,EAAC,IAA4D;AAAvDC,aAAK,EAAC;AAAiD,OAAzG;0BAA+D,MAAwB,mCAAtBP,KAAK,CAACS,iBAAc;AAAA;SAAE;;;;OAAvF;;AAAA,OADuG,EAF3D;;;;AAAA,KAD9C;;AAAA;GAKW,CALX;;AAAA","names":["_createVNode","_component_el_button","type","onClick","$options","_ctx","_createElementBlock","_Fragment","_renderList","$data","children","shuju","_createBlock","_component_el_table","key","_component_el_table_column","prop","label","width","departmentId","departmentName"],"sourceRoot":"","sources":["D:\\小学期vscode\\demo01\\src\\views\\Department\\demo02.vue"],"sourcesContent":["<template>\r\n  <el-button type=\"primary\" @click=\"add(props)\">添加</el-button>\r\n  <el-table\r\n    v-for=\"shuju in tbData.children\" :key=\"shuju\"\r\n  >\r\n    <el-table-column prop=\"departmentId\" label=\"科室ID\" width=\"150\" >{{shuju.departmentId}}</el-table-column>\r\n    <el-table-column prop=\"departmentName\" label=\"科室\" width=\"150\" >{{shuju.departmentName}}</el-table-column>\r\n  </el-table>\r\n</template>\r\n<script>\r\nimport { get } from '@/utils/request'\r\nimport { ElMessage } from 'element-plus'\r\nexport default {\r\n  data() {\r\n    return {\r\n      currentPage: 1, //默认页码为1\r\n      pagesize: 10, //默认一页显示10条\r\n      dialogVisible: false,\r\n      dialogVisible1: false,\r\n      info: {}, //修改数据\r\n      info1: {}, //新增数据\r\n      tbData: []\r\n    }\r\n  },\r\n  //初始化工作\r\n  mounted() {\r\n    get('/getAllDepartments').then((res) => {\r\n      console.log(res)\r\n      this.tbData = res.data\r\n    })\r\n  },\r\n  methods: {\r\n\r\n    del(data) {\r\n      console.log(data.row.departmentId)\r\n      get('/deleteDepartment', { departmentId: data.row.departmentId }).then(\r\n        (res) => {\r\n          ElMessage({\r\n            message: '删除成功！',\r\n            type: 'success'\r\n          })\r\n        }\r\n      )\r\n      window.location.reload() //刷新\r\n    },\r\n    edit() {\r\n      this.dialogVisible = !this.dialogVisible //马上消失\r\n      //作用是调整下createTime的格式\r\n      var dt = new Date(this.info.createTime)\r\n      let year = dt.getFullYear()\r\n      let month = dt.getMonth() + 1\r\n      let date = dt.getDate()\r\n      this.info.createTime = year + '/' + month + '/' + date\r\n      get('/updateDepartment', this.info).then((res) => {\r\n        ElMessage({\r\n          message: '修改成功！',\r\n          type: 'success'\r\n        })\r\n        window.location.reload()\r\n      })\r\n    },\r\n    add() {\r\n      this.dialogVisible1 = !this.dialogVisible1\r\n    },\r\n    insert() {\r\n      this.dialogVisible1 = !this.dialogVisible1\r\n      get('/addDepartment', this.info1).then((res) => {\r\n        console.log(res)\r\n        if (res.data == 1) {\r\n          ElMessage({\r\n            message: '添加成功',\r\n            type: 'success'\r\n          })\r\n          // 刷新\r\n          window.location.reload()\r\n        } else {\r\n          ElMessage({\r\n            message: '添加失败',\r\n            type: 'danger'\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}