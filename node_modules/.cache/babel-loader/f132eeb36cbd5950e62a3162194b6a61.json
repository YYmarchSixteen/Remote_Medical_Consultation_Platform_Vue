{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"医生评价\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"comment-list\"\n};\nconst _hoisted_3 = {\n  class: \"comment-content\"\n};\nconst _hoisted_4 = {\n  class: \"comment-details\"\n};\nconst _hoisted_5 = {\n  class: \"comment-author\"\n};\nconst _hoisted_6 = {\n  class: \"comment-time\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: comment.id,\n      class: \"comment-item\"\n    }, [_createElementVNode(\"div\", _hoisted_3, _toDisplayString(comment.content), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString(comment.userId), 1\n    /* TEXT */\n    ), _createElementVNode(\"span\", _hoisted_6, _toDisplayString($options.formatDate(comment.commentTime)), 1\n    /* TEXT */\n    )])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,EAAQ;AAAA;AAAR;;;AACIC,OAAK,EAAC;;;AAEDA,OAAK,EAAC;;;AACNA,OAAK,EAAC;;;AACHA,OAAK,EAAC;;;AACNA,OAAK,EAAC;;;uBAPpBC,oBAWM,KAXN,EAWM,IAXN,EAWM,CAVJC,UAUI,EATJH,oBAQK,IARL,cAQK,oBAPHE,oBAMKE,SANL,EAMK,IANL,EAMKC,YANiBC,cAMjB,EANMC,OAAmB,IAAZ;yBAAlBL,oBAMK,IANL,EAMK;AAN4BM,SAAG,EAAED,OAAO,CAACE,EAMzC;AAN6CR,WAAK,EAAC;AAMnD,KANL,GACED,oBAAwD,KAAxD,cAAwDU,iBAAxBH,OAAO,CAACI,OAAgB,CAAxD,EAA+C;AAAA;AAA/C,OACAX,oBAGM,KAHN,cAGM,CAFJA,oBAAwD,MAAxD,cAAwDU,iBAAxBH,OAAO,CAACK,MAAgB,CAAxD,EAA8C;AAAA;AAA9C,KAEI,EADJZ,oBAAuE,MAAvE,cAAuEU,iBAAzCG,oBAAWN,OAAO,CAACO,WAAnB,CAAyC,CAAvE,EAA4D;AAAA;AAA5D,KACI,CAHN,EAFF;GAMK,CANL;;AAAA,GAOG,EARL,CASI,CAXN","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","comment","key","id","_toDisplayString","content","userId","$options","commentTime"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\Doctor\\comment.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>医生评价</h1>\r\n    <ul class=\"comment-list\">\r\n      <li v-for=\"comment in comments\" :key=\"comment.id\" class=\"comment-item\">\r\n        <div class=\"comment-content\">{{ comment.content }}</div>\r\n        <div class=\"comment-details\">\r\n          <span class=\"comment-author\">{{ comment.userId }}</span>\r\n          <span class=\"comment-time\">{{ formatDate(comment.commentTime) }}</span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      comments: []\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchComments()\r\n  },\r\n  methods: {\r\n    fetchComments() {\r\n      // 使用fetch API从你的后端服务获取数据\r\n      fetch('http://localhost:8081/comment/findByDoctor?doctorId=1')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          // 将获取到的数据赋值给comments数组\r\n          this.comments = data.data\r\n        })\r\n        .catch(error => {\r\n          console.error('获取数据时出错:', error)\r\n        })\r\n    },\r\n    formatDate(commentTime) {\r\n      const date = new Date(commentTime);\r\n      return date.toLocaleString();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.comment-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.comment-item {\r\n  margin-bottom: 20px;\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n}\r\n\r\n.comment-details {\r\n  margin-top: 5px;\r\n  font-size: 0.9em;\r\n  color: #888;\r\n}\r\n\r\n.comment-author {\r\n  margin-right: 10px;\r\n}\r\n\r\n.comment-time {\r\n  font-style: italic;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}