{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, normalizeClass as _normalizeClass, withKeys as _withKeys, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7104f506\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"header\"\n};\nconst _hoisted_2 = {\n  class: \"body\"\n};\nconst _hoisted_3 = {\n  class: \"chat-container\"\n};\nconst _hoisted_4 = {\n  class: \"user-list\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" 主页 \");\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\" 个人中心 \");\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"header\",\n  class: \"user-header\"\n}, \"用户列表\", -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = {\n  class: \"chat-content\"\n};\nconst _hoisted_9 = {\n  id: \"header\",\n  class: \"chat-header\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_12 = {\n  class: \"action-buttons\"\n};\n\nconst _hoisted_13 = /*#__PURE__*/_createTextVNode(\"开始摄像头\");\n\nconst _hoisted_14 = {\n  class: \"chat-messages\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"user-message\"\n};\n\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_17 = {\n  key: 1,\n  class: \"doctor-message\"\n};\n\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_menu_item = _resolveComponent(\"el-menu-item\");\n\n  const _component_el_menu = _resolveComponent(\"el-menu\");\n\n  const _component_el_scrollbar = _resolveComponent(\"el-scrollbar\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_Header)]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 用户列表 \"), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_card, {\n    class: \"user-card\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      link: \"\",\n      type: \"primary\",\n      size: \"small\",\n      onClick: _ctx.toPatient\n    }, {\n      default: _withCtx(() => [_hoisted_5]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"onClick\"]), _createVNode(_component_el_button, {\n      link: \"\",\n      type: \"primary\",\n      size: \"small\",\n      onClick: _ctx.toPersonal\n    }, {\n      default: _withCtx(() => [_hoisted_6]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"onClick\"]), _hoisted_7, _createVNode(_component_el_scrollbar, {\n      \"wrap-class\": \"user-scrollbar\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_menu, {\n        class: \"user-menu\",\n        \"default-active\": $data.currentUserId,\n        mode: \"vertical\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.doctorList, user => {\n          return _openBlock(), _createBlock(_component_el_menu_item, {\n            key: user.userId,\n            index: user.userId,\n            onClick: $event => $options.handleUserSelect(user.username)\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(user.username), 1\n            /* TEXT */\n            )]),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1032\n          /* PROPS, DYNAMIC_SLOTS */\n          , [\"index\", \"onClick\"]);\n        }), 128\n        /* KEYED_FRAGMENT */\n        ))]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"default-active\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  })]), _createCommentVNode(\" 聊天内容 \"), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_el_card, {\n    class: \"chat-card\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 聊天头部 \"), _createElementVNode(\"div\", _hoisted_9, [_createTextVNode(_toDisplayString($data.currentUsername), 1\n    /* TEXT */\n    ), _hoisted_10, _hoisted_11, _createCommentVNode(\" 写病历和开处方按钮 \"), _createElementVNode(\"div\", _hoisted_12, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.openCameraDialog\n    }, {\n      default: _withCtx(() => [_hoisted_13]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"onClick\"])])]), _createVNode(_component_el_scrollbar, {\n      \"wrap-class\": \"chat-scrollbar\",\n      style: {\n        \"height\": \"80vh\"\n      }\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.currentChat, message => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: message.id,\n          class: _normalizeClass([\"chat-message\", {\n            'sent-message': message.sender !== 'user',\n            'received-message': message.sender === 'user'\n          }])\n        }, [message.sender === 'user' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createTextVNode(_toDisplayString(message.message), 1\n        /* TEXT */\n        ), _hoisted_16, _createTextVNode(_toDisplayString(message.formattedTime), 1\n        /* TEXT */\n        )])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createTextVNode(_toDisplayString(message.message), 1\n        /* TEXT */\n        ), _hoisted_18, _createTextVNode(_toDisplayString(message.formattedTime), 1\n        /* TEXT */\n        )]))], 2\n        /* CLASS */\n        );\n      }), 128\n      /* KEYED_FRAGMENT */\n      ))])]),\n      _: 1\n      /* STABLE */\n\n    }), _createCommentVNode(\" 输入框 \"), _createVNode(_component_el_input, {\n      class: \"chat-input\",\n      modelValue: $data.newMessage,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newMessage = $event),\n      onKeyup: _withKeys($options.sendMessage, [\"enter\"]),\n      placeholder: \"请输入消息\",\n      clearable: \"\"\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\", \"onKeyup\"])]),\n    _: 1\n    /* STABLE */\n\n  })])])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","id","_createVNode","_component_Header","_createCommentVNode","_component_el_card","_component_el_button","link","type","size","onClick","_ctx","_hoisted_7","_component_el_scrollbar","_component_el_menu","$data","mode","_createElementBlock","_Fragment","_renderList","user","_createBlock","_component_el_menu_item","key","userId","index","$options","username","_hoisted_10","_hoisted_11","style","message","sender","_hoisted_16","formattedTime","_hoisted_18","_component_el_input","$event","onKeyup","placeholder","clearable"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\User\\message.vue"],"sourcesContent":["<template>\r\n  <div class=\"header\">\r\n    <Header></Header>\r\n  </div>\r\n  <div class=\"body\">\r\n    <div class=\"chat-container\">\r\n      <!-- 用户列表 -->\r\n      <div class=\"user-list\">\r\n        <el-card class=\"user-card\">\r\n          <el-button link type=\"primary\" size=\"small\" @click=\"toPatient\">\r\n            主页\r\n          </el-button>\r\n          <el-button link type=\"primary\" size=\"small\" @click=\"toPersonal\">\r\n            个人中心\r\n          </el-button>\r\n          <div id=\"header\" class=\"user-header\">用户列表</div>\r\n          <el-scrollbar wrap-class=\"user-scrollbar\">\r\n            <el-menu class=\"user-menu\" :default-active=\"currentUserId\" mode=\"vertical\">\r\n              <el-menu-item v-for=\"user in doctorList\" :key=\"user.userId\" :index=\"user.userId\"\r\n                            @click=\"handleUserSelect(user.username)\">\r\n                {{ user.username }}\r\n              </el-menu-item>\r\n            </el-menu>\r\n          </el-scrollbar>\r\n        </el-card>\r\n      </div>\r\n      <!-- 聊天内容 -->\r\n      <div class=\"chat-content\">\r\n        <el-card class=\"chat-card\">\r\n          <!-- 聊天头部 -->\r\n          <div id=\"header\" class=\"chat-header\">{{ currentUsername }}<br><br>\r\n            <!-- 写病历和开处方按钮 -->\r\n            <div class=\"action-buttons\">\r\n              <el-button type=\"primary\" @click=\"openCameraDialog\">开始摄像头</el-button>\r\n            </div>\r\n          </div>\r\n          <el-scrollbar wrap-class=\"chat-scrollbar\" style=\"height: 80vh\">\r\n            <div class=\"chat-messages\">\r\n              <div v-for=\"message in currentChat\" :key=\"message.id\" class=\"chat-message\"\r\n                   :class=\"{ 'sent-message': message.sender !== 'user', 'received-message': message.sender === 'user' }\">\r\n                <div v-if=\"message.sender === 'user'\" class=\"user-message\">\r\n                  {{ message.message }}<br>{{ message.formattedTime }}\r\n                </div>\r\n                <div v-else class=\"doctor-message\">\r\n                  {{ message.message }}<br>{{ message.formattedTime }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </el-scrollbar>\r\n          <!-- 输入框 -->\r\n          <el-input class=\"chat-input\" v-model=\"newMessage\" @keyup.enter=\"sendMessage\" placeholder=\"请输入消息\"\r\n                    clearable></el-input>\r\n        </el-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport Header from '../userLayout/Header/header.vue'\r\n\r\nexport default {\r\n  components: {\r\n    Header\r\n  },\r\n  data() {\r\n    return {\r\n      doctorList: [],\r\n      currentUserId: null,\r\n      currentUsername: '',\r\n      currentChat: [],\r\n      newMessage: '',\r\n      cameraDialogVisible: false\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchDoctorList()\r\n  },\r\n  methods: {\r\n    fetchDoctorList() {\r\n      axios.get(`http://localhost:8081/chat/userChatList?doctorId=4`)\r\n        .then(response => {\r\n          this.doctorList = response.data.data\r\n          if (this.doctorList.length > 0) {\r\n            this.currentUsername = this.doctorList[0].username\r\n            this.currentUserId = this.doctorList[0].userId\r\n            this.fetchChatContent(this.currentUserId)\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching user list:', error)\r\n        })\r\n    },\r\n    fetchChatContent(userId) {\r\n      axios.get(`http://localhost:8081/chat/all?doctorId=13&userId=${userId}`)\r\n        .then(response => {\r\n          this.currentChat = response.data.data.map(message => {\r\n            const formattedTime = new Date(message.sendTime).toLocaleString()\r\n            return { ...message, formattedTime }\r\n          })\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching chat content:', error)\r\n        })\r\n    },\r\n    handleUserSelect(username) {\r\n      this.currentUsername = username\r\n      const selectedUser = this.doctorList.find(user => user.username === username)\r\n      if (selectedUser) {\r\n        this.currentUserId = selectedUser.userId\r\n        this.fetchChatContent(this.currentUserId)\r\n      }\r\n    },\r\n    redirectToMedicalRecord() {\r\n      this.$router.push('/doctor/emr')\r\n    },\r\n    redirectToPrescription() {\r\n      this.$router.push('/doctor/prescription')\r\n    },\r\n    sendMessage() {\r\n      if (this.newMessage.trim() !== '') {\r\n        const message = {\r\n          id: this.currentChat.length + 1,\r\n          message: this.newMessage.trim(),\r\n          sender: 'doctor', // 将消息标记为医生的发言\r\n          formattedTime: new Date().toLocaleString()\r\n        }\r\n        this.currentChat.push(message)\r\n        this.newMessage = ''\r\n      }\r\n    },\r\n    async openCameraDialog() {\r\n      this.$router.push('/doctor/userTest')\r\n    },\r\n\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.body {\r\n  margin-top: 100px;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}