{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      selectedDate: '',\n      reservations: [],\n      doctorId: '',\n      tableData: [],\n      buttonClicked: false,\n      // Flag to track whether any button is clicked\n      pickerOptions: {\n        disabledDate: this.disabledDate.bind(this)\n      }\n    };\n  },\n\n  mounted() {\n    this.generateTableData();\n    this.doctorId = this.$route.params.doctorId;\n  },\n\n  methods: {\n    reserve(row) {\n      this.buttonClicked = true; // Set flag to true when any button is clicked\n\n      const params = new URLSearchParams();\n      params.append('userId', 1);\n      params.append('doctorId', this.doctorId);\n      params.append('reserveTime', this.selectedDate);\n      params.append('sequence', row.index);\n      axios.post('http://localhost:8081/reserve/addReserve', params).then(() => {\n        row.column2 = '已预约';\n        row.reserved = true; // Marking the row as reserved\n\n        this.buttonClicked = false; // Reset the flag when reservation is made\n      }).catch(error => {\n        console.error('Error reserving:', error);\n        this.buttonClicked = false; // Reset the flag if reservation fails\n      });\n    },\n\n    generateTableData() {\n      const startTime = new Date('2024-04-07T08:00:00');\n\n      for (let i = 0; i < 15; i++) {\n        const time = new Date(startTime.getTime() + i * 15 * 60000);\n        this.tableData.push({\n          index: i + 1,\n          // Adding unique index\n          time: time.toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          }),\n          column2: '无预约',\n          column3: '',\n          reserved: false // Adding reserved property\n\n        });\n      }\n    },\n\n    handleDateChange() {\n      this.selectedDate = this.selectedDate ? this.formatDate(this.selectedDate) : '';\n      console.log('Selected date:', this.selectedDate);\n    },\n\n    formatDate(date) {\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    },\n\n    disabledDate(time) {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      time.setHours(0, 0, 0, 0);\n      return time < today;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqBA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,kBAAY,EAAE,EADT;AAELC,kBAAY,EAAE,EAFT;AAGLC,cAAQ,EAAE,EAHL;AAILC,eAAS,EAAE,EAJN;AAKLC,mBAAa,EAAE,KALV;AAKiB;AACtBC,mBAAa,EAAE;AACbC,oBAAY,EAAE,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB;AADD;AANV,KAAP;AAUD,GAZY;;AAabC,SAAO,GAAG;AACR,SAAKC,iBAAL;AACA,SAAKP,QAAL,GAAgB,KAAKQ,MAAL,CAAYC,MAAZ,CAAmBT,QAAnC;AACD,GAhBY;;AAiBbU,SAAO,EAAE;AACPC,WAAO,CAACC,GAAD,EAAM;AACX,WAAKV,aAAL,GAAqB,IAArB,CADW,CACgB;;AAC3B,YAAMO,MAAK,GAAI,IAAII,eAAJ,EAAf;AACAJ,YAAM,CAACK,MAAP,CAAc,QAAd,EAAwB,CAAxB;AACAL,YAAM,CAACK,MAAP,CAAc,UAAd,EAA0B,KAAKd,QAA/B;AACAS,YAAM,CAACK,MAAP,CAAc,aAAd,EAA6B,KAAKhB,YAAlC;AACAW,YAAM,CAACK,MAAP,CAAc,UAAd,EAA0BF,GAAG,CAACG,KAA9B;AACAnB,WAAK,CAACoB,IAAN,CAAW,0CAAX,EAAuDP,MAAvD,EACGQ,IADH,CACQ,MAAM;AACVL,WAAG,CAACM,OAAJ,GAAc,KAAd;AACAN,WAAG,CAACO,QAAJ,GAAe,IAAf,CAFU,CAEU;;AACpB,aAAKjB,aAAL,GAAqB,KAArB,CAHU,CAGkB;AAC7B,OALH,EAMGkB,KANH,CAMSC,KAAI,IAAK;AACdC,eAAO,CAACD,KAAR,CAAc,kBAAd,EAAkCA,KAAlC;AACA,aAAKnB,aAAL,GAAqB,KAArB,CAFc,CAEc;AAC7B,OATH;AAUD,KAlBM;;AAmBPK,qBAAiB,GAAG;AAClB,YAAMgB,SAAQ,GAAI,IAAIC,IAAJ,CAAS,qBAAT,CAAlB;;AACA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,cAAMC,IAAG,GAAI,IAAIF,IAAJ,CAASD,SAAS,CAACI,OAAV,KAAsBF,IAAI,EAAJ,GAAS,KAAxC,CAAb;AACA,aAAKxB,SAAL,CAAe2B,IAAf,CAAoB;AAClBb,eAAK,EAAEU,IAAI,CADO;AACJ;AACdC,cAAI,EAAEA,IAAI,CAACG,kBAAL,CAAwB,EAAxB,EAA4B;AAAEC,gBAAI,EAAE,SAAR;AAAmBC,kBAAM,EAAE;AAA3B,WAA5B,CAFY;AAGlBb,iBAAO,EAAE,KAHS;AAIlBc,iBAAO,EAAE,EAJS;AAKlBb,kBAAQ,EAAE,KALQ,CAKF;;AALE,SAApB;AAOF;AACD,KA/BM;;AAgCPc,oBAAgB,GAAG;AACjB,WAAKnC,YAAL,GAAoB,KAAKA,YAAL,GAAoB,KAAKoC,UAAL,CAAgB,KAAKpC,YAArB,CAApB,GAAyD,EAA7E;AACAwB,aAAO,CAACa,GAAR,CAAY,gBAAZ,EAA8B,KAAKrC,YAAnC;AACD,KAnCM;;AAoCPoC,cAAU,CAACE,IAAD,EAAO;AACf,YAAMC,IAAG,GAAID,IAAI,CAACE,WAAL,EAAb;AACA,YAAMC,KAAI,GAAIC,MAAM,CAACJ,IAAI,CAACK,QAAL,KAAkB,CAAnB,CAAN,CAA4BC,QAA5B,CAAqC,CAArC,EAAwC,GAAxC,CAAd;AACA,YAAMC,GAAE,GAAIH,MAAM,CAACJ,IAAI,CAACQ,OAAL,EAAD,CAAN,CAAuBF,QAAvB,CAAgC,CAAhC,EAAmC,GAAnC,CAAZ;AACA,aAAQ,GAAEL,IAAK,IAAGE,KAAM,IAAGI,GAAI,EAA/B;AACD,KAzCM;;AA0CPvC,gBAAY,CAACsB,IAAD,EAAO;AACjB,YAAMmB,KAAI,GAAI,IAAIrB,IAAJ,EAAd;AACAqB,WAAK,CAACC,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACApB,UAAI,CAACoB,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,aAAOpB,IAAG,GAAImB,KAAd;AACF;;AA/CO;AAjBI,CAAf","names":["axios","data","selectedDate","reservations","doctorId","tableData","buttonClicked","pickerOptions","disabledDate","bind","mounted","generateTableData","$route","params","methods","reserve","row","URLSearchParams","append","index","post","then","column2","reserved","catch","error","console","startTime","Date","i","time","getTime","push","toLocaleTimeString","hour","minute","column3","handleDateChange","formatDate","log","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","today","setHours"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\User\\reserve.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <el-date-picker v-model=\"selectedDate\" type=\"date\" placeholder=\"选择日期\" :picker-options=\"pickerOptions\" @change=\"handleDateChange\">\r\n    </el-date-picker>\r\n\r\n    <el-table :data=\"tableData\" border style=\"width: 450px\">\r\n      <el-table-column prop=\"time\" label=\"时间\" width=\"150\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"column2\" label=\"预约状态\" width=\"150\">\r\n      </el-table-column>\r\n      <el-table-column prop=\"column3\" label=\"操作\" width=\"150\">\r\n        <template v-slot=\"scope\">\r\n          <el-button type=\"primary\" :disabled=\"buttonClicked || scope.row.reserved\" @click=\"reserve(scope.row)\">预约</el-button>\r\n          <span v-if=\"scope.row.reserved\">已预约</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedDate: '',\r\n      reservations: [],\r\n      doctorId: '',\r\n      tableData: [],\r\n      buttonClicked: false, // Flag to track whether any button is clicked\r\n      pickerOptions: {\r\n        disabledDate: this.disabledDate.bind(this)\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.generateTableData()\r\n    this.doctorId = this.$route.params.doctorId\r\n  },\r\n  methods: {\r\n    reserve(row) {\r\n      this.buttonClicked = true; // Set flag to true when any button is clicked\r\n      const params = new URLSearchParams()\r\n      params.append('userId', 1)\r\n      params.append('doctorId', this.doctorId)\r\n      params.append('reserveTime', this.selectedDate)\r\n      params.append('sequence', row.index)\r\n      axios.post('http://localhost:8081/reserve/addReserve', params)\r\n        .then(() => {\r\n          row.column2 = '已预约'\r\n          row.reserved = true // Marking the row as reserved\r\n          this.buttonClicked = false; // Reset the flag when reservation is made\r\n        })\r\n        .catch(error => {\r\n          console.error('Error reserving:', error)\r\n          this.buttonClicked = false; // Reset the flag if reservation fails\r\n        })\r\n    },\r\n    generateTableData() {\r\n      const startTime = new Date('2024-04-07T08:00:00')\r\n      for (let i = 0; i < 15; i++) {\r\n        const time = new Date(startTime.getTime() + i * 15 * 60000)\r\n        this.tableData.push({\r\n          index: i + 1, // Adding unique index\r\n          time: time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n          column2: '无预约',\r\n          column3: '',\r\n          reserved: false // Adding reserved property\r\n        })\r\n      }\r\n    },\r\n    handleDateChange() {\r\n      this.selectedDate = this.selectedDate ? this.formatDate(this.selectedDate) : ''\r\n      console.log('Selected date:', this.selectedDate)\r\n    },\r\n    formatDate(date) {\r\n      const year = date.getFullYear()\r\n      const month = String(date.getMonth() + 1).padStart(2, '0')\r\n      const day = String(date.getDate()).padStart(2, '0')\r\n      return `${year}-${month}-${day}`\r\n    },\r\n    disabledDate(time) {\r\n      const today = new Date()\r\n      today.setHours(0, 0, 0, 0)\r\n      time.setHours(0, 0, 0, 0)\r\n      return time < today\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  margin: 20px auto;\r\n  max-width: 800px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}