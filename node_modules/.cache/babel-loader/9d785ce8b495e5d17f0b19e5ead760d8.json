{"ast":null,"code":"import { get } from \"@/utils/request\";\nexport default {\n  data() {\n    return {\n      list: []\n    };\n  },\n\n  mounted() {\n    this.getOrderDetail();\n  },\n\n  methods: {\n    getOrderDetail() {\n      get(\"http://localhost:8080/allOrderDetail\").then(res => {\n        this.list = res.data.data;\n      });\n    },\n\n    formatOrderId(row, index) {\n      if (index === 0 || row.orderId !== this.list[index - 1].orderId) {\n        // 如果是第一行或者和上一行的 orderId 不同，就返回当前 orderId 的值\n        return row.orderId;\n      } // 否则返回空字符串，使单元格合并\n\n\n      return \"\";\n    },\n\n    setCellClassName(row, rowIndex) {\n      if (rowIndex === 0 || row.orderId !== this.list[rowIndex - 1].orderId) {\n        // 如果是第一行或者和上一行的 orderId 不同，就添加一个新的 CSS 类名\n        return \"merge-cell\";\n      } // 否则返回空字符串\n\n\n      return \"\";\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkBA,SAASA,GAAT,QAAoB,iBAApB;AAEA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,UAAI,EAAE;AADD,KAAP;AAGD,GALY;;AAMbC,SAAO,GAAG;AACR,SAAKC,cAAL;AACD,GARY;;AASbC,SAAO,EAAE;AACPD,kBAAc,GAAG;AACfJ,SAAG,CAAC,sCAAD,CAAH,CAA4CM,IAA5C,CAAkDC,GAAD,IAAS;AACxD,aAAKL,IAAL,GAAYK,GAAG,CAACN,IAAJ,CAASA,IAArB;AACD,OAFD;AAGD,KALM;;AAMPO,iBAAa,CAACC,GAAD,EAAMC,KAAN,EAAa;AACxB,UAAIA,KAAI,KAAM,CAAV,IAAeD,GAAG,CAACE,OAAJ,KAAgB,KAAKT,IAAL,CAAUQ,KAAI,GAAI,CAAlB,EAAqBC,OAAxD,EAAiE;AAC/D;AACA,eAAOF,GAAG,CAACE,OAAX;AACF,OAJwB,CAKxB;;;AACA,aAAO,EAAP;AACD,KAbM;;AAcPC,oBAAgB,CAACH,GAAD,EAAMI,QAAN,EAAgB;AAC9B,UACEA,QAAO,KAAM,CAAb,IACAJ,GAAG,CAACE,OAAJ,KAAgB,KAAKT,IAAL,CAAUW,QAAO,GAAI,CAArB,EAAwBF,OAF1C,EAGE;AACA;AACA,eAAO,YAAP;AACF,OAP8B,CAQ9B;;;AACA,aAAO,EAAP;AACD;;AAxBM;AATI,CAAf","names":["get","data","list","mounted","getOrderDetail","methods","then","res","formatOrderId","row","index","orderId","setCellClassName","rowIndex"],"sourceRoot":"","sources":["D:\\Dev\\Front\\finalProject\\src\\views\\Admin\\order.vue"],"sourcesContent":["<template>\r\n  <el-card class=\"box-card\">\r\n    <el-table :data=\"list\" style=\"width: 100%\">\r\n      <el-table-column\r\n        prop=\"orderId\"\r\n        label=\"ID\"\r\n        width=\"300\"\r\n        :formatter=\"formatOrderId\"\r\n        :class-name=\"setCellClassName\"\r\n      />\r\n      <el-table-column prop=\"medicineName\" label=\"物品明细\" width=\"300\" />\r\n      <el-table-column prop=\"count\" label=\"数量\" width=\"300\" />\r\n      <el-table-column prop=\"price\" label=\"单价\" width=\"300\" />\r\n    </el-table>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport { get } from \"@/utils/request\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      list: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getOrderDetail();\r\n  },\r\n  methods: {\r\n    getOrderDetail() {\r\n      get(\"http://localhost:8080/allOrderDetail\").then((res) => {\r\n        this.list = res.data.data;\r\n      });\r\n    },\r\n    formatOrderId(row, index) {\r\n      if (index === 0 || row.orderId !== this.list[index - 1].orderId) {\r\n        // 如果是第一行或者和上一行的 orderId 不同，就返回当前 orderId 的值\r\n        return row.orderId;\r\n      }\r\n      // 否则返回空字符串，使单元格合并\r\n      return \"\";\r\n    },\r\n    setCellClassName(row, rowIndex) {\r\n      if (\r\n        rowIndex === 0 ||\r\n        row.orderId !== this.list[rowIndex - 1].orderId\r\n      ) {\r\n        // 如果是第一行或者和上一行的 orderId 不同，就添加一个新的 CSS 类名\r\n        return \"merge-cell\";\r\n      }\r\n      // 否则返回空字符串\r\n      return \"\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n  margin-top: 5px;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  height: 95%;\r\n}\r\n\r\n.merge-cell {\r\n  white-space: nowrap; /* 不换行 */\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}