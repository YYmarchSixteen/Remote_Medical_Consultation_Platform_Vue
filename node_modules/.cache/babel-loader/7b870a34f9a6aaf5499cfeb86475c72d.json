{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"layout\"\n};\nconst _hoisted_2 = {\n  \"slot-scope\": \"scope\"\n};\nconst _hoisted_3 = {\n  class: \"tab_header\"\n};\nconst _hoisted_4 = {\n  style: {\n    \"font-weight\": \"600\"\n  }\n};\nconst _hoisted_5 = {\n  class: \"operate\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_table, {\n    data: $data.res\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"name\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"template\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString(_ctx.scope.row.name), 1\n      /* TEXT */\n      ), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", {\n        onClick: _cache[0] || (_cache[0] = $event => $options.handleEdit(_ctx.scope.$index, _ctx.scope.row))\n      }, \"修改\"), _createElementVNode(\"span\", {\n        onClick: _cache[1] || (_cache[1] = $event => $options.handleDelete(_ctx.scope.$index, _ctx.scope.row))\n      }, \"删除\")])]), _createCommentVNode(\" 这里要实现 多个表格共用一个表头，故需做判断，当表格要渲染的数据为default这个数组的时候，才显示表头的label值 \"), _createCommentVNode(\" 注意：当label无值的时候，还是会占用空间，故当前表格在页面上会出现一个代表表头的空行，需要手动更改（重写）Element表格的 thead样式 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.scope.row.ext, item => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: item.id\n        }, [_createVNode(_component_el_table, {\n          data: item,\n          border: \"\",\n          class: _normalizeClass(item !== _ctx.scope.row.ext.default ? 'tab-thead-style' : ''),\n          style: {\n            \"box-sizing\": \"border-box\",\n            \"border-top\": \"none\"\n          },\n          \"span-method\": $options.objectSpanMethod\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            label: item === _ctx.scope.row.ext.default ? '运送到' : '',\n            prop: \"area\"\n          }, null, 8\n          /* PROPS */\n          , [\"label\"]), _createVNode(_component_el_table_column, {\n            label: item === _ctx.scope.row.ext.default ? '首重' : '',\n            prop: \"weight\"\n          }, null, 8\n          /* PROPS */\n          , [\"label\"]), _createVNode(_component_el_table_column, {\n            label: item === _ctx.scope.row.ext.default ? '运费' : '',\n            prop: \"first_price\"\n          }, null, 8\n          /* PROPS */\n          , [\"label\"]), _createVNode(_component_el_table_column, {\n            label: item === _ctx.scope.row.ext.default ? '续重' : '',\n            prop: \"weight_incre\"\n          }, null, 8\n          /* PROPS */\n          , [\"label\"]), _createVNode(_component_el_table_column, {\n            label: item === _ctx.scope.row.ext.default ? '最终运费' : '',\n            prop: \"extend_price\"\n          }, null, 8\n          /* PROPS */\n          , [\"label\"])]),\n          _: 2\n          /* DYNAMIC */\n\n        }, 1032\n        /* PROPS, DYNAMIC_SLOTS */\n        , [\"data\", \"class\", \"span-method\"])]);\n      }), 128\n      /* KEYED_FRAGMENT */\n      ))])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\"])]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;AAGK,gBAAW;;;AACdA,OAAK,EAAC;;;AACHC,OAAwB,EAAxB;AAAA;AAAA;;;AACDD,OAAK,EAAC;;;;;;;uBANrBE,oBAgDM,KAhDN,cAgDM,CA/CJC,aA8CWC,mBA9CX,EA8CW;AA9CAC,QAAI,EAAEC;AA8CN,GA9CX,EAAoB;sBAClB,MA4CkB,CA5ClBH,aA4CkBI,0BA5ClB,EA4CkB;AA5CDC,UAAI,EAAC;AA4CJ,KA5ClB,EAA4B;wBAC1B,MA0CW,CA1CXC,oBA0CW,UA1CX,cA0CW,CAzCTA,oBAMM,KANN,cAMM,CALJA,oBAA0D,MAA1D,cAA0DC,iBAAxBC,WAAMC,GAAN,CAAUC,IAAc,CAA1D,EAAgD;AAAA;AAAhD,OAKI,EAJJJ,oBAGM,KAHN,cAGM,CAFJA,oBAA4D,MAA5D,EAA4D;AAArDK,eAAK,sCAAEC,oBAAWJ,WAAMK,MAAjB,EAAyBL,WAAMC,GAA/B,CAAF;AAAgD,OAA5D,EAAmD,IAAnD,CAEI,EADJH,oBAA8D,MAA9D,EAA8D;AAAvDK,eAAK,sCAAEC,sBAAaJ,WAAMK,MAAnB,EAA2BL,WAAMC,GAAjC,CAAF;AAAkD,OAA9D,EAAqD,IAArD,CACI,CAHN,CAII,CANN,CAyCS,EAjCTK,qFAiCS,EAhCTA,kGAgCS,qBA9BTf,oBA6BMgB,SA7BN,EA6BM,IA7BN,EA6BMC,YA7BcR,WAAMC,GAAN,CAAUQ,GA6BxB,EA7BMC,IAAqB,IAAjB;6BAAhBnB,oBA6BM,KA7BN,EA6BM;AA7B8BoB,aAAG,EAAED,IAAI,CAACE;AA6BxC,SA7BN,GACEpB,aA2BWC,mBA3BX,EA2BW;AA1BRC,cAAI,EAAEgB,IA0BE;AAzBTG,gBAAM,EAAN,EAyBS;AAxBRxB,eAAK,kBAAEqB,IAAI,KAAKV,WAAMC,GAAN,CAAUQ,GAAV,CAAcK,OAAvB,GAA8B,iBAA9B,GAA8B,EAAhC,CAwBG;AAvBTxB,eAAgD,EAAhD;AAAA;AAAA;AAAA,WAuBS;AAtBR,yBAAac;AAsBL,SA3BX;4BAOE,MAGmB,CAHnBZ,aAGmBI,0BAHnB,EAGmB;AAFhBmB,iBAAK,EAAEL,IAAI,KAAKV,WAAMC,GAAN,CAAUQ,GAAV,CAAcK,OAAvB,GAA8B,KAA9B,GAA8B,EAErB;AADjBjB,gBAAI,EAAC;AACY,WAHnB;;AAAA,sBAGmB,EACnBL,aAGmBI,0BAHnB,EAGmB;AAFhBmB,iBAAK,EAAEL,IAAI,KAAKV,WAAMC,GAAN,CAAUQ,GAAV,CAAcK,OAAvB,GAA8B,IAA9B,GAA8B,EAErB;AADjBjB,gBAAI,EAAC;AACY,WAHnB;;AAAA,sBADmB,EAKnBL,aAGmBI,0BAHnB,EAGmB;AAFhBmB,iBAAK,EAAEL,IAAI,KAAKV,WAAMC,GAAN,CAAUQ,GAAV,CAAcK,OAAvB,GAA8B,IAA9B,GAA8B,EAErB;AADjBjB,gBAAI,EAAC;AACY,WAHnB;;AAAA,sBALmB,EASnBL,aAGmBI,0BAHnB,EAGmB;AAFhBmB,iBAAK,EAAEL,IAAI,KAAKV,WAAMC,GAAN,CAAUQ,GAAV,CAAcK,OAAvB,GAA8B,IAA9B,GAA8B,EAErB;AADjBjB,gBAAI,EAAC;AACY,WAHnB;;AAAA,sBATmB,EAanBL,aAGmBI,0BAHnB,EAGmB;AAFhBmB,iBAAK,EAAEL,IAAI,KAAKV,WAAMC,GAAN,CAAUQ,GAAV,CAAcK,OAAvB,GAA8B,MAA9B,GAA8B,EAErB;AADjBjB,gBAAI,EAAC;AACY,WAHnB;;AAAA,sBAbmB;;;;SAVrB;;AAAA,4CADF;OA6BM,CA7BN;;AAAA,OA8BS,EA1CX,CA0CW,EA3Ce;;;;AAAA,KAA5B,CA4CkB,EA7CA;;;;AAAA,GAApB;;AAAA,aA+CI,CAhDN","names":["class","style","_createElementBlock","_createVNode","_component_el_table","data","$data","_component_el_table_column","prop","_createElementVNode","_toDisplayString","_ctx","row","name","onClick","$options","$index","_createCommentVNode","_Fragment","_renderList","ext","item","key","id","border","default","label"],"sourceRoot":"","sources":["D:\\小学期vscode\\demo01\\src\\views\\Department\\demo.vue"],"sourcesContent":["<template>\r\n  <div class=\"layout\">\r\n    <el-table :data=\"res\">\r\n      <el-table-column prop=\"name\">\r\n        <template slot-scope=\"scope\">\r\n          <div class=\"tab_header\">\r\n            <span style=\"font-weight: 600\">{{ scope.row.name }}</span>\r\n            <div class=\"operate\">\r\n              <span @click=\"handleEdit(scope.$index, scope.row)\">修改</span>\r\n              <span @click=\"handleDelete(scope.$index, scope.row)\">删除</span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 这里要实现 多个表格共用一个表头，故需做判断，当表格要渲染的数据为default这个数组的时候，才显示表头的label值 -->\r\n          <!-- 注意：当label无值的时候，还是会占用空间，故当前表格在页面上会出现一个代表表头的空行，需要手动更改（重写）Element表格的 thead样式 -->\r\n\r\n          <div v-for=\"item in scope.row.ext\" :key=\"item.id\">\r\n            <el-table\r\n              :data=\"item\"\r\n              border\r\n              :class=\"item !== scope.row.ext.default ? 'tab-thead-style' : ''\"\r\n              style=\"box-sizing: border-box; border-top: none\"\r\n              :span-method=\"objectSpanMethod\"\r\n            >\r\n              <el-table-column\r\n                :label=\"item === scope.row.ext.default ? '运送到' : ''\"\r\n                prop=\"area\"\r\n              ></el-table-column>\r\n              <el-table-column\r\n                :label=\"item === scope.row.ext.default ? '首重' : ''\"\r\n                prop=\"weight\"\r\n              ></el-table-column>\r\n              <el-table-column\r\n                :label=\"item === scope.row.ext.default ? '运费' : ''\"\r\n                prop=\"first_price\"\r\n              ></el-table-column>\r\n              <el-table-column\r\n                :label=\"item === scope.row.ext.default ? '续重' : ''\"\r\n                prop=\"weight_incre\"\r\n              ></el-table-column>\r\n              <el-table-column\r\n                :label=\"item === scope.row.ext.default ? '最终运费' : ''\"\r\n                prop=\"extend_price\"\r\n              ></el-table-column>\r\n            </el-table>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // res 参考的是后端返回的数据格式，\r\n      res: [\r\n        {\r\n          id: 1,\r\n          dealer_id: 0,\r\n          name: '成都运费模板',\r\n          type: 1,\r\n          ext: {\r\n            default: [\r\n              {\r\n                area: '默认',\r\n                type: 1,\r\n                region: '1',\r\n                weight: '首重d',\r\n                weight_incre: '续重d',\r\n                first_price: '运费d',\r\n                extend_price: '最终运费d'\r\n              }\r\n            ],\r\n            free: [\r\n              {\r\n                area: 'free',\r\n                type: 1,\r\n                region: '1',\r\n                weight: '首重f',\r\n                weight_incre: '续重f',\r\n                first_price: '运费f',\r\n                extend_price: '最终运费f'\r\n              },\r\n              {\r\n                area: 'free',\r\n                type: 1,\r\n                region: '1',\r\n                weight: '首重f',\r\n                weight_incre: '续重f',\r\n                first_price: '运费f',\r\n                extend_price: '最终运费f'\r\n              }\r\n            ],\r\n            pay: [\r\n              {\r\n                area: 'pay',\r\n                type: 1,\r\n                region: '1',\r\n                weight: '首重p',\r\n                weight_incre: '续重p',\r\n                first_price: '运费p',\r\n                extend_price: '最终运费p'\r\n              },\r\n              {\r\n                area: 'pay',\r\n                type: 1,\r\n                region: '1',\r\n                weight: '首重p',\r\n                weight_incre: '续重p',\r\n                first_price: '运费p',\r\n                extend_price: '最终运费p'\r\n              },\r\n              {\r\n                area: 'pay',\r\n                type: 1,\r\n                region: '1',\r\n                weight: '首重p',\r\n                weight_incre: '续重p',\r\n                first_price: '运费p',\r\n                extend_price: '最终运费p'\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        {\r\n          id: 2,\r\n          dealer_id: 0,\r\n          name: '重庆运费模板',\r\n          type: 2,\r\n          ext: {\r\n            default: [\r\n              {\r\n                area: '默认1',\r\n                type: 1,\r\n                region: '1',\r\n                weight: '首重d',\r\n                weight_incre: '续重d',\r\n                first_price: '运费d',\r\n                extend_price: '最终运费d'\r\n              }\r\n            ],\r\n            free: [\r\n              {\r\n                area: 'free1',\r\n                type: 1,\r\n                region: '1',\r\n                weight: '首重f',\r\n                weight_incre: '续重f',\r\n                first_price: '运费f',\r\n                extend_price: '最终运费f'\r\n              },\r\n              {\r\n                area: 'free',\r\n                type: 1,\r\n                region: '1',\r\n                weight: '首重f',\r\n                weight_incre: '续重f',\r\n                first_price: '运费f',\r\n                extend_price: '最终运费f'\r\n              }\r\n            ],\r\n            pay: [\r\n              {\r\n                area: 'pay1',\r\n                type: 1,\r\n                region: '1',\r\n                weight: '首重p',\r\n                weight_incre: '续重p',\r\n                first_price: '运费p',\r\n                extend_price: '最终运费p'\r\n              },\r\n              {\r\n                area: 'pay',\r\n                type: 1,\r\n                region: '1',\r\n                weight: '首重p',\r\n                weight_incre: '续重p',\r\n                first_price: '运费p',\r\n                extend_price: '最终运费p'\r\n              },\r\n              {\r\n                area: 'pay',\r\n                type: 1,\r\n                region: '1',\r\n                weight: '首重p',\r\n                weight_incre: '续重p',\r\n                first_price: '运费p',\r\n                extend_price: '最终运费p'\r\n              },\r\n              {\r\n                area: 'pay1',\r\n                type: 1,\r\n                region: '1',\r\n                weight: '首重p',\r\n                weight_incre: '续重p',\r\n                first_price: '运费p',\r\n                extend_price: '最终运费p'\r\n              },\r\n              {\r\n                area: 'pay',\r\n                type: 1,\r\n                region: '1',\r\n                weight: '首重p',\r\n                weight_incre: '续重p',\r\n                first_price: '运费p',\r\n                extend_price: '最终运费p'\r\n              },\r\n              {\r\n                area: 'pay',\r\n                type: 1,\r\n                region: '1',\r\n                weight: '首重p',\r\n                weight_incre: '续重p',\r\n                first_price: '运费p',\r\n                extend_price: '最终运费p'\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    handleEdit(index, row) {\r\n      console.log(index, row)\r\n    },\r\n    handleDelete(index, row) {\r\n      console.log(index, row)\r\n    },\r\n    objectSpanMethod({ row, column, rowIndex, columnIndex }) {\r\n      if (columnIndex === 0) {\r\n        if (rowIndex === 0) {\r\n          let maxLen\r\n          this.res.forEach((val) => {\r\n            const arr = [\r\n              val.ext.default.length,\r\n              val.ext.free.length,\r\n              val.ext.pay.length\r\n            ]\r\n            arr.sort((a, b) => a - b) // arr数组  按数字大小从小到大排序\r\n            maxLen = arr.pop() // 取出排序后的数组arr中的最后一个元素\r\n          })\r\n          return {\r\n            // 这个rowspan应该据 ext的default,pay,free的长度不同来定，取最大长度\r\n            rowspan: maxLen,\r\n            colspan: 1\r\n          }\r\n        } else {\r\n          return {\r\n            rowspan: 0,\r\n            colspan: 0\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.layout {\r\n  .tab_header {\r\n    color: #333;\r\n    padding: 0 5px 0 5px;\r\n    height: 45px;\r\n    line-height: 45px;\r\n    border: 1px solid #eee;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background: rgb(233, 225, 225);\r\n  }\r\n  .operate {\r\n    span {\r\n      font-size: 14px;\r\n      margin-right: 20px;\r\n      margin-right: 20px;\r\n      color: #409eff;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  /* 处理多个表格共用一个表头时，表头处出现多余空行的问题 （label置空后还是占据空间问题） */\r\n  .tab-thead-style {\r\n    thead {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}