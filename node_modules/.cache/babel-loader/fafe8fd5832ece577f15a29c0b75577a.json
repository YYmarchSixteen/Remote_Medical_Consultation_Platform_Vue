{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-c2f1a09c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" 预约 \");\n\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_date_picker, {\n    modelValue: $data.selectedDate,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedDate = $event),\n    type: \"date\",\n    placeholder: \"选择日期\",\n    onChange: $options.fetchReservations\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\", \"onChange\"]), $data.reservations.length > 0 ? (_openBlock(), _createBlock(_component_el_table, {\n    key: 0,\n    data: $data.reservations,\n    border: \"\",\n    stripe: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      label: \"时间\"\n    }, {\n      default: _withCtx(scope => [_createTextVNode(_toDisplayString(scope.row.time), 1\n      /* TEXT */\n      )]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_table_column, {\n      label: \"状态\"\n    }, {\n      default: _withCtx(scope => [scope.row.status === 'reserved' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"已预约\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"未预约\"))]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: _cache[1] || (_cache[1] = $event => $options.reserveTime())\n      }, {\n        default: _withCtx(() => [_hoisted_4]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\"])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \"暂无预约信息\"))]);\n}","map":{"version":3,"mappings":";;;;;AACOA,OAAK,EAAC;;;;;;;;;iDAiB2D;;;;;;;;;;;;;;uBAjBtEC,oBAwBM,KAxBN,cAwBM,CAvBJC,aAAmHC,yBAAnH,EAAmH;gBAA1FC,kBAA0F;+DAA1FA,qBAAYC,OAA8E;AAA5EC,QAAI,EAAC,MAAuE;AAAhEC,eAAW,EAAC,MAAoD;AAA5CC,YAAM,EAAEC;AAAoC,GAAnH;;AAAA,+BAuBI,EArB+CL,mBAAaM,MAAb,GAAmB,mBAAtEC,aAmBWC,mBAnBX,EAmBW;UAAA;AAnBAC,QAAI,EAAET,kBAmBN;AAnBoBU,UAAM,EAAN,EAmBpB;AAnB2BC,UAAM,EAAN;AAmB3B,GAnBX;sBACE,MAIkB,CAJlBb,aAIkBc,0BAJlB,EAIkB;AAJDC,WAAK,EAAC;AAIL,KAJlB,EAA2B;wBACPC,KAChB,IADqB,mCAClBA,KAAK,CAACC,GAAN,CAAUC,OAAI;AAAA;OADI,EADE;;;;AAAA,KAA3B,CAIkB,EAClBlB,aAKkBc,0BALlB,EAKkB;AALDC,WAAK,EAAC;AAKL,KALlB,EAA2B;wBACPC,KAChB,IADqB,CACTA,KAAK,CAACC,GAAN,CAAUE,MAAV,KAAgB,4BAA5BpB,oBAAuD,MAAvD,EAAuDqB,UAAvD,EAA6C,KAA7C,oBACArB,oBAAuB,MAAvB,EAAuBsB,UAAvB,EAAa,KAAb,EAFqB,EADE;;;;AAAA,KAA3B,CADkB,EAOlBrB,aAMkBc,0BANlB,EAMkB;AANDC,WAAK,EAAC;AAML,KANlB,EAA2B;wBACPC,KAChB,IADqB,CACrBhB,aAEYsB,oBAFZ,EAEY;AAFDlB,YAAI,EAAC,SAEJ;AAFcmB,YAAI,EAAC,OAEnB;AAF4BC,eAAK,sCAAEjB,sBAAF;AAEjC,OAFZ;0BAA8D,MAE9D;;;;OAFA,CADqB,EADE;;;;AAAA,KAA3B,CAPkB;;;;GALpB;;AAAA,gCAoBAR,oBAAoB,GAApB,EAAoB0B,UAApB,EAAU,QAAV,EACI,CAxBN","names":["class","_createElementBlock","_createVNode","_component_el_date_picker","$data","$event","type","placeholder","onChange","$options","length","_createBlock","_component_el_table","data","border","stripe","_component_el_table_column","label","scope","row","time","status","_hoisted_2","_hoisted_3","_component_el_button","size","onClick","_hoisted_5"],"sourceRoot":"","sources":["D:\\Dev\\Front\\Remote_Medical_Consultation_Platform_Vue\\src\\views\\User\\reserve.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <el-date-picker v-model=\"selectedDate\" type=\"date\" placeholder=\"选择日期\" @change=\"fetchReservations\"></el-date-picker>\r\n\r\n    <el-table :data=\"reservations\" border stripe v-if=\"reservations.length > 0\">\r\n      <el-table-column label=\"时间\">\r\n        <template v-slot=\"scope\">\r\n          {{ scope.row.time }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"状态\">\r\n        <template v-slot=\"scope\">\r\n          <span v-if=\"scope.row.status === 'reserved'\">已预约</span>\r\n          <span v-else>未预约</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\">\r\n        <template v-slot=\"scope\">\r\n          <el-button type=\"primary\" size=\"small\" @click=\"reserveTime()\">\r\n            预约\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <p v-else>暂无预约信息</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedDate: '',\r\n      reservations: [],\r\n      doctorId: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.doctorId = this.$route.params.doctorId;\r\n  },\r\n  methods: {\r\n    async fetchReservations() {\r\n      try {\r\n        const formattedDate = this.formatDate(this.selectedDate);\r\n        const response = await axios.get(`http://localhost:8081/reserve/all?doctorId=${this.doctorId}&reserveTime=${formattedDate}`);\r\n        this.reservations = response.data.data;\r\n      } catch (error) {\r\n        console.error('Error fetching reservations:', error);\r\n      }\r\n    },formatDate(date) {\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, '0');\r\n      const day = String(date.getDate()).padStart(2, '0');\r\n      return `${year}-${month}-${day}`;\r\n    },\r\n    async reserveTime() {\r\n      try {\r\n      } catch (error) {\r\n        console.error('Error reserving time:', error);\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  margin: 20px auto;\r\n  max-width: 800px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}